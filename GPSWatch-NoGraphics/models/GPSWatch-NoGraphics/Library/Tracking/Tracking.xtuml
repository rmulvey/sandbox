-- BP 7.1.6 content: Component syschar: 3 persistence-version: 7.1.6

INSERT INTO C_C
	VALUES ("308da00e-a7b7-4924-b832-34bd605b3534",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000",
	'Tracking',
	'The Tracking component encapsulates the entire application software. This is the 
only component in the system from which code will be generated for the final 
product.',
	0,
	"00000000-0000-0000-0000-000000000000",
	0,
	'');
INSERT INTO C_PO
	VALUES ("b469bea3-09bd-49a5-9763-d426a4a4142e",
	"308da00e-a7b7-4924-b832-34bd605b3534",
	'LOC',
	0,
	0);
INSERT INTO C_IR
	VALUES ("f1824bff-8088-4dd8-9758-34216123a2f5",
	"97491101-3f13-4f43-a85c-aab67480569a",
	"00000000-0000-0000-0000-000000000000",
	"b469bea3-09bd-49a5-9763-d426a4a4142e");
INSERT INTO C_R
	VALUES ("f1824bff-8088-4dd8-9758-34216123a2f5",
	'LocationProvider',
	'',
	'Unnamed Interface',
	'Tracking::LOC::LocationProvider');
INSERT INTO SPR_REP
	VALUES ("ff55b88b-8c7a-4f2e-b606-b6dd0e4a6a60",
	"64885dbf-a415-4273-97f7-feb32fbf475d",
	"f1824bff-8088-4dd8-9758-34216123a2f5");
INSERT INTO SPR_RS
	VALUES ("ff55b88b-8c7a-4f2e-b606-b6dd0e4a6a60",
	'registerListener',
	'',
	'',
	1);
INSERT INTO C_EP_PROXY
	VALUES ("64885dbf-a415-4273-97f7-feb32fbf475d",
	"97491101-3f13-4f43-a85c-aab67480569a",
	-1,
	'registerListener',
	'',
	'../../LocationInterfaces/LocationProvider/LocationProvider.xtuml');
INSERT INTO SPR_REP
	VALUES ("e824dbfe-71c3-426d-bedb-3db3b2fe0d11",
	"a4ecc9e5-75f0-4300-993f-4106e7efa9be",
	"f1824bff-8088-4dd8-9758-34216123a2f5");
INSERT INTO SPR_RS
	VALUES ("e824dbfe-71c3-426d-bedb-3db3b2fe0d11",
	'unregisterListener',
	'',
	'',
	1);
INSERT INTO C_EP_PROXY
	VALUES ("a4ecc9e5-75f0-4300-993f-4106e7efa9be",
	"97491101-3f13-4f43-a85c-aab67480569a",
	-1,
	'unregisterListener',
	'',
	'../../LocationInterfaces/LocationProvider/LocationProvider.xtuml');
INSERT INTO SPR_REP
	VALUES ("e3cf6b17-3a5a-4a4e-9793-4fee5d0149fd",
	"dc50988f-4d64-4961-961d-3f6f6f3a747f",
	"f1824bff-8088-4dd8-9758-34216123a2f5");
INSERT INTO SPR_RO
	VALUES ("e3cf6b17-3a5a-4a4e-9793-4fee5d0149fd",
	'getLocation',
	'',
	'',
	1);
INSERT INTO C_EP_PROXY
	VALUES ("dc50988f-4d64-4961-961d-3f6f6f3a747f",
	"97491101-3f13-4f43-a85c-aab67480569a",
	-1,
	'getLocation',
	'',
	'../../LocationInterfaces/LocationProvider/LocationProvider.xtuml');
INSERT INTO C_I_PROXY
	VALUES ("97491101-3f13-4f43-a85c-aab67480569a",
	"00000000-0000-0000-0000-000000000000",
	'LocationProvider',
	'',
	'../../LocationInterfaces/LocationProvider/LocationProvider.xtuml');
INSERT INTO C_PO
	VALUES ("0c8ffbbc-7414-4694-bc2e-8a4e81d73d70",
	"308da00e-a7b7-4924-b832-34bd605b3534",
	'UI',
	0,
	0);
INSERT INTO C_IR
	VALUES ("e4a589af-860e-4b8e-9cea-74207141cf95",
	"137804a2-cc70-4699-b997-945bb262d075",
	"00000000-0000-0000-0000-000000000000",
	"0c8ffbbc-7414-4694-bc2e-8a4e81d73d70");
INSERT INTO C_R
	VALUES ("e4a589af-860e-4b8e-9cea-74207141cf95",
	'UI',
	'',
	'Unnamed Interface',
	'Tracking::UI::UI');
INSERT INTO SPR_REP
	VALUES ("aa313f18-8ca5-4050-b7f7-a2fbb5247317",
	"77e380a4-5ca9-4563-a4d5-da5e3d415460",
	"e4a589af-860e-4b8e-9cea-74207141cf95");
INSERT INTO SPR_RS
	VALUES ("aa313f18-8ca5-4050-b7f7-a2fbb5247317",
	'lapResetPressed',
	'',
	'// Find the singleton instance of the workout timer 
// and forward this signal, as an event, to it.

select any workoutTimer from instances of WorkoutTimer;
if (not empty workoutTimer)
  generate WorkoutTimer2:lapResetPressed() to workoutTimer;
else
  LOG::LogFailure( message:"Tracking:UI:lapResetPressed - No WorkoutTimer, so nothing to do." );
end if;
',
	1);
INSERT INTO C_EP_PROXY
	VALUES ("77e380a4-5ca9-4563-a4d5-da5e3d415460",
	"137804a2-cc70-4699-b997-945bb262d075",
	-1,
	'lapResetPressed',
	'',
	'../../UIInterfaces/UI/UI.xtuml');
INSERT INTO SPR_REP
	VALUES ("5cb82e13-895b-47b4-babd-640d47edbbf2",
	"117a7b4b-2e13-4b25-be1c-75138a74b543",
	"e4a589af-860e-4b8e-9cea-74207141cf95");
INSERT INTO SPR_RS
	VALUES ("5cb82e13-895b-47b4-babd-640d47edbbf2",
	'startStopPressed',
	'',
	'// If necessary, create a workout session and everything required to 
// support it.  Then, forward this signal to the workout timer.

WorkoutSession::create();

// Forward this signal, as an event, to the singleton instance of WorkoutTimer.
select any workoutTimer from instances of WorkoutTimer;
generate WorkoutTimer1:startStopPressed() to workoutTimer;',
	1);
INSERT INTO C_EP_PROXY
	VALUES ("117a7b4b-2e13-4b25-be1c-75138a74b543",
	"137804a2-cc70-4699-b997-945bb262d075",
	-1,
	'startStopPressed',
	'',
	'../../UIInterfaces/UI/UI.xtuml');
INSERT INTO SPR_REP
	VALUES ("9959d2b6-e29e-46d5-8b73-77b10e8b27e0",
	"5daf9c2d-89f7-4b29-be0d-cef313729f10",
	"e4a589af-860e-4b8e-9cea-74207141cf95");
INSERT INTO SPR_RS
	VALUES ("9959d2b6-e29e-46d5-8b73-77b10e8b27e0",
	'lightPressed',
	'',
	'',
	1);
INSERT INTO C_EP_PROXY
	VALUES ("5daf9c2d-89f7-4b29-be0d-cef313729f10",
	"137804a2-cc70-4699-b997-945bb262d075",
	-1,
	'lightPressed',
	'',
	'../../UIInterfaces/UI/UI.xtuml');
INSERT INTO SPR_REP
	VALUES ("a2b8593e-769a-45f2-bdf0-5bd6694fc6c9",
	"61659283-62a1-417a-b5a9-b52061d1850d",
	"e4a589af-860e-4b8e-9cea-74207141cf95");
INSERT INTO SPR_RS
	VALUES ("a2b8593e-769a-45f2-bdf0-5bd6694fc6c9",
	'modePressed',
	'',
	'// Notify the display to change modes.

// Find the display related to the singleton instance of 
//   workout session (if it exists), and notify it.
select any session from instances of WorkoutSession;
if ( not empty session )
  select one display related by session->Display[R7.''current status indicated on''];
  generate Display1:modeChange to display;
end if;',
	1);
INSERT INTO C_EP_PROXY
	VALUES ("61659283-62a1-417a-b5a9-b52061d1850d",
	"137804a2-cc70-4699-b997-945bb262d075",
	-1,
	'modePressed',
	'',
	'../../UIInterfaces/UI/UI.xtuml');
INSERT INTO SPR_REP
	VALUES ("15bc2995-6324-4f8d-a18f-97592126f85e",
	"71c0b484-78fd-495f-92e7-a64d9ea3df42",
	"e4a589af-860e-4b8e-9cea-74207141cf95");
INSERT INTO SPR_RS
	VALUES ("15bc2995-6324-4f8d-a18f-97592126f85e",
	'setTargetPressed',
	'',
	'// If a goal is currently executing, advance to the next one,
//   otherwise start the first specified goal, if it exists.
Goal::nextGoal();',
	1);
INSERT INTO C_EP_PROXY
	VALUES ("71c0b484-78fd-495f-92e7-a64d9ea3df42",
	"137804a2-cc70-4699-b997-945bb262d075",
	-1,
	'setTargetPressed',
	'',
	'../../UIInterfaces/UI/UI.xtuml');
INSERT INTO SPR_REP
	VALUES ("ad0a7078-f958-4a0c-a74a-55acfab85293",
	"6573c719-c947-49cb-88b8-c719f0818d7d",
	"e4a589af-860e-4b8e-9cea-74207141cf95");
INSERT INTO SPR_RO
	VALUES ("ad0a7078-f958-4a0c-a74a-55acfab85293",
	'setTime',
	'',
	'',
	1);
INSERT INTO C_EP_PROXY
	VALUES ("6573c719-c947-49cb-88b8-c719f0818d7d",
	"137804a2-cc70-4699-b997-945bb262d075",
	-1,
	'setTime',
	'',
	'../../UIInterfaces/UI/UI.xtuml');
INSERT INTO SPR_REP
	VALUES ("8501a7a9-77a8-4bf1-b3a8-2d7e0bdc4b9a",
	"bceb5189-9e7f-40c2-8e66-8a420decd2e5",
	"e4a589af-860e-4b8e-9cea-74207141cf95");
INSERT INTO SPR_RO
	VALUES ("8501a7a9-77a8-4bf1-b3a8-2d7e0bdc4b9a",
	'setData',
	'',
	'',
	1);
INSERT INTO C_EP_PROXY
	VALUES ("bceb5189-9e7f-40c2-8e66-8a420decd2e5",
	"137804a2-cc70-4699-b997-945bb262d075",
	-1,
	'setData',
	'',
	'../../UIInterfaces/UI/UI.xtuml');
INSERT INTO SPR_REP
	VALUES ("c1507899-ba54-4e16-bbf1-e4c06b097f7a",
	"9be1088e-f072-4df8-a585-01762c90c718",
	"e4a589af-860e-4b8e-9cea-74207141cf95");
INSERT INTO SPR_RO
	VALUES ("c1507899-ba54-4e16-bbf1-e4c06b097f7a",
	'startTest',
	'',
	'',
	1);
INSERT INTO C_EP_PROXY
	VALUES ("9be1088e-f072-4df8-a585-01762c90c718",
	"137804a2-cc70-4699-b997-945bb262d075",
	-1,
	'startTest',
	'',
	'../../UIInterfaces/UI/UI.xtuml');
INSERT INTO SPR_REP
	VALUES ("3af794b1-7722-468d-8b9a-eec222fccc38",
	"77c3c857-2262-460a-afd3-1fd843eaee3d",
	"e4a589af-860e-4b8e-9cea-74207141cf95");
INSERT INTO SPR_RO
	VALUES ("3af794b1-7722-468d-8b9a-eec222fccc38",
	'setIndicator',
	'',
	'',
	1);
INSERT INTO C_EP_PROXY
	VALUES ("77c3c857-2262-460a-afd3-1fd843eaee3d",
	"137804a2-cc70-4699-b997-945bb262d075",
	-1,
	'setIndicator',
	'',
	'../../UIInterfaces/UI/UI.xtuml');
INSERT INTO SPR_REP
	VALUES ("13a3616a-0213-42c7-8ef1-756fe9d3525b",
	"117fb33d-b877-4627-b7d0-6473d24fe772",
	"e4a589af-860e-4b8e-9cea-74207141cf95");
INSERT INTO SPR_RS
	VALUES ("13a3616a-0213-42c7-8ef1-756fe9d3525b",
	'newGoalSpec',
	'',
	'// Create a new goal specification and relate it to the
//   singleton instance of workout session if it exists.
select any session from instances of WorkoutSession;
if ( not empty session )
  create object instance goalSpec of GoalSpec;
  goalSpec.sequenceNumber = param.sequenceNumber;
  goalSpec.minimum = param.minimum;
  goalSpec.maximum = param.maximum;
  goalSpec.span = param.span;
  goalSpec.criteriaType = param.criteriaType;
  goalSpec.spanType = param.spanType;
  relate goalSpec to session across R10.''included in'';
end if;',
	1);
INSERT INTO C_EP_PROXY
	VALUES ("117fb33d-b877-4627-b7d0-6473d24fe772",
	"137804a2-cc70-4699-b997-945bb262d075",
	-1,
	'newGoalSpec',
	'',
	'../../UIInterfaces/UI/UI.xtuml');
INSERT INTO C_I_PROXY
	VALUES ("137804a2-cc70-4699-b997-945bb262d075",
	"00000000-0000-0000-0000-000000000000",
	'UI',
	'',
	'../../UIInterfaces/UI/UI.xtuml');
INSERT INTO C_PO
	VALUES ("5fcc1d2c-3656-4064-b0d9-ab7ca00721cd",
	"308da00e-a7b7-4924-b832-34bd605b3534",
	'HR',
	0,
	0);
INSERT INTO C_IR
	VALUES ("da8688ee-e09a-43bd-a945-abc3b3ecb9ac",
	"24c9a13a-1135-4a78-a503-9a85fb05f495",
	"00000000-0000-0000-0000-000000000000",
	"5fcc1d2c-3656-4064-b0d9-ab7ca00721cd");
INSERT INTO C_R
	VALUES ("da8688ee-e09a-43bd-a945-abc3b3ecb9ac",
	'HeartRateProvider',
	'',
	'Unnamed Interface',
	'Tracking::HR::HeartRateProvider');
INSERT INTO SPR_REP
	VALUES ("739b7704-1ec5-41df-82af-d582c0211b64",
	"aa8b4e07-0f8c-431f-90f7-fda756454bc2",
	"da8688ee-e09a-43bd-a945-abc3b3ecb9ac");
INSERT INTO SPR_RS
	VALUES ("739b7704-1ec5-41df-82af-d582c0211b64",
	'heartRateChanged',
	'',
	'// Find the singleton instance of the workout session
// and forward this signal, as an event, to it.
// If there is no active workout session, then this 
// sample is simply ignored and not recorded.

select any session from instances of WorkoutSession;
if (not empty session)
  session.addHeartRateSample(heartRate: param.heartRate);
end if;',
	1);
INSERT INTO C_EP_PROXY
	VALUES ("aa8b4e07-0f8c-431f-90f7-fda756454bc2",
	"24c9a13a-1135-4a78-a503-9a85fb05f495",
	-1,
	'heartRateChanged',
	'',
	'../../HeartRateMonitorInterfaces/HeartRateProvider/HeartRateProvider.xtuml');
INSERT INTO SPR_REP
	VALUES ("fba6f3d2-60df-4608-9f4e-4234d2a11d4b",
	"9d6b897f-52d7-41a7-808e-09426d405f32",
	"da8688ee-e09a-43bd-a945-abc3b3ecb9ac");
INSERT INTO SPR_RS
	VALUES ("fba6f3d2-60df-4608-9f4e-4234d2a11d4b",
	'registerListener',
	'',
	'',
	1);
INSERT INTO C_EP_PROXY
	VALUES ("9d6b897f-52d7-41a7-808e-09426d405f32",
	"24c9a13a-1135-4a78-a503-9a85fb05f495",
	-1,
	'registerListener',
	'',
	'../../HeartRateMonitorInterfaces/HeartRateProvider/HeartRateProvider.xtuml');
INSERT INTO SPR_REP
	VALUES ("dccd702f-17bb-4962-8b01-17309c2df320",
	"29bedeef-7696-4fd3-8d24-b99dd9e06510",
	"da8688ee-e09a-43bd-a945-abc3b3ecb9ac");
INSERT INTO SPR_RS
	VALUES ("dccd702f-17bb-4962-8b01-17309c2df320",
	'unregisterListener',
	'',
	'',
	1);
INSERT INTO C_EP_PROXY
	VALUES ("29bedeef-7696-4fd3-8d24-b99dd9e06510",
	"24c9a13a-1135-4a78-a503-9a85fb05f495",
	-1,
	'unregisterListener',
	'',
	'../../HeartRateMonitorInterfaces/HeartRateProvider/HeartRateProvider.xtuml');
INSERT INTO C_I_PROXY
	VALUES ("24c9a13a-1135-4a78-a503-9a85fb05f495",
	"00000000-0000-0000-0000-000000000000",
	'HeartRateProvider',
	'',
	'../../HeartRateMonitorInterfaces/HeartRateProvider/HeartRateProvider.xtuml');
INSERT INTO C_PO
	VALUES ("1b922b01-2471-4cd3-a03d-6d633d553ca2",
	"308da00e-a7b7-4924-b832-34bd605b3534",
	'UTIL',
	0,
	0);
INSERT INTO C_IR
	VALUES ("887a0b86-074d-4da7-9c01-75b5a884b338",
	"d610f311-0421-46d0-acb4-53c7f5cf1e70",
	"00000000-0000-0000-0000-000000000000",
	"1b922b01-2471-4cd3-a03d-6d633d553ca2");
INSERT INTO C_R
	VALUES ("887a0b86-074d-4da7-9c01-75b5a884b338",
	'LocationUtil',
	'',
	'Unnamed Interface',
	'Tracking::UTIL::LocationUtil');
INSERT INTO SPR_REP
	VALUES ("1bd524ef-6546-4899-bb84-f105ce2fc446",
	"7eeaf3e4-601d-40f6-8f74-661fd047b41e",
	"887a0b86-074d-4da7-9c01-75b5a884b338");
INSERT INTO SPR_RO
	VALUES ("1bd524ef-6546-4899-bb84-f105ce2fc446",
	'getDistance',
	'Returns distance, in kilometers, between the "from" and "to" coordinates passed as parameters.
The coordinates must be passed as decimal degrees.',
	'return 1;',
	0);
INSERT INTO C_EP_PROXY
	VALUES ("7eeaf3e4-601d-40f6-8f74-661fd047b41e",
	"d610f311-0421-46d0-acb4-53c7f5cf1e70",
	-1,
	'getDistance',
	'Returns distance, in kilometers, between the "from" and "to" coordinates passed as parameters.
The coordinates must be passed as decimal degrees.',
	'../../LocationInterfaces/LocationUtil/LocationUtil.xtuml');
INSERT INTO C_I_PROXY
	VALUES ("d610f311-0421-46d0-acb4-53c7f5cf1e70",
	"00000000-0000-0000-0000-000000000000",
	'LocationUtil',
	'',
	'../../LocationInterfaces/LocationUtil/LocationUtil.xtuml');
INSERT INTO PE_PE
	VALUES ("308da00e-a7b7-4924-b832-34bd605b3534",
	1,
	"91416729-ea3a-45c0-ac4f-392f31627711",
	"00000000-0000-0000-0000-000000000000",
	2);
INSERT INTO EP_PKG_PROXY
	VALUES ("91416729-ea3a-45c0-ac4f-392f31627711",
	"80afc8ce-7ef5-4cb7-9e96-f31db674dbfc",
	"80afc8ce-7ef5-4cb7-9e96-f31db674dbfc",
	'Library',
	'// ########## START OAL_1 ##########
// always initialize data
self.currentLocation.longitude = 0.0;
self.currentLocation.latitude  = 0.0;
self.currentLocation.speed     = 0.0;
self.interval                  = 2000000;

LOG::LogInfo(message: "Location listener registered.");

 // start timer based on requested interval
create event instance timeout of GPS3:timeout() to self;
self.timer = TIM::timer_start_recurring(event_inst: timeout, microseconds: self.interval);
// ########### END OAL_1 ###########



// ########## START OAL_2 ##########
// prepare signal data with some dummy values that change over time
self.currentLocation.longitude = self.currentLocation.longitude + 2.0;
self.currentLocation.latitude  = self.currentLocation.latitude  + 3.0;
self.currentLocation.speed     = 
                                (self.currentLocation.latitude - 
                                 self.currentLocation.longitude) / 5.0;

// pass the new location to client component
send LocationProvider::locationUpdate(location: self.currentLocation);
// ########### END OAL_2 ###########



// ########## START OAL_3 ##########
res = TIM::timer_cancel(timer_inst_ref: self.timer);
// ########### END OAL_3 ###########



// ########## START OAL_4 ##########
select any gps from instances of GPS;
if (empty gps)
  // asynchronously create a new instance of GPS
  generate GPS1:registerListener() to GPS creator;
end if;
// ########### END OAL_4 ###########


// ########## START OAL_5 ##########
// forward message to single instance of GPS
select any gps from instances of GPS;
if (not empty gps)
  generate GPS2:unregisterListener() to gps;
end if;
// ########### END OAL_5 ###########


// ########## START OAL_6 ##########
// create an instance of the workout timer if it does not exist
select any workoutTimer from instances of WorkoutTimer;
if (empty workoutTimer)
  create object instance workoutTimer of WorkoutTimer;
end if;

// forward message to the single instance of WorkoutTimer 
generate WorkoutTimer1:startStopPressed() to workoutTimer;
// ########### END OAL_6 ###########



// ########## START OAL_7 ##########
// print the new location to the console
LOG::LogInfo(message: "location updated: ");
LOG::LogReal(message: "longitude", r: param.location.longitude);
LOG::LogReal(message: "latitude",  r: param.location.latitude );
LOG::LogReal(message: "speed",     r: param.location.speed    );
// ########### END OAL_7 ###########
',
	0,
	'../Library.xtuml');
