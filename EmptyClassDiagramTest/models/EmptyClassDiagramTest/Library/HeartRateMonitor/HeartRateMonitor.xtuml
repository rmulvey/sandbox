-- BP 7.1.6 content: Component syschar: 3 persistence-version: 7.1.6

INSERT INTO C_C
	VALUES ("c3da4fef-683a-42ca-9e66-0346704f675b",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000",
	'HeartRateMonitor',
	'Simulates a pulse monitor hardware/firmware. This component is only behavioral and included for testing purposes.',
	0,
	"00000000-0000-0000-0000-000000000000",
	0,
	'');
INSERT INTO GD_MD
	VALUES ("04f7c840-2e7c-4e0f-9054-21477d3cadd2",
	111,
	"c3da4fef-683a-42ca-9e66-0346704f675b",
	98,
	0,
	0,
	1,
	1,
	1,
	12,
	1,
	0,
	0,
	200,
	150,
	0,
	'',
	'EmptyClassDiagramTest::Library::HeartRateMonitor');
INSERT INTO GD_GE
	VALUES ("d419bf7f-eb8b-4254-8a4d-5cafef15b1e9",
	"04f7c840-2e7c-4e0f-9054-21477d3cadd2",
	"c3da4fef-683a-42ca-9e66-0346704f675b",
	103,
	0,
	'EmptyClassDiagramTest::Library::HeartRateMonitor');
INSERT INTO GD_SHP
	VALUES ("d419bf7f-eb8b-4254-8a4d-5cafef15b1e9");
INSERT INTO GD_CTR
	VALUES ("d419bf7f-eb8b-4254-8a4d-5cafef15b1e9");
INSERT INTO DIM_ND
	VALUES (1032.000000,
	800.000000,
	"d419bf7f-eb8b-4254-8a4d-5cafef15b1e9");
INSERT INTO DIM_GE
	VALUES (4100.000000,
	3100.000000,
	"d419bf7f-eb8b-4254-8a4d-5cafef15b1e9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("d419bf7f-eb8b-4254-8a4d-5cafef15b1e9",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_GE
	VALUES ("3b273201-f755-43e2-9f71-e5b6ecc3e045",
	"04f7c840-2e7c-4e0f-9054-21477d3cadd2",
	"45387029-ad9f-4cfa-9496-e691f9d109d7",
	108,
	0,
	'EmptyClassDiagramTest::Library::HeartRateMonitor::HeartRateMonitor');
INSERT INTO GD_SHP
	VALUES ("3b273201-f755-43e2-9f71-e5b6ecc3e045");
INSERT INTO GD_NCS
	VALUES ("3b273201-f755-43e2-9f71-e5b6ecc3e045");
INSERT INTO DIM_ND
	VALUES (200.000000,
	150.000000,
	"3b273201-f755-43e2-9f71-e5b6ecc3e045");
INSERT INTO DIM_GE
	VALUES (4920.000000,
	3100.000000,
	"3b273201-f755-43e2-9f71-e5b6ecc3e045",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("3b273201-f755-43e2-9f71-e5b6ecc3e045",
	0,
	"d419bf7f-eb8b-4254-8a4d-5cafef15b1e9");
INSERT INTO DIM_DIA
	VALUES ("04f7c840-2e7c-4e0f-9054-21477d3cadd2",
	'',
	1.000000,
	0.000000,
	0.000000,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO C_PO
	VALUES ("c44e4847-58c1-44d5-ab08-6ea87ec42bef",
	"c3da4fef-683a-42ca-9e66-0346704f675b",
	'HR',
	0,
	0);
INSERT INTO C_IR
	VALUES ("2db2287f-cafd-4f15-89cb-4fcb895f366e",
	"b98e2da0-6c96-45e9-b902-6cd102fa0d29",
	"00000000-0000-0000-0000-000000000000",
	"c44e4847-58c1-44d5-ab08-6ea87ec42bef");
INSERT INTO C_P
	VALUES ("2db2287f-cafd-4f15-89cb-4fcb895f366e",
	'HeartRateProvider',
	'Unnamed Interface',
	'',
	'HeartRateMonitor::HR::HeartRateProvider');
INSERT INTO SPR_PEP
	VALUES ("e724e513-14d1-4435-88ed-2e58b6a78320",
	"bfd8c093-fde6-436d-8dda-17f64f5bb532",
	"2db2287f-cafd-4f15-89cb-4fcb895f366e");
INSERT INTO SPR_PS
	VALUES ("e724e513-14d1-4435-88ed-2e58b6a78320",
	'heartRateChanged',
	'',
	'',
	1);
INSERT INTO C_EP_PROXY
	VALUES ("bfd8c093-fde6-436d-8dda-17f64f5bb532",
	"b98e2da0-6c96-45e9-b902-6cd102fa0d29",
	-1,
	'heartRateChanged',
	'',
	'../../HeartRateMonitorInterfaces/HeartRateProvider/HeartRateProvider.xtuml');
INSERT INTO SPR_PEP
	VALUES ("4fe6baf2-3a35-4f5d-ae18-939e66198f05",
	"f84ed76b-e037-42d8-b973-a0cc70284bd1",
	"2db2287f-cafd-4f15-89cb-4fcb895f366e");
INSERT INTO SPR_PS
	VALUES ("4fe6baf2-3a35-4f5d-ae18-939e66198f05",
	'registerListener',
	'',
	'',
	1);
INSERT INTO C_EP_PROXY
	VALUES ("f84ed76b-e037-42d8-b973-a0cc70284bd1",
	"b98e2da0-6c96-45e9-b902-6cd102fa0d29",
	-1,
	'registerListener',
	'',
	'../../HeartRateMonitorInterfaces/HeartRateProvider/HeartRateProvider.xtuml');
INSERT INTO SPR_PEP
	VALUES ("9b64bfc7-9edd-4ad9-ac1f-1f9a47d540b0",
	"e9224b8f-c3a4-4011-9d2b-1500223283af",
	"2db2287f-cafd-4f15-89cb-4fcb895f366e");
INSERT INTO SPR_PS
	VALUES ("9b64bfc7-9edd-4ad9-ac1f-1f9a47d540b0",
	'unregisterListener',
	'',
	'',
	1);
INSERT INTO C_EP_PROXY
	VALUES ("e9224b8f-c3a4-4011-9d2b-1500223283af",
	"b98e2da0-6c96-45e9-b902-6cd102fa0d29",
	-1,
	'unregisterListener',
	'',
	'../../HeartRateMonitorInterfaces/HeartRateProvider/HeartRateProvider.xtuml');
INSERT INTO C_I_PROXY
	VALUES ("b98e2da0-6c96-45e9-b902-6cd102fa0d29",
	"00000000-0000-0000-0000-000000000000",
	'HeartRateProvider',
	'',
	'../../HeartRateMonitorInterfaces/HeartRateProvider/HeartRateProvider.xtuml');
INSERT INTO PE_PE
	VALUES ("c3da4fef-683a-42ca-9e66-0346704f675b",
	1,
	"fb14f1ac-3b38-40d7-b3fe-886f92da3ca2",
	"00000000-0000-0000-0000-000000000000",
	2);
INSERT INTO EP_PKG_PROXY
	VALUES ("fb14f1ac-3b38-40d7-b3fe-886f92da3ca2",
	"efdd2203-0401-4fcb-8009-7a63fd421608",
	"efdd2203-0401-4fcb-8009-7a63fd421608",
	'Library',
	'// ########## START OAL_1 ##########
// always initialize data
self.currentLocation.longitude = 0.0;
self.currentLocation.latitude  = 0.0;
self.currentLocation.speed     = 0.0;
self.interval                  = 2000000;

LOG::LogInfo(message: "Location listener registered.");

 // start timer based on requested interval
create event instance timeout of GPS3:timeout() to self;
self.timer = TIM::timer_start_recurring(event_inst: timeout, microseconds: self.interval);
// ########### END OAL_1 ###########



// ########## START OAL_2 ##########
// prepare signal data with some dummy values that change over time
self.currentLocation.longitude = self.currentLocation.longitude + 2.0;
self.currentLocation.latitude  = self.currentLocation.latitude  + 3.0;
self.currentLocation.speed     = 
                                (self.currentLocation.latitude - 
                                 self.currentLocation.longitude) / 5.0;

// pass the new location to client component
send LocationProvider::locationUpdate(location: self.currentLocation);
// ########### END OAL_2 ###########



// ########## START OAL_3 ##########
res = TIM::timer_cancel(timer_inst_ref: self.timer);
// ########### END OAL_3 ###########



// ########## START OAL_4 ##########
select any gps from instances of GPS;
if (empty gps)
  // asynchronously create a new instance of GPS
  generate GPS1:registerListener() to GPS creator;
end if;
// ########### END OAL_4 ###########


// ########## START OAL_5 ##########
// forward message to single instance of GPS
select any gps from instances of GPS;
if (not empty gps)
  generate GPS2:unregisterListener() to gps;
end if;
// ########### END OAL_5 ###########


// ########## START OAL_6 ##########
// create an instance of the workout timer if it does not exist
select any workoutTimer from instances of WorkoutTimer;
if (empty workoutTimer)
  create object instance workoutTimer of WorkoutTimer;
end if;

// forward message to the single instance of WorkoutTimer 
generate WorkoutTimer1:startStopPressed() to workoutTimer;
// ########### END OAL_6 ###########



// ########## START OAL_7 ##########
// print the new location to the console
LOG::LogInfo(message: "location updated: ");
LOG::LogReal(message: "longitude", r: param.location.longitude);
LOG::LogReal(message: "latitude",  r: param.location.latitude );
LOG::LogReal(message: "speed",     r: param.location.speed    );
// ########### END OAL_7 ###########
',
	0,
	'../Library.xtuml');
