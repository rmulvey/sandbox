-- BP 7.1.6 content: Component syschar: 3 persistence-version: 7.1.6

INSERT INTO C_C
	VALUES ("0204f289-8900-4d34-93a6-6189697daf70",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000",
	'Location',
	'Simulates a the GPS hardware/firmware. This component is only behavioral and included for testing purposes.',
	0,
	"00000000-0000-0000-0000-000000000000",
	0,
	'');
INSERT INTO GD_MD
	VALUES ("0b996227-80ed-41a3-b0b0-ce35082eb4ab",
	111,
	"0204f289-8900-4d34-93a6-6189697daf70",
	98,
	0,
	0,
	1,
	1,
	1,
	12,
	1,
	0,
	0,
	0,
	0,
	0,
	'',
	'GPS Watch Just After Reconciled Import::Library::Location');
INSERT INTO GD_GE
	VALUES ("ed497e08-f3da-4295-9eb3-82f409bfff3a",
	"0b996227-80ed-41a3-b0b0-ce35082eb4ab",
	"0204f289-8900-4d34-93a6-6189697daf70",
	103,
	0,
	'GPS Watch Just After Reconciled Import::Library::Location');
INSERT INTO GD_SHP
	VALUES ("ed497e08-f3da-4295-9eb3-82f409bfff3a");
INSERT INTO GD_CTR
	VALUES ("ed497e08-f3da-4295-9eb3-82f409bfff3a");
INSERT INTO DIM_ND
	VALUES (573.000000,
	321.000000,
	"ed497e08-f3da-4295-9eb3-82f409bfff3a");
INSERT INTO DIM_GE
	VALUES (4100.000000,
	3100.000000,
	"ed497e08-f3da-4295-9eb3-82f409bfff3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("ed497e08-f3da-4295-9eb3-82f409bfff3a",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_DIA
	VALUES ("0b996227-80ed-41a3-b0b0-ce35082eb4ab",
	'',
	1.000000,
	4000.000000,
	3000.000000,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO C_PO
	VALUES ("ab308fe9-338c-4685-b4df-cd7ebec3c4ff",
	"0204f289-8900-4d34-93a6-6189697daf70",
	'LOC',
	0,
	0);
INSERT INTO C_IR
	VALUES ("d7e68632-74f6-42cb-af4b-32f74874f649",
	"666a11ea-1f8b-40b7-8902-fa4b28498294",
	"00000000-0000-0000-0000-000000000000",
	"ab308fe9-338c-4685-b4df-cd7ebec3c4ff");
INSERT INTO C_P
	VALUES ("d7e68632-74f6-42cb-af4b-32f74874f649",
	'LocationProvider',
	'Unnamed Interface',
	'',
	'Location::LOC::LocationProvider');
INSERT INTO SPR_PEP
	VALUES ("85c33d98-5443-4dc5-b7c4-85a348e9e78f",
	"21638400-a137-405b-ac1f-b2ab5ad1e101",
	"d7e68632-74f6-42cb-af4b-32f74874f649");
INSERT INTO SPR_PS
	VALUES ("85c33d98-5443-4dc5-b7c4-85a348e9e78f",
	'registerListener',
	'',
	'',
	1);
INSERT INTO C_EP_PROXY
	VALUES ("21638400-a137-405b-ac1f-b2ab5ad1e101",
	"666a11ea-1f8b-40b7-8902-fa4b28498294",
	-1,
	'registerListener',
	'',
	'../../LocationInterfaces/LocationProvider/LocationProvider.xtuml');
INSERT INTO SPR_PEP
	VALUES ("21e9165a-b402-448f-82ba-169129e2b17a",
	"dd42d612-8127-4331-b539-b2876af40b48",
	"d7e68632-74f6-42cb-af4b-32f74874f649");
INSERT INTO SPR_PS
	VALUES ("21e9165a-b402-448f-82ba-169129e2b17a",
	'unregisterListener',
	'',
	'',
	1);
INSERT INTO C_EP_PROXY
	VALUES ("dd42d612-8127-4331-b539-b2876af40b48",
	"666a11ea-1f8b-40b7-8902-fa4b28498294",
	-1,
	'unregisterListener',
	'',
	'../../LocationInterfaces/LocationProvider/LocationProvider.xtuml');
INSERT INTO SPR_PEP
	VALUES ("3a6d2b58-6eb1-4ab7-9e43-ffb1cb8fd248",
	"9a4b5bdc-1a93-4d77-9dc1-9543447e53cc",
	"d7e68632-74f6-42cb-af4b-32f74874f649");
INSERT INTO SPR_PO
	VALUES ("3a6d2b58-6eb1-4ab7-9e43-ffb1cb8fd248",
	'getLocation',
	'',
	'// Return, via reference arguments, the current position of the singleton 
// instance of the simulated GPS.

select any gps from instances of GPS;
param.latitude = gps.currentLatitude;
param.longitude = gps.currentLongitude;',
	1);
INSERT INTO C_EP_PROXY
	VALUES ("9a4b5bdc-1a93-4d77-9dc1-9543447e53cc",
	"666a11ea-1f8b-40b7-8902-fa4b28498294",
	-1,
	'getLocation',
	'',
	'../../LocationInterfaces/LocationProvider/LocationProvider.xtuml');
INSERT INTO C_I_PROXY
	VALUES ("666a11ea-1f8b-40b7-8902-fa4b28498294",
	"00000000-0000-0000-0000-000000000000",
	'LocationProvider',
	'',
	'../../LocationInterfaces/LocationProvider/LocationProvider.xtuml');
INSERT INTO C_PO
	VALUES ("b527eee4-13ef-4999-9f65-b73efc7ead25",
	"0204f289-8900-4d34-93a6-6189697daf70",
	'UTIL',
	0,
	0);
INSERT INTO C_IR
	VALUES ("2aa0dc16-58dc-4e28-b101-d7369cc52712",
	"a9df0c68-53f1-4dd1-9c02-f1df6443c71d",
	"00000000-0000-0000-0000-000000000000",
	"b527eee4-13ef-4999-9f65-b73efc7ead25");
INSERT INTO C_P
	VALUES ("2aa0dc16-58dc-4e28-b101-d7369cc52712",
	'LocationUtil',
	'Unnamed Interface',
	'',
	'Location::UTIL::LocationUtil');
INSERT INTO SPR_PEP
	VALUES ("c29eab5f-7793-4138-95d4-97ca3e16576d",
	"c0a36355-3973-4c7f-acb2-30fab4e88031",
	"2aa0dc16-58dc-4e28-b101-d7369cc52712");
INSERT INTO SPR_PO
	VALUES ("c29eab5f-7793-4138-95d4-97ca3e16576d",
	'getDistance',
	'Returns distance, in kilometers, between the "from" and "to" coordinates passed as parameters.
The coordinates must be passed as decimal degrees.',
	'// Return the straight-line distance, expressed in meters, between the 
// two points passed as parameters, expressed in decimal degrees.

deltaLat = param.toLat - param.fromLat;
deltaLong = param.toLong - param.fromLong;
sumSquares = (deltaLat * deltaLat) + (deltaLong * deltaLong);
return ( (MATH::sqrt( x: sumSquares ) * kmPerDegree * 1000 ) );',
	1);
INSERT INTO C_EP_PROXY
	VALUES ("c0a36355-3973-4c7f-acb2-30fab4e88031",
	"a9df0c68-53f1-4dd1-9c02-f1df6443c71d",
	-1,
	'getDistance',
	'Returns distance, in kilometers, between the "from" and "to" coordinates passed as parameters.
The coordinates must be passed as decimal degrees.',
	'../../LocationInterfaces/LocationUtil/LocationUtil.xtuml');
INSERT INTO C_I_PROXY
	VALUES ("a9df0c68-53f1-4dd1-9c02-f1df6443c71d",
	"00000000-0000-0000-0000-000000000000",
	'LocationUtil',
	'',
	'../../LocationInterfaces/LocationUtil/LocationUtil.xtuml');
INSERT INTO PE_PE
	VALUES ("0204f289-8900-4d34-93a6-6189697daf70",
	1,
	"b074d389-fa6b-4e6e-bb6c-77855ec8e379",
	"00000000-0000-0000-0000-000000000000",
	2);
INSERT INTO EP_PKG_PROXY
	VALUES ("b074d389-fa6b-4e6e-bb6c-77855ec8e379",
	"a5a92bae-a429-4e59-a48f-8bfd960907b6",
	"a5a92bae-a429-4e59-a48f-8bfd960907b6",
	'Library',
	'// ########## START OAL_1 ##########
// always initialize data
self.currentLocation.longitude = 0.0;
self.currentLocation.latitude  = 0.0;
self.currentLocation.speed     = 0.0;
self.interval                  = 2000000;

LOG::LogInfo(message: "Location listener registered.");

 // start timer based on requested interval
create event instance timeout of GPS3:timeout() to self;
self.timer = TIM::timer_start_recurring(event_inst: timeout, microseconds: self.interval);
// ########### END OAL_1 ###########



// ########## START OAL_2 ##########
// prepare signal data with some dummy values that change over time
self.currentLocation.longitude = self.currentLocation.longitude + 2.0;
self.currentLocation.latitude  = self.currentLocation.latitude  + 3.0;
self.currentLocation.speed     = 
                                (self.currentLocation.latitude - 
                                 self.currentLocation.longitude) / 5.0;

// pass the new location to client component
send LocationProvider::locationUpdate(location: self.currentLocation);
// ########### END OAL_2 ###########



// ########## START OAL_3 ##########
res = TIM::timer_cancel(timer_inst_ref: self.timer);
// ########### END OAL_3 ###########



// ########## START OAL_4 ##########
select any gps from instances of GPS;
if (empty gps)
  // asynchronously create a new instance of GPS
  generate GPS1:registerListener() to GPS creator;
end if;
// ########### END OAL_4 ###########


// ########## START OAL_5 ##########
// forward message to single instance of GPS
select any gps from instances of GPS;
if (not empty gps)
  generate GPS2:unregisterListener() to gps;
end if;
// ########### END OAL_5 ###########


// ########## START OAL_6 ##########
// create an instance of the workout timer if it does not exist
select any workoutTimer from instances of WorkoutTimer;
if (empty workoutTimer)
  create object instance workoutTimer of WorkoutTimer;
end if;

// forward message to the single instance of WorkoutTimer 
generate WorkoutTimer1:startStopPressed() to workoutTimer;
// ########### END OAL_6 ###########



// ########## START OAL_7 ##########
// print the new location to the console
LOG::LogInfo(message: "location updated: ");
LOG::LogReal(message: "longitude", r: param.location.longitude);
LOG::LogReal(message: "latitude",  r: param.location.latitude );
LOG::LogReal(message: "speed",     r: param.location.speed    );
// ########### END OAL_7 ###########
',
	0,
	'../Library.xtuml');
