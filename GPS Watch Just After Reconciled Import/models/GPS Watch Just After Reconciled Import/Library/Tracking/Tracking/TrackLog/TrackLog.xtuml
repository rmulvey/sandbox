-- BP 7.1.6 content: ModelClass syschar: 3 persistence-version: 7.1.6

INSERT INTO O_OBJ
	VALUES ("4f2eb40c-973f-4d9f-a819-fee67ede5dea",
	'TrackLog',
	2,
	'TrackLog',
	'The collection of track points stored during a workout session.

Presently the device supports only a single track log, and it 
is always the active one for the current workout session.
However, future releases may add a capability for storing
multiple track logs on the device.',
	"00000000-0000-0000-0000-000000000000");
INSERT INTO O_TFR
	VALUES ("c934b141-fb4c-40f7-a34a-81c60244c88a",
	"4f2eb40c-973f-4d9f-a819-fee67ede5dea",
	'addTrackPoint',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'// Add a track point to this track log, update the accumulated distance
// and current speed, and then notify the UI.

// Create a new track point, retrieving the current location from the GPS.
create object instance trackPoint of TrackPoint;
select one workoutTimer related by 
  self->WorkoutSession[R4.''represents path for'']->WorkoutTimer[R8.''is timed by''];
trackPoint.time = workoutTimer.time;
send LOC::getLocation( latitude: trackPoint.latitude, longitude: trackPoint.longitude );

// Add the newly created track point to the track log.
select one firstPoint related by self->TrackPoint[R1];
select one lastPoint related by self->TrackPoint[R3];

// Explicit variable declarations for later use outside if-else clause.
isFirstTrackPoint = false;
lastLatitude = 0.0;
lastLongitude = 0.0;  
if (empty firstPoint)
  isFirstTrackPoint = true;
  relate self to trackPoint across R1.''has first'';
  relate self to trackPoint across R3.''has last'';
else 
  // Save last location for use in updating accumulated distance.
  lastLatitude = lastPoint.latitude;
  lastLongitude = lastPoint.longitude;
  unrelate self from lastPoint across R3.''has last'';
  relate self to trackPoint across R3.''has last'';
  relate lastPoint to trackPoint across R2.''follows'';
end if;

// Update accumulated distance and current speed.
distance = 0.0;
if (not isFirstTrackPoint)
  send distance = UTIL::getDistance( fromLat: lastLatitude, fromLong: lastLongitude,
                                     toLat: trackPoint.latitude, toLong: trackPoint.longitude );
end if;

select one session related by self->WorkoutSession[R4.''represents path for''];
session.accumulatedDistance = session.accumulatedDistance + distance;

// Notify display of of the updated values.
self.updateDisplay();',
	1,
	'',
	"00000000-0000-0000-0000-000000000000");
INSERT INTO O_TFR
	VALUES ("fcb02c53-70d2-4846-bfb5-d3318cc49499",
	"4f2eb40c-973f-4d9f-a819-fee67ede5dea",
	'clearTrackPoints',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'select one nextPoint related by self->TrackPoint[R1];
select one lastPoint related by self->TrackPoint[R3];

if (not empty lastPoint)
  unrelate self from lastPoint across R3;
end if;

if (not empty nextPoint)
  unrelate self from nextPoint across R1;
end if;

while (not empty nextPoint)
  prevPoint = nextPoint;
  select one nextPoint related by nextPoint->TrackPoint[R2.''follows''];
  if ( not_empty nextPoint )
    unrelate prevPoint from nextPoint across R2.''follows'';
  end if;
  delete object instance prevPoint;
end while;
',
	1,
	'',
	"c934b141-fb4c-40f7-a34a-81c60244c88a");
INSERT INTO O_TFR
	VALUES ("bf87d2b5-2717-41e5-bc8f-ee5dc2a7e490",
	"4f2eb40c-973f-4d9f-a819-fee67ede5dea",
	'addLapMarker',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'select one timer related by self->WorkoutSession[R4.''represents path for'']->WorkoutTimer[R8.''is timed by''];
create object instance lapMarker of LapMarker;
lapMarker.lapTime = timer.time; 
relate self to lapMarker across R5.''has laps defined by'';

// Notify display of the new value.
self.updateDisplay();',
	1,
	'',
	"fcb02c53-70d2-4846-bfb5-d3318cc49499");
INSERT INTO O_TFR
	VALUES ("ae749044-cd20-4afd-af0e-f4386e79c9d7",
	"4f2eb40c-973f-4d9f-a819-fee67ede5dea",
	'clearLapMarkers',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'select many lapMarkers related by self->LapMarker[R5];
for each lapMarker in lapMarkers
  unrelate self from lapMarker across R5;
  delete object instance lapMarker;
end for;',
	1,
	'',
	"bf87d2b5-2717-41e5-bc8f-ee5dc2a7e490");
INSERT INTO O_TFR
	VALUES ("c73c1bd7-c637-4d81-99fa-7e536f6a8ec9",
	"4f2eb40c-973f-4d9f-a819-fee67ede5dea",
	'updateDisplay',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'// Update the display so that newly updated values will be shown.
select one display related by 
  self->WorkoutSession[R4.''represents path for'']->Display[R7.''current status indicated on''];
generate Display2:refresh to display;',
	1,
	'',
	"ae749044-cd20-4afd-af0e-f4386e79c9d7");
INSERT INTO O_ID
	VALUES (0,
	"4f2eb40c-973f-4d9f-a819-fee67ede5dea");
INSERT INTO O_ID
	VALUES (1,
	"4f2eb40c-973f-4d9f-a819-fee67ede5dea");
INSERT INTO O_ID
	VALUES (2,
	"4f2eb40c-973f-4d9f-a819-fee67ede5dea");
INSERT INTO PE_PE
	VALUES ("4f2eb40c-973f-4d9f-a819-fee67ede5dea",
	1,
	"b09d0e81-cba7-44fc-8dbd-e6aeca3a9224",
	"00000000-0000-0000-0000-000000000000",
	4);
INSERT INTO EP_PKG_PROXY
	VALUES ("b09d0e81-cba7-44fc-8dbd-e6aeca3a9224",
	"00000000-0000-0000-0000-000000000000",
	"a5a92bae-a429-4e59-a48f-8bfd960907b6",
	'Tracking',
	'',
	0,
	'../Tracking.xtuml');
