-- BP 7.1.6 content: ModelClass syschar: 3 persistence-version: 7.1.6

INSERT INTO O_OBJ
	VALUES ("6af35b2a-8145-4e12-9330-bfc209409bb6",
	'Packageable Element',
	8000,
	'PE_PE',
	'',
	"00000000-0000-0000-0000-000000000000");
INSERT INTO O_TFR
	VALUES ("edf91989-dfe4-4e71-96db-042462669cfd",
	"6af35b2a-8145-4e12-9330-bfc209409bb6",
	'dispose',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'// Packageable Element.dispose()
 
select many ele_vis_links related by self->PE_VIS[R8002];
for each ele_vis_link in ele_vis_links
  select one pkg related by ele_vis_link->EP_PKG[R8002];
  unrelate self from pkg across R8002 using ele_vis_link;
  select one searchResultset related by ele_vis_link->PE_SRS[R8006];
  unrelate ele_vis_link from searchResultset across R8006;  
  delete object instance ele_vis_link;
end for;
select many com_vis_links related by self->PE_CVS[R8004];
for each com_vis_link in com_vis_links
  select one component related by com_vis_link->C_C[R8004];
  unrelate self from component across R8004 using com_vis_link;
  delete object instance com_vis_link;
end for;
select one modelClass related by self->O_OBJ[R8001];
if not_empty modelClass
  unrelate modelClass from self across R8001;
  modelClass.dispose();
end if;
select one dt related by self->S_DT[R8001];
if not_empty dt
  // note we do not tear down this association
  // as the S_DT.dispose() call requires it to
  // be setup, it will tear it down
  dt.dispose();
end if;
select one intPart related by self->SQ_P[R8001];
if not_empty intPart
  unrelate intPart from self across R8001;
  intPart.dispose();
end if;
select one ucAssoc related by self->UC_UCA[R8001];
if not_empty ucAssoc
  unrelate ucAssoc from self across R8001;
  ucAssoc.dispose();
end if;
select one actNode related by self->A_N[R8001];
if not_empty actNode
  unrelate actNode from self across R8001;
  actNode.dispose();
end if;
select one comp related by self->C_C[R8001];
if not_empty comp
  unrelate comp from self across R8001;
  comp.dispose();
end if;
select one ic related by self->CL_IC[R8001];
if not_empty ic
  unrelate ic from self across R8001;
  ic.dispose();
end if;
select one interface related by self->C_I[R8001];
if not_empty interface
  unrelate interface from self across R8001;
  interface.dispose();
end if;
select one pkg related by self->EP_PKG[R8001];
if not_empty pkg
  unrelate pkg from self across R8001;
  pkg.dispose();
end if;
select one csp related by self->CNST_CSP[R8001];
if not_empty csp
  unrelate csp from self across R8001;
  csp.dispose();
end if;
select one ap related by self->A_AP[R8001];
if not_empty ap
  unrelate ap from self across R8001;
  ap.dispose();
end if;
select one edge related by self->A_E[R8001];
if not_empty edge
  unrelate edge from self across R8001;
  edge.dispose();
end if;
select one msg related by self->MSG_M[R8001];
if not_empty msg
  unrelate msg from self across R8001;
  msg.dispose();
end if;
select one rel related by self->R_REL[R8001];
if not_empty rel
  unrelate rel from self across R8001;
  rel.dispose();
end if;
select one icomp related by self->O_IOBJ[R8001];
if not_empty icomp
  unrelate icomp from self across R8001;
  icomp.dispose();
end if;
select one sync related by self->S_SYNC[R8001];
if not_empty sync
  unrelate sync from self across R8001;
  sync.dispose();
end if;
select one ee related by self->S_EE[R8001];
if not_empty ee
  unrelate ee from self across R8001;
  ee.dispose();
end if;
select one sat related by self->C_SF[R8001];
if not_empty sat
  unrelate sat from self across R8001;
  sat.dispose();
end if;
select one delg related by self->C_DG[R8001];
if not_empty delg
  unrelate delg from self across R8001;
  delg.dispose();
end if;
select many bodyInElements related by self->ACT_BIE[R640];
for each bie in bodyInElements
  select one body related by bie->ACT_ACT[R640];
  unrelate self from body across R640 using bie;
  delete object instance bie;
end for;

select one package related by self->EP_PKG[R8000];
if not_empty package
  unrelate self from package across R8000 ;
end if;

select one component related by self->C_C[R8003];
if(not_empty component)
  unrelate self from component across R8003;
end if;

select many elemInSystems related by self->G_EIS[R9100];
for each elemInSystem in elemInSystems
  select one system related by elemInSystem->S_SYS[R9100];
  unrelate self from system across R9100 using elemInSystem;
  delete object instance elemInSystem;
end for;

delete object instance self;',
	1,
	'',
	"00000000-0000-0000-0000-000000000000");
INSERT INTO O_TFR
	VALUES ("a1117e3a-94fa-4ab2-993d-3fbe9d17af55",
	"6af35b2a-8145-4e12-9330-bfc209409bb6",
	'collectVisibleElementsForName',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'// Packageable Element::collectVisibleElementsForName()
if param.type == self.type
  visible = false;
  if param.type == ElementTypeConstants::DATATYPE
    select one dt related by self->S_DT[R8001];
    if not_empty dt and (param.name == "" or dt.Name == param.name)
      visible = true;
    end if;
  elif param.type == ElementTypeConstants::CONSTANT
    select one cnst related by self->CNST_CSP[R8001];
    if not_empty cnst
      visible = true;
    end if;    
  elif param.type == ElementTypeConstants::CLASS
    select one clazz related by self->O_OBJ[R8001];
    if not_empty clazz and (param.name == "" or clazz.Key_Lett == param.name)
      visible = true;
    end if;
  elif param.type == ElementTypeConstants::INTERFACE
    select one ifc related by self->C_I[R8001];
    if not_empty ifc and (param.name == "" or ifc.Name == param.name)
      visible = true;
    end if;
  elif param.type == ElementTypeConstants::FUNCTION
    select one fn related by self->S_SYNC[R8001];
    if not_empty fn and (param.name == "" or fn.Name == param.name)
      visible = true;
    end if;
  elif param.type == ElementTypeConstants::COMPONENT
    select one comp related by self->C_C[R8001];
    if not_empty comp and (param.name == "" or comp.Name == param.name)
      visible = true;
    end if;
  elif param.type == ElementTypeConstants::EE
    select one ee related by self->S_EE[R8001];
    if not_empty ee and (param.name == "" or ee.Key_Lett == param.name)
      visible = true;
    end if;
  elif param.type == ElementTypeConstants::ASSOCIATION
    select one rel related by self->R_REL[R8001];
    if not_empty rel and (param.name == "" or
                   rel.Numb == OS::convert_relationship_string(rel:param.name));
      visible = true;
    end if;
  elif param.type == ElementTypeConstants::PACKAGE
    select one package related by self->EP_PKG[R8001];
    if not_empty package and (param.name == "" or package.Name == param.name)
      visible = true;
    end if;
  end if;
  if visible
    select any package from instances of EP_PKG
                    where (selected.Package_ID == param.originatingContainerID);
    select one packageableElement related by package->PE_PE[R8001];
    if(empty package)
      // force the architecture to look globally for the package
      select any packageableElement from instances of PE_PE
                    where (selected.Element_ID == param.originatingContainerID);
      select one package related by packageableElement->EP_PKG[R8001];
    end if;
    if not_empty package
      select any resultSet related by package->PE_SRS[R8005] where
                    selected.Name == param.name and selected.Type == param.type;
      create object instance visibility of PE_VIS;
      relate self to package across R8002 using visibility;
      relate visibility to resultSet across R8006;
    else
      select one originatingComp related by packageableElement->C_C[R8001];
      if not_empty originatingComp
        select any resultSet related by originatingComp->PE_CRS[R8007] where
                    selected.Name == param.name and selected.Type == param.type;
        create object instance visibility of PE_CVS;
        relate self to originatingComp across R8004 using visibility;
        relate visibility to resultSet across R8008;
      end if;
    end if;
  end if;
end if;
if self.type == ElementTypeConstants::PACKAGE
  select one package related by self->EP_PKG[R8001];
  if not_empty package and self.Element_ID != param.delegatingPkgID
    package.collectVisibleElementsForName(name:param.name,
                         type:param.type, descending:param.descending,
                         originatingContainerID: param.originatingContainerID,
                                         delegatingPkgID:GD::NULL_UNIQUE_ID(),
                                         collectGlobally:param.collectGlobally);
  end if;
end if;',
	1,
	'',
	"edf91989-dfe4-4e71-96db-042462669cfd");
INSERT INTO O_TPARM
	VALUES ("76b48b22-644d-4211-8e46-2cfc0329021a",
	"a1117e3a-94fa-4ab2-993d-3fbe9d17af55",
	'name',
	"ba5eda7a-def5-0000-0000-000000000004",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO O_TPARM
	VALUES ("dc30ed8e-888c-484b-8c08-ce2915a088e1",
	"a1117e3a-94fa-4ab2-993d-3fbe9d17af55",
	'type',
	"5af46cdc-b428-4198-958b-aecb9bd29383",
	0,
	'',
	"76b48b22-644d-4211-8e46-2cfc0329021a",
	'');
INSERT INTO S_DT_PROXY
	VALUES ("5af46cdc-b428-4198-958b-aecb9bd29383",
	"00000000-0000-0000-0000-000000000000",
	'ElementTypeConstants',
	'',
	'',
	'../../Datatypes/Datatypes.xtuml');
INSERT INTO O_TPARM
	VALUES ("3abf2131-0f43-4c6c-93c8-41241dfd6f7b",
	"a1117e3a-94fa-4ab2-993d-3fbe9d17af55",
	'descending',
	"ba5eda7a-def5-0000-0000-000000000001",
	0,
	'',
	"dc30ed8e-888c-484b-8c08-ce2915a088e1",
	'');
INSERT INTO O_TPARM
	VALUES ("f192ec94-65e9-4dfd-9f86-8a9158105b97",
	"a1117e3a-94fa-4ab2-993d-3fbe9d17af55",
	'originatingContainerID',
	"ba5eda7a-def5-0000-0000-000000000005",
	0,
	'',
	"3abf2131-0f43-4c6c-93c8-41241dfd6f7b",
	'');
INSERT INTO O_TPARM
	VALUES ("b1a8f46c-423c-4950-9d10-3f2411c83fb8",
	"a1117e3a-94fa-4ab2-993d-3fbe9d17af55",
	'delegatingPkgID',
	"ba5eda7a-def5-0000-0000-000000000005",
	0,
	'',
	"f192ec94-65e9-4dfd-9f86-8a9158105b97",
	'');
INSERT INTO O_TPARM
	VALUES ("359d412a-2919-450d-b541-c6b112aa6758",
	"a1117e3a-94fa-4ab2-993d-3fbe9d17af55",
	'collectGlobally',
	"ba5eda7a-def5-0000-0000-000000000001",
	0,
	'',
	"b1a8f46c-423c-4950-9d10-3f2411c83fb8",
	'');
INSERT INTO O_TFR
	VALUES ("9faefc71-bc10-4822-9b5f-b3aed6e97581",
	"6af35b2a-8145-4e12-9330-bfc209409bb6",
	'initialize',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'// PackageableElement.initialize()
self.Visibility = Visibility::Public;',
	1,
	'',
	"a1117e3a-94fa-4ab2-993d-3fbe9d17af55");
INSERT INTO O_TFR
	VALUES ("20480797-2a69-4889-9e83-e1d4521aaa5b",
	"6af35b2a-8145-4e12-9330-bfc209409bb6",
	'getQualifiedName',
	'',
	"ba5eda7a-def5-0000-0000-000000000004",
	1,
	'//PackageableElement::getQualifiedName()
result = "";
select one package related by self->EP_PKG[R8000];
if not_empty package
  result = package.getQualifiedName();
else
  select one comp related by self->C_C[R8003];
  if not_empty comp
    result = comp.getQualifiedName();
  end if;
end if;
if result != ""
  result = result + "::";
end if;
result = result + self.getLocalName();
return result;',
	1,
	'',
	"9faefc71-bc10-4822-9b5f-b3aed6e97581");
INSERT INTO O_TFR
	VALUES ("76940411-49b6-4921-a522-273a005a03e3",
	"6af35b2a-8145-4e12-9330-bfc209409bb6",
	'getLocalName',
	'',
	"ba5eda7a-def5-0000-0000-000000000004",
	1,
	'//PackageableElement::getLocalName()
// put these three first because these will be called much more than others.
select one dt related by self->S_DT[R8001];
if not_empty dt
  return dt.Name;
end if;
select one clazz related by self->O_OBJ[R8001];
if not_empty clazz
  return clazz.Name;
end if;
select one package related by self->EP_PKG[R8001];
if not_empty package
  return package.Name;
end if;
select one interface related by self->C_I[R8001];
if not_empty interface
  return interface.Name;
end if;
select one component related by self->C_C[R8001];
if not_empty component
  return component.Name;
end if;
select one assoc related by self->R_REL[R8001];
if not_empty assoc
  return GD::int_to_string(value:assoc.Numb);
end if;
select one func related by self->S_SYNC[R8001];
if not_empty func
  return func.Name;
end if;
select one iComp related by self->CL_IC[R8001];
if not_empty iComp
  return iComp.Name;
end if;
select one ee related by self->S_EE[R8001];
if not_empty ee
  return ee.Name;
end if;
return "";',
	1,
	'',
	"20480797-2a69-4889-9e83-e1d4521aaa5b");
INSERT INTO O_TFR
	VALUES ("a1e6badf-a8da-4452-8221-a8f949eb6076",
	"6af35b2a-8145-4e12-9330-bfc209409bb6",
	'isAllowedType',
	'',
	"ba5eda7a-def5-0000-0000-000000000001",
	1,
	'// PackageableElement.isAllowedType()
select one package related by self->EP_PKG[R8000];
select any resultSet related by package->PE_SRS[R8005] where
        selected.Name == "" and selected.Type == ElementTypeConstants::DATATYPE;
select any dt related by resultSet->
                             PE_VIS[R8006]->PE_PE[R8002]->S_DT[R8001] where
                                                selected.Name == param.typeName;
if empty package
  select one component related by self->C_C[R8003];
  select any compResultSet related by component->PE_CRS[R8007] where
        selected.Name == "" and selected.Type == ElementTypeConstants::DATATYPE;
  select any dt related by compResultSet->
                             PE_CVS[R8008]->PE_PE[R8004]->S_DT[R8001] where
                                                selected.Name == param.typeName;
end if;
if not_empty dt
  if param.isReturnType and param.typeName == "void"
    return true;
  else
    return dt.isCommonAllowedType();
  end if;
end if;
return false;',
	1,
	'',
	"76940411-49b6-4921-a522-273a005a03e3");
INSERT INTO O_TPARM
	VALUES ("baaeeb49-57ab-4e75-8634-22ea86494c8c",
	"a1e6badf-a8da-4452-8221-a8f949eb6076",
	'isReturnType',
	"ba5eda7a-def5-0000-0000-000000000001",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO O_TPARM
	VALUES ("d531759f-62bd-4314-b1b9-578ab57fbeaf",
	"a1e6badf-a8da-4452-8221-a8f949eb6076",
	'typeName',
	"ba5eda7a-def5-0000-0000-000000000004",
	0,
	'',
	"baaeeb49-57ab-4e75-8634-22ea86494c8c",
	'');
INSERT INTO O_TFR
	VALUES ("41105505-2531-4363-ba46-a1609640554d",
	"6af35b2a-8145-4e12-9330-bfc209409bb6",
	'resolveDataTypeRelativeToSelf',
	'',
	"ba5eda7a-def5-0000-0000-000000000005",
	1,
	'// PE_PE navigation is present (isInGenericPackage).  Do not remove this comment.
select one package related by self->EP_PKG[R8000];
select one component related by self->C_C[R8003];
if not_empty component
  component.clearScope();
  component.collectVisibleElementsForName(name:param.expected_name,
           type:ElementTypeConstants::DATATYPE,
                       originatingContainerID:component.Id,
                              delegatingContainerID:GD::NULL_UNIQUE_ID(),
                                                         collectGlobally:true);
else
  package.clearScope();
  package.collectVisibleElementsForName(name:param.expected_name,
           type:ElementTypeConstants::DATATYPE, descending:false,
                       originatingContainerID:package.Package_ID,
                                      delegatingPkgID:GD::NULL_UNIQUE_ID(),
                                                         collectGlobally:true);
end if;
select any resultSet related by component->PE_CRS[R8007] where
                                         selected.Name == param.expected_name and 
                            selected.Type == ElementTypeConstants::DATATYPE; 
select many results related by resultSet->PE_CVS[R8008]->PE_PE[R8004];
if not_empty package
  select any pkgResultSet related by package->PE_SRS[R8005] where
                                         selected.Name == param.expected_name and 
                            selected.Type == ElementTypeConstants::DATATYPE; 
  select many results related by pkgResultSet->PE_VIS[R8006]->PE_PE[R8002];
end if;
select any resolvedDt related by results->S_DT[R8001];
if cardinality results == 0
  if not_empty component
    component.clearScope();
    component.collectVisibleElementsForName(name:param.default_name,
          type:ElementTypeConstants::DATATYPE,
                      originatingContainerID:component.Id,
                             delegatingContainerID:GD::NULL_UNIQUE_ID(),
                                                         collectGlobally:true);
  else
    package.clearScope();
    package.collectVisibleElementsForName(name:param.default_name,
          type:ElementTypeConstants::DATATYPE, descending:false,
                      originatingContainerID:package.Package_ID,
                                      delegatingPkgID:GD::NULL_UNIQUE_ID(),
                                                         collectGlobally:true);
  end if;
  select any resultSet related by component->PE_CRS[R8007] where
                                               selected.Name == param.default_name and 
                            selected.Type == ElementTypeConstants::DATATYPE; 
  select many results related by resultSet->PE_CVS[R8008]->PE_PE[R8004];
  if not_empty package
    select any pkgResultSet related by package->PE_SRS[R8005] where
                                               selected.Name == param.default_name and 
                            selected.Type == ElementTypeConstants::DATATYPE; 
    select many results related by
                                  pkgResultSet->PE_VIS[R8006]->PE_PE[R8002];
  end if;
  select any resolvedDt related by results->S_DT[R8001];
end if;
if(not_empty resolvedDt)
  return resolvedDt.DT_ID;
end if;
// no dt was found, this is definitely an issue
// log an error and return a null id
USER::logError(msg:"Unable to resolve any data type.",path:"");
return GD::NULL_UNIQUE_ID();
',
	1,
	'',
	"a1e6badf-a8da-4452-8221-a8f949eb6076");
INSERT INTO O_TPARM
	VALUES ("35a74869-2cd3-48e4-9ba0-363d1e4976dd",
	"41105505-2531-4363-ba46-a1609640554d",
	'expected_name',
	"ba5eda7a-def5-0000-0000-000000000004",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO O_TPARM
	VALUES ("921b60b4-85cc-437a-ab3a-88bfef220a7e",
	"41105505-2531-4363-ba46-a1609640554d",
	'default_name',
	"ba5eda7a-def5-0000-0000-000000000004",
	0,
	'',
	"35a74869-2cd3-48e4-9ba0-363d1e4976dd",
	'');
INSERT INTO O_TFR
	VALUES ("7c809a10-eb06-432f-bb4d-22caad14c389",
	"6af35b2a-8145-4e12-9330-bfc209409bb6",
	'canReferToDataType',
	'',
	"ba5eda7a-def5-0000-0000-000000000001",
	1,
	'select one package related by self->EP_PKG[R8000];
select one component related by self->C_C[R8003];
if not_empty component
  component.clearScope();
  component.collectVisibleElementsForName(name:param.dtName,
         type:ElementTypeConstants::DATATYPE,
                          originatingContainerID:component.Id,
                                   delegatingContainerID:GD::NULL_UNIQUE_ID(),
                                                          collectGlobally:true);
else
  package.clearScope();
  package.collectVisibleElementsForName(name:param.dtName,
         type:ElementTypeConstants::DATATYPE, descending:false,
                           originatingContainerID:package.Package_ID,
                                          delegatingPkgID:GD::NULL_UNIQUE_ID(),
                                                          collectGlobally:true);
end if;
// Find the previously created visibility list
select any resultSet related by package->PE_SRS[R8005] where
      selected.Name == param.dtName and selected.Type == ElementTypeConstants::DATATYPE;
select any dt related by resultSet->PE_VIS[R8006]->
                 PE_PE[R8002]->S_DT[R8001] where selected.DT_ID == param.dtID;
if not_empty component
  // Find the previously created visibility list
  select any compResultSet related by component->PE_CRS[R8007] where
      selected.Name == param.dtName and selected.Type == ElementTypeConstants::DATATYPE;
  select any dt related by compResultSet->PE_CVS[R8008]->
                   PE_PE[R8004]->S_DT[R8001] where selected.DT_ID == dt.DT_ID;
end if;
if(not_empty dt)
  return true;
end if;
return false;
',
	1,
	'',
	"41105505-2531-4363-ba46-a1609640554d");
INSERT INTO O_TPARM
	VALUES ("6eccfde8-0a92-4a8f-9c79-d35ab223174e",
	"7c809a10-eb06-432f-bb4d-22caad14c389",
	'dtID',
	"ba5eda7a-def5-0000-0000-000000000005",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO O_TPARM
	VALUES ("c627253e-e88c-4176-bd85-49a05b94d2a6",
	"7c809a10-eb06-432f-bb4d-22caad14c389",
	'dtName',
	"ba5eda7a-def5-0000-0000-000000000004",
	0,
	'',
	"6eccfde8-0a92-4a8f-9c79-d35ab223174e",
	'');
INSERT INTO O_TFR
	VALUES ("13343f7a-51a5-4e4d-b756-16fa8e217ec5",
	"6af35b2a-8145-4e12-9330-bfc209409bb6",
	'getVisibilityAdornment',
	'',
	"ba5eda7a-def5-0000-0000-000000000004",
	1,
	'// Packageable Element.getVisibilityAdornment()
select one package related by self->EP_PKG[R8000];
select one component related by self->C_C[R8003];
select one sys related by self->EP_PKG[R8001]->S_SYS[R1401];
result = "";
if ((not_empty package or not_empty component) or 
    (not_empty sys and sys.useGlobals == true))
  if self.Visibility == Visibility::Public
    result = "+";
  elif self.Visibility == Visibility::Protected
    result = "#";
  elif self.Visibility == Visibility::Private
    result = "-";
  end if;
end if;
return result;',
	1,
	'',
	"7c809a10-eb06-432f-bb4d-22caad14c389");
INSERT INTO O_TFR
	VALUES ("c23e5756-98d3-4c5d-846f-4bceddd733d3",
	"6af35b2a-8145-4e12-9330-bfc209409bb6",
	'getVisibilityValue',
	'',
	"0e2ff7e4-0c29-4206-856f-08819f6925d8",
	1,
	'select one irdt related by self->S_DT[R8001]->S_IRDT[R17];
if(not_empty irdt)
  select one classPE related by irdt->O_OBJ[R123]->PE_PE[R8001];
  return classPE.Visibility;
end if;
return self.Visibility;',
	1,
	'',
	"13343f7a-51a5-4e4d-b756-16fa8e217ec5");
INSERT INTO S_DT_PROXY
	VALUES ("0e2ff7e4-0c29-4206-856f-08819f6925d8",
	"00000000-0000-0000-0000-000000000000",
	'Visibility',
	'',
	'',
	'../../Datatypes/Datatypes.xtuml');
INSERT INTO O_TFR
	VALUES ("640be90a-2770-4fc6-949b-704542f31670",
	"6af35b2a-8145-4e12-9330-bfc209409bb6",
	'resolveComponentRelativeToSelf',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'// PE_PE navigation is present (isInGenericPackage).  Do not remove this comment.
select one package related by self->EP_PKG[R8000];
select one component related by self->C_C[R8003];
if not_empty component
  component.clearScope();
  component.collectVisibleElementsForName(name:param.expected_name,
           type:ElementTypeConstants::COMPONENT,
                       originatingContainerID:component.Id,
                              delegatingContainerID:GD::NULL_UNIQUE_ID(),
                                                         collectGlobally:true);
else
  package.clearScope();
  package.collectVisibleElementsForName(name:param.expected_name,
           type:ElementTypeConstants::COMPONENT, descending:false,
                       originatingContainerID:package.Package_ID,
                                      delegatingPkgID:GD::NULL_UNIQUE_ID(),
                                                         collectGlobally:true);
end if;',
	1,
	'',
	"c23e5756-98d3-4c5d-846f-4bceddd733d3");
INSERT INTO O_TPARM
	VALUES ("15616e46-7309-47fb-bf8f-d704e5a1c9b5",
	"640be90a-2770-4fc6-949b-704542f31670",
	'expected_name',
	"ba5eda7a-def5-0000-0000-000000000004",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO O_TFR
	VALUES ("0c7e68ab-15b6-4535-9ffa-b6178c50586b",
	"6af35b2a-8145-4e12-9330-bfc209409bb6",
	'resolveInterfaceRelativeToSelf',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'// PE_PE navigation is present (isInGenericPackage).  Do not remove this comment.
select one package related by self->EP_PKG[R8000];
select one component related by self->C_C[R8003];
if not_empty component
  component.clearScope();
  component.collectVisibleElementsForName(name:param.expected_name,
           type:ElementTypeConstants::INTERFACE,
                       originatingContainerID:component.Id,
                              delegatingContainerID:GD::NULL_UNIQUE_ID(),
                                                         collectGlobally:true);
else
  package.clearScope();
  package.collectVisibleElementsForName(name:param.expected_name,
           type:ElementTypeConstants::INTERFACE, descending:false,
                       originatingContainerID:package.Package_ID,
                                      delegatingPkgID:GD::NULL_UNIQUE_ID(),
                                                         collectGlobally:true);
end if;',
	1,
	'',
	"640be90a-2770-4fc6-949b-704542f31670");
INSERT INTO O_TPARM
	VALUES ("d6e56647-7215-4110-bba1-1ff77ec0fd17",
	"0c7e68ab-15b6-4535-9ffa-b6178c50586b",
	'expected_name',
	"ba5eda7a-def5-0000-0000-000000000004",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO O_TFR
	VALUES ("cedf8249-f820-4456-b3e2-a93616b814e6",
	"6af35b2a-8145-4e12-9330-bfc209409bb6",
	'resolvePackageRelativeToSelf',
	'',
	"ba5eda7a-def5-0000-0000-000000000005",
	1,
	'// PE_PE navigation is present (isInGenericPackage).  Do not remove this comment.
select one package related by self->EP_PKG[R8000];
select one component related by self->C_C[R8003];
if not_empty component
  component.clearScope();
  component.collectVisibleElementsForName(name:param.expected_name,
           type:ElementTypeConstants::PACKAGE,
                       originatingContainerID:component.Id,
                              delegatingContainerID:GD::NULL_UNIQUE_ID(),
                                                         collectGlobally:true);
else
  package.clearScope();
  package.collectVisibleElementsForName(name:param.expected_name,
           type:ElementTypeConstants::PACKAGE, descending:false,
                       originatingContainerID:package.Package_ID,
                                      delegatingPkgID:GD::NULL_UNIQUE_ID(),
                                                         collectGlobally:true);
end if;
select any resultSet related by component->PE_CRS[R8007] where
                                         selected.Name == param.expected_name and 
                            selected.Type == ElementTypeConstants::PACKAGE; 
select many results related by resultSet->PE_CVS[R8008]->PE_PE[R8004];
if not_empty package
  select any pkgResultSet related by package->PE_SRS[R8005] where
                                         selected.Name == param.expected_name and 
                            selected.Type == ElementTypeConstants::PACKAGE; 
  select many results related by pkgResultSet->PE_VIS[R8006]->PE_PE[R8002];
end if;
select any resolvedPkg related by results->EP_PKG[R8001];
if(not_empty resolvedPkg)
  return resolvedPkg.Package_ID;
end if; 
return GD::NULL_UNIQUE_ID();
',
	1,
	'',
	"0c7e68ab-15b6-4535-9ffa-b6178c50586b");
INSERT INTO O_TPARM
	VALUES ("f0c234eb-15ad-4421-8655-dfc3e684d032",
	"cedf8249-f820-4456-b3e2-a93616b814e6",
	'expected_name',
	"ba5eda7a-def5-0000-0000-000000000004",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO O_TFR
	VALUES ("8a34f972-2a9c-496c-8cda-3887fe8a83f6",
	"6af35b2a-8145-4e12-9330-bfc209409bb6",
	'resolveClassRelativeToSelf',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'// PE_PE navigation is present (isInGenericPackage).  Do not remove this comment.
select one package related by self->EP_PKG[R8000];
select one component related by self->C_C[R8003];
if not_empty component
  component.clearScope();
  component.collectVisibleElementsForName(name:param.expected_name,
           type:ElementTypeConstants::CLASS,
                       originatingContainerID:component.Id,
                              delegatingContainerID:GD::NULL_UNIQUE_ID(),
                                                         collectGlobally:true);
else
  package.clearScope();
  package.collectVisibleElementsForName(name:param.expected_name,
           type:ElementTypeConstants::CLASS, descending:false,
                       originatingContainerID:package.Package_ID,
                                      delegatingPkgID:GD::NULL_UNIQUE_ID(),
                                                         collectGlobally:true);
end if;',
	1,
	'',
	"cedf8249-f820-4456-b3e2-a93616b814e6");
INSERT INTO O_TPARM
	VALUES ("bb7eb0c7-78b8-4dfd-9b96-0b50122256b4",
	"8a34f972-2a9c-496c-8cda-3887fe8a83f6",
	'expected_name',
	"ba5eda7a-def5-0000-0000-000000000004",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO O_TFR
	VALUES ("e0397e83-74e7-4d68-bdc4-0012cdf5473b",
	"6af35b2a-8145-4e12-9330-bfc209409bb6",
	'resolveEERelativeToSelf',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'// PE_PE navigation is present (isInGenericPackage).  Do not remove this comment.
select one package related by self->EP_PKG[R8000];
select one component related by self->C_C[R8003];
if not_empty component
  component.clearScope();
  component.collectVisibleElementsForName(name:param.expected_name,
           type:ElementTypeConstants::EE,
                       originatingContainerID:component.Id,
                              delegatingContainerID:GD::NULL_UNIQUE_ID(),
                                                         collectGlobally:true);
else
  package.clearScope();
  package.collectVisibleElementsForName(name:param.expected_name,
           type:ElementTypeConstants::EE, descending:false,
                       originatingContainerID:package.Package_ID,
                                      delegatingPkgID:GD::NULL_UNIQUE_ID(),
                                                         collectGlobally:true);
end if;',
	1,
	'',
	"8a34f972-2a9c-496c-8cda-3887fe8a83f6");
INSERT INTO O_TPARM
	VALUES ("9195b97d-f0f1-4baa-99bd-77bce6e870c1",
	"e0397e83-74e7-4d68-bdc4-0012cdf5473b",
	'expected_name',
	"ba5eda7a-def5-0000-0000-000000000004",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO O_TFR
	VALUES ("9e711816-f00f-4701-ba72-5d67176ed660",
	"6af35b2a-8145-4e12-9330-bfc209409bb6",
	'isElementVisibleToSelf',
	'',
	"ba5eda7a-def5-0000-0000-000000000001",
	1,
	'select one package related by self->EP_PKG[R8000];
select one component related by self->C_C[R8003];
if not_empty component
  component.clearScope();
  component.collectVisibleElementsForName(name:"",
           type:param.type,
                       originatingContainerID:component.Id,
                              delegatingContainerID:GD::NULL_UNIQUE_ID(),
                                                         collectGlobally:true);
else
  package.clearScope();
  package.collectVisibleElementsForName(name:"",
           type:param.type, descending:false,
                       originatingContainerID:package.Package_ID,
                                      delegatingPkgID:GD::NULL_UNIQUE_ID(),
                                                         collectGlobally:true);
end if;
select any resultSet related by component->PE_CRS[R8007] where
                                                    selected.Type == param.type;
select many results related by resultSet->PE_CVS[R8008]->PE_PE[R8004];
if not_empty package
  select any pkgResultSet related by package->PE_SRS[R8005] where 
                                                    selected.Type == param.type; 
  select many results related by pkgResultSet->PE_VIS[R8006]->PE_PE[R8002];
end if;
for each result in results
  if(result.Element_ID == param.elementId)
    return true;
  end if;
end for;
return false;',
	1,
	'',
	"e0397e83-74e7-4d68-bdc4-0012cdf5473b");
INSERT INTO O_TPARM
	VALUES ("7c225546-9803-4802-a3d5-b254c7a6131c",
	"9e711816-f00f-4701-ba72-5d67176ed660",
	'type',
	"5af46cdc-b428-4198-958b-aecb9bd29383",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO O_TPARM
	VALUES ("6d41949b-366b-43b9-b175-a5183167d00a",
	"9e711816-f00f-4701-ba72-5d67176ed660",
	'elementId',
	"ba5eda7a-def5-0000-0000-000000000005",
	0,
	'',
	"7c225546-9803-4802-a3d5-b254c7a6131c",
	'');
INSERT INTO O_NBATTR
	VALUES ("6c0ac341-1d88-4650-b3fe-2c344b920ed1",
	"6af35b2a-8145-4e12-9330-bfc209409bb6");
INSERT INTO O_BATTR
	VALUES ("6c0ac341-1d88-4650-b3fe-2c344b920ed1",
	"6af35b2a-8145-4e12-9330-bfc209409bb6");
INSERT INTO O_ATTR
	VALUES ("6c0ac341-1d88-4650-b3fe-2c344b920ed1",
	"6af35b2a-8145-4e12-9330-bfc209409bb6",
	"00000000-0000-0000-0000-000000000000",
	'Element_ID',
	'',
	'',
	'Element_ID',
	0,
	"ba5eda7a-def5-0000-0000-000000000005",
	'',
	'');
INSERT INTO O_NBATTR
	VALUES ("ba704f8c-927a-47e9-9f2c-93222b180d3b",
	"6af35b2a-8145-4e12-9330-bfc209409bb6");
INSERT INTO O_BATTR
	VALUES ("ba704f8c-927a-47e9-9f2c-93222b180d3b",
	"6af35b2a-8145-4e12-9330-bfc209409bb6");
INSERT INTO O_ATTR
	VALUES ("ba704f8c-927a-47e9-9f2c-93222b180d3b",
	"6af35b2a-8145-4e12-9330-bfc209409bb6",
	"6c0ac341-1d88-4650-b3fe-2c344b920ed1",
	'Visibility',
	'Full Name: Visibility',
	'',
	'Visibility',
	0,
	"0e2ff7e4-0c29-4206-856f-08819f6925d8",
	'',
	'');
INSERT INTO O_REF
	VALUES ("6af35b2a-8145-4e12-9330-bfc209409bb6",
	"2c739d45-638b-4513-84f2-e93bd74294ef",
	0,
	"0265124e-b530-4013-a9e0-f29de24024e1",
	"6a867962-65ee-4acf-bd75-700f3e1fa263",
	"3a1dc2c4-f635-4a55-930a-3363754db044",
	"d1af22d2-793f-4396-9342-74e83dc15936",
	"0017e00e-ca1c-4bdc-ada4-17bcb01ad285",
	"1c6c3d7e-54d7-4b85-a373-12729b020f3b",
	"00000000-0000-0000-0000-000000000000",
	0,
	'',
	'Package',
	'Package_ID',
	'R8000.''contained by''');
INSERT INTO R_RGO_PROXY
	VALUES ("6af35b2a-8145-4e12-9330-bfc209409bb6",
	"6a867962-65ee-4acf-bd75-700f3e1fa263",
	"3a1dc2c4-f635-4a55-930a-3363754db044",
	'../Packageable Element.xtuml');
INSERT INTO O_RTIDA_PROXY
	VALUES ("0265124e-b530-4013-a9e0-f29de24024e1",
	"2c739d45-638b-4513-84f2-e93bd74294ef",
	0,
	"6a867962-65ee-4acf-bd75-700f3e1fa263",
	"d1af22d2-793f-4396-9342-74e83dc15936",
	'../Packageable Element.xtuml');
INSERT INTO O_RATTR
	VALUES ("0017e00e-ca1c-4bdc-ada4-17bcb01ad285",
	"6af35b2a-8145-4e12-9330-bfc209409bb6",
	"6c0ac341-1d88-4650-b3fe-2c344b920ed1",
	"6af35b2a-8145-4e12-9330-bfc209409bb6",
	1,
	'Element_ID');
INSERT INTO O_ATTR
	VALUES ("0017e00e-ca1c-4bdc-ada4-17bcb01ad285",
	"6af35b2a-8145-4e12-9330-bfc209409bb6",
	"ba704f8c-927a-47e9-9f2c-93222b180d3b",
	'Package_ID',
	'',
	'',
	'Package_ID',
	0,
	"ba5eda7a-def5-0000-0000-000000000007",
	'',
	'');
INSERT INTO O_REF
	VALUES ("6af35b2a-8145-4e12-9330-bfc209409bb6",
	"635d3b9b-edc6-456d-888d-7375eef81516",
	0,
	"60a1905f-e390-4af7-8e38-ce84e413b25d",
	"50154d64-7542-4a2f-91b5-685395d658c9",
	"9652ae03-2882-41cf-a5a2-48e256086109",
	"8a4b329e-a71a-4ab9-8bc2-37d31e7f4b84",
	"110eb48c-8fba-4e1a-9de7-c2209e7cf5bb",
	"6ea26a76-759e-466e-a0a7-6ad6709ea5ec",
	"00000000-0000-0000-0000-000000000000",
	0,
	'',
	'Component',
	'Id',
	'R8003.''contained in''');
INSERT INTO R_RGO_PROXY
	VALUES ("6af35b2a-8145-4e12-9330-bfc209409bb6",
	"50154d64-7542-4a2f-91b5-685395d658c9",
	"9652ae03-2882-41cf-a5a2-48e256086109",
	'../Packageable Element.xtuml');
INSERT INTO O_RTIDA_PROXY
	VALUES ("60a1905f-e390-4af7-8e38-ce84e413b25d",
	"635d3b9b-edc6-456d-888d-7375eef81516",
	0,
	"50154d64-7542-4a2f-91b5-685395d658c9",
	"8a4b329e-a71a-4ab9-8bc2-37d31e7f4b84",
	'../Packageable Element.xtuml');
INSERT INTO O_RATTR
	VALUES ("110eb48c-8fba-4e1a-9de7-c2209e7cf5bb",
	"6af35b2a-8145-4e12-9330-bfc209409bb6",
	"6c0ac341-1d88-4650-b3fe-2c344b920ed1",
	"6af35b2a-8145-4e12-9330-bfc209409bb6",
	0,
	'Element_ID');
INSERT INTO O_ATTR
	VALUES ("110eb48c-8fba-4e1a-9de7-c2209e7cf5bb",
	"6af35b2a-8145-4e12-9330-bfc209409bb6",
	"0017e00e-ca1c-4bdc-ada4-17bcb01ad285",
	'Component_ID',
	'',
	'',
	'Component_ID',
	0,
	"ba5eda7a-def5-0000-0000-000000000007",
	'',
	'');
INSERT INTO O_NBATTR
	VALUES ("210295ce-f430-48a6-a57b-d5eb7e32d797",
	"6af35b2a-8145-4e12-9330-bfc209409bb6");
INSERT INTO O_BATTR
	VALUES ("210295ce-f430-48a6-a57b-d5eb7e32d797",
	"6af35b2a-8145-4e12-9330-bfc209409bb6");
INSERT INTO O_ATTR
	VALUES ("210295ce-f430-48a6-a57b-d5eb7e32d797",
	"6af35b2a-8145-4e12-9330-bfc209409bb6",
	"110eb48c-8fba-4e1a-9de7-c2209e7cf5bb",
	'type',
	'readonly:true',
	'',
	'type',
	0,
	"5af46cdc-b428-4198-958b-aecb9bd29383",
	'',
	'');
INSERT INTO O_ID
	VALUES (0,
	"6af35b2a-8145-4e12-9330-bfc209409bb6");
INSERT INTO O_OIDA
	VALUES ("6c0ac341-1d88-4650-b3fe-2c344b920ed1",
	"6af35b2a-8145-4e12-9330-bfc209409bb6",
	0,
	'Element_ID');
INSERT INTO O_ID
	VALUES (1,
	"6af35b2a-8145-4e12-9330-bfc209409bb6");
INSERT INTO O_ID
	VALUES (2,
	"6af35b2a-8145-4e12-9330-bfc209409bb6");
INSERT INTO PE_PE
	VALUES ("6af35b2a-8145-4e12-9330-bfc209409bb6",
	1,
	"349b2ee2-a239-4ef9-95b0-4d91ed63e1c7",
	"00000000-0000-0000-0000-000000000000",
	4);
INSERT INTO EP_PKG_PROXY
	VALUES ("349b2ee2-a239-4ef9-95b0-4d91ed63e1c7",
	"00000000-0000-0000-0000-000000000000",
	"2f3ea6a7-20e9-405c-b68c-7fba041e7daf",
	'Packageable Element',
	'',
	8000,
	'../Packageable Element.xtuml');
