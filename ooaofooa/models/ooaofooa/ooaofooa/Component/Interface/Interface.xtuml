-- BP 7.1.6 content: ModelClass syschar: 3 persistence-version: 7.1.6

INSERT INTO O_OBJ
	VALUES ("1f6bd066-3086-44d9-be95-61b2a9464fdb",
	'Interface',
	4001,
	'C_I',
	'',
	"00000000-0000-0000-0000-000000000000");
INSERT INTO O_TFR
	VALUES ("0ccb1b78-9e72-4757-8746-9ca6f756c3f5",
	"1f6bd066-3086-44d9-be95-61b2a9464fdb",
	'dispose',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'select many signals related by self->C_EP[R4003];
for each signal in signals
  unrelate self from signal across R4003;
  signal.dispose();
end for;

select one pe related by self->PE_PE[R8001];
if (not_empty pe)
  unrelate self from pe across R8001;
  pe.dispose();
end if;
delete object instance self;',
	1,
	'',
	"c3f3109a-3e78-4092-8c77-c8c3973ddab2");
INSERT INTO O_TFR
	VALUES ("c3f3109a-3e78-4092-8c77-c8c3973ddab2",
	"1f6bd066-3086-44d9-be95-61b2a9464fdb",
	'convertToInstance',
	'A utility operation to cast an instance of this type to the
instance datatype.

Translate: native',
	"a5d8b590-a627-4af4-afdf-152c889769b6",
	1,
	'return this;',
	0,
	'',
	"00000000-0000-0000-0000-000000000000");
INSERT INTO S_DT_PROXY
	VALUES ("a5d8b590-a627-4af4-afdf-152c889769b6",
	"00000000-0000-0000-0000-000000000000",
	'instance',
	'',
	'',
	'../../Datatypes/Datatypes.xtuml');
INSERT INTO O_TFR
	VALUES ("a72e9b36-be8b-47bf-bf03-e21fcf8fe2d2",
	"1f6bd066-3086-44d9-be95-61b2a9464fdb",
	'get_compartment_text',
	'',
	"ba5eda7a-def5-0000-0000-000000000004",
	1,
	'select many signaExProps related by self->C_EP[R4003]->C_AS[R4004]->C_EP[R4004];
select many opExProps related by self->C_EP[R4003]->C_IO[R4004]->C_EP[R4004];
result = "";
if (param.comp_num == 1)
  if (param.at == Justification::Center_in_X)
    result = "«interface»";
    result = result + GD::newline();
    result = result + self.Name;
  end if;
elif(param.comp_num == 2)
  if(((empty opExProps) and (not_empty signaExProps)) and
  			(param.at == Justification::Center_in_X)) and (param.ent_num == 1)
    if(not_empty signaExProps)
      result = "signals" + GD::newline();
    end if;
  end if;
  if(param.at == Justification::Left)
    if(not_empty opExProps)
      result = self.get_operation_compartment_text(entry_num: param.ent_num);
    else
      if(not_empty signaExProps) and (param.ent_num > 1)
        result = self.get_signal_compartment_text(entry_num: param.ent_num);
      end if;
    end if;
  end if;
elif(param.comp_num == 3)
  if(param.at == Justification::Center_in_X) and (param.ent_num == 1)
    if(not_empty signaExProps)
      result = "signals" + GD::newline();
    end if;
  end if;
  if(param.at == Justification::Left) and (param.ent_num > 1)
    return self.get_signal_compartment_text(entry_num: param.ent_num);
  end if;
end if;
return result;',
	1,
	'',
	"0ccb1b78-9e72-4757-8746-9ca6f756c3f5");
INSERT INTO O_TPARM
	VALUES ("54994b04-a9a0-4670-82c9-afdedff7c448",
	"a72e9b36-be8b-47bf-bf03-e21fcf8fe2d2",
	'at',
	"4d57997c-962f-4b4f-bc4f-65d0bbf9936e",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO S_DT_PROXY
	VALUES ("4d57997c-962f-4b4f-bc4f-65d0bbf9936e",
	"00000000-0000-0000-0000-000000000000",
	'Justification',
	'The Justification data type is used to specify text at a given location in a compartment.
------------------------------------------------------------------------------
Bridge:GD',
	'',
	'../../Datatypes/Datatypes.xtuml');
INSERT INTO O_TPARM
	VALUES ("41e76be7-0b4d-417d-b9e6-8aa46b00ea4b",
	"a72e9b36-be8b-47bf-bf03-e21fcf8fe2d2",
	'ent_num',
	"ba5eda7a-def5-0000-0000-000000000002",
	0,
	'',
	"d9e617db-7bad-493f-8fdf-79484a6aac2b",
	'');
INSERT INTO O_TPARM
	VALUES ("d9e617db-7bad-493f-8fdf-79484a6aac2b",
	"a72e9b36-be8b-47bf-bf03-e21fcf8fe2d2",
	'comp_num',
	"ba5eda7a-def5-0000-0000-000000000002",
	0,
	'',
	"54994b04-a9a0-4670-82c9-afdedff7c448",
	'');
INSERT INTO O_TFR
	VALUES ("2ba75fb9-a3e4-4987-b4dc-01d103e4ab9b",
	"1f6bd066-3086-44d9-be95-61b2a9464fdb",
	'get_compartments',
	'',
	"ba5eda7a-def5-0000-0000-000000000002",
	1,
	'select many asyncSignals related by self->C_EP[R4003]->C_AS[R4004];
select many syncSignals related by self->C_EP[R4003]->C_IO[R4004];
if(not_empty asyncSignals) and (not_empty syncSignals)
  return 3;
else
  return 2;
end if;',
	1,
	'',
	"a72e9b36-be8b-47bf-bf03-e21fcf8fe2d2");
INSERT INTO O_TFR
	VALUES ("b02adcc0-9ae3-4d0b-a3ea-4114a7fae539",
	"1f6bd066-3086-44d9-be95-61b2a9464fdb",
	'get_entries',
	'',
	"ba5eda7a-def5-0000-0000-000000000002",
	1,
	'if(param.comp_num == 3)
  select many sigs related by self->C_EP[R4003]->C_AS[R4004];
  return cardinality sigs + 1;
elif(param.comp_num == 2)
  select many ops related by self->C_EP[R4003]->C_IO[R4004];
  if(empty ops)
    select many sigs related by self->C_EP[R4003]->C_AS[R4004];
    if(not_empty sigs)
      return cardinality sigs + 1;
    end if;
  end if;
  return cardinality ops;
end if;
return 1;',
	1,
	'',
	"2ba75fb9-a3e4-4987-b4dc-01d103e4ab9b");
INSERT INTO O_TPARM
	VALUES ("29877c14-a41b-4058-938c-5ea5b0f79d98",
	"b02adcc0-9ae3-4d0b-a3ea-4114a7fae539",
	'comp_num',
	"ba5eda7a-def5-0000-0000-000000000002",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO O_TFR
	VALUES ("481bd4ac-db53-441e-b60f-f0fc215c1162",
	"1f6bd066-3086-44d9-be95-61b2a9464fdb",
	'initialize',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'name = ::getUniqueInitialName( 
    instance: self.convertToInstance(), 
    candidateName: "Unnamed Interface" );
success = ::getNewElementName(name:name,instance: self.convertToInstance(),validateName:true);    
if ( success!="") 
 self.Name=success;
else 
 self.dispose();
end if;           ',
	1,
	'',
	"a64aa572-a0f6-4e5c-b703-182bf6fc5d55");
INSERT INTO O_TFR
	VALUES ("279df3e7-00da-4290-b1b2-ad5ecb64ae23",
	"1f6bd066-3086-44d9-be95-61b2a9464fdb",
	'get_style',
	'',
	"05be3a7b-3886-4857-8a5e-5c08c37293ab",
	1,
	'return Style::Box;',
	1,
	'',
	"bee9054d-8b47-4da5-8f0e-52becc26cd23");
INSERT INTO S_DT_PROXY
	VALUES ("05be3a7b-3886-4857-8a5e-5c08c37293ab",
	"00000000-0000-0000-0000-000000000000",
	'Style',
	'The Style data type specifies the precise form a graphical element will take when drawn.
--------------------------------------------------------------------------
Bridge:GD',
	'',
	'../../Datatypes/Datatypes.xtuml');
INSERT INTO O_TFR
	VALUES ("141a32e9-dfd2-4ee8-a285-429cf52e2aab",
	"1f6bd066-3086-44d9-be95-61b2a9464fdb",
	'get_text_style',
	'',
	"05be3a7b-3886-4857-8a5e-5c08c37293ab",
	1,
	'return Style::None;',
	1,
	'',
	"279df3e7-00da-4290-b1b2-ad5ecb64ae23");
INSERT INTO O_TPARM
	VALUES ("fb4d4f2c-036a-4d7c-ba18-0f4528f963f5",
	"141a32e9-dfd2-4ee8-a285-429cf52e2aab",
	'at',
	"4d57997c-962f-4b4f-bc4f-65d0bbf9936e",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO O_TPARM
	VALUES ("8ee36f7e-b448-40a1-bfea-79dd34b38948",
	"141a32e9-dfd2-4ee8-a285-429cf52e2aab",
	'ent_num',
	"ba5eda7a-def5-0000-0000-000000000002",
	0,
	'',
	"0ca5f13c-40b3-4462-8276-5c58fee225c8",
	'');
INSERT INTO O_TPARM
	VALUES ("0ca5f13c-40b3-4462-8276-5c58fee225c8",
	"141a32e9-dfd2-4ee8-a285-429cf52e2aab",
	'comp_num',
	"ba5eda7a-def5-0000-0000-000000000002",
	0,
	'',
	"fb4d4f2c-036a-4d7c-ba18-0f4528f963f5",
	'');
INSERT INTO O_TFR
	VALUES ("f46bd060-42ce-477b-9eb6-38cb72e691a0",
	"1f6bd066-3086-44d9-be95-61b2a9464fdb",
	'newExecutableProperty',
	'',
	"ba5eda7a-def5-0000-0000-000000000005",
	1,
	'create object instance signal of C_EP;
relate self to signal across R4003;
select many references related by self->C_IR[R4012];
if(param.asynchronous)
 create object instance asignal of C_AS;
 relate signal to asignal across R4004;
 asignal.initialize();
else
 create object instance ssignal of C_IO;
 relate signal to ssignal across R4004;
 ssignal.initialize();
end if;
return signal.Id;',
	1,
	'',
	"301db812-27fc-4627-a6c6-577c41052eef");
INSERT INTO O_TPARM
	VALUES ("292cf79d-e84d-4f17-8db4-26cfa349c3b4",
	"f46bd060-42ce-477b-9eb6-38cb72e691a0",
	'asynchronous',
	"ba5eda7a-def5-0000-0000-000000000001",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO O_TFR
	VALUES ("21385dde-eaf3-4821-8d4b-a0e2ca5f471b",
	"1f6bd066-3086-44d9-be95-61b2a9464fdb",
	'get_operation_compartment_text',
	'',
	"ba5eda7a-def5-0000-0000-000000000004",
	1,
	'result = "";
index = 1;
select any operation related by self->C_EP[R4003]->C_IO[R4004] where (selected.Previous_Id == GD::NULL_UNIQUE_ID());
while (not_empty operation)
  if(index == param.entry_num)
    result = result + operation.Name;
    result = result + "(";
    parm_separator = "";
    select any parameter related by operation->C_EP[R4004]->C_PP[R4006] where (selected.Previous_PP_Id == GD::NULL_UNIQUE_ID());
    while (not_empty parameter)
      result = result + parm_separator;
      result = result + parameter.Name;
      result = result + parameter.Dimensions;
      result = result + ":";
      select one dt related by parameter->S_DT[R4007];
      if ( not_empty dt )
        result = result + dt.Name;
      else
        result = result + ::getOrphanedElementName();
      end if;
      parm_separator = ", ";
      select one parameter related by parameter->C_PP[R4021.''precedes''];
    end while;
    result = result + ")";
    select one dt related by operation->S_DT[R4008];
    result = result + ":" + dt.Name;
    if dt.Name != "void"
      result = result + operation.Return_Dimensions;
    end if;
    result = result + GD::newline();
    return result;
  end if;
  index = index + 1;
  select one operation related by operation->C_IO[R4019.''precedes''];
end while;
return "";
',
	1,
	'',
	"b02adcc0-9ae3-4d0b-a3ea-4114a7fae539");
INSERT INTO O_TPARM
	VALUES ("f9b28386-d40a-4675-a1e0-097557bec852",
	"21385dde-eaf3-4821-8d4b-a0e2ca5f471b",
	'entry_num',
	"ba5eda7a-def5-0000-0000-000000000002",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO O_TFR
	VALUES ("bee9054d-8b47-4da5-8f0e-52becc26cd23",
	"1f6bd066-3086-44d9-be95-61b2a9464fdb",
	'get_signal_compartment_text',
	'',
	"ba5eda7a-def5-0000-0000-000000000004",
	1,
	'result = "";
// note that we must start at index 2 here.  The reason is that if we have any
// signals we always reserve the first slot for the signals title
index = 2;
select any signal related by self->C_EP[R4003]->C_AS[R4004] where (selected.Previous_Id == GD::NULL_UNIQUE_ID());
while (not_empty signal)
  if(index == param.entry_num)
    result = result + signal.Name;
    result = result + "(";
    parm_separator = "";
    select any parameter related by signal->C_EP[R4004]->C_PP[R4006] where (selected.Previous_PP_Id == GD::NULL_UNIQUE_ID());
    while (not_empty parameter)
      result = result + parm_separator;
      result = result + parameter.Name;
      result = result + parameter.Dimensions;
      result = result + ":";
      select one dt related by parameter->S_DT[R4007];
      if ( not_empty dt )
        result = result + dt.Name;
      else
        result = result + ::getOrphanedElementName();
      end if;
      parm_separator = ", ";
      select one parameter related by parameter->C_PP[R4021.''precedes''];
    end while;
    result = result + ")" + GD::newline();
    return result;
  end if;
  index = index + 1;
  select one signal related by signal->C_AS[R4020.''precedes''];
end while;
return "";',
	1,
	'',
	"21385dde-eaf3-4821-8d4b-a0e2ca5f471b");
INSERT INTO O_TPARM
	VALUES ("44d3e431-f178-4fb5-a77c-36aaf9400e8b",
	"bee9054d-8b47-4da5-8f0e-52becc26cd23",
	'entry_num',
	"ba5eda7a-def5-0000-0000-000000000002",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO O_TFR
	VALUES ("a64aa572-a0f6-4e5c-b703-182bf6fc5d55",
	"1f6bd066-3086-44d9-be95-61b2a9464fdb",
	'hasEPWithDirection',
	'',
	"ba5eda7a-def5-0000-0000-000000000001",
	1,
	'select any op related by self->C_EP[R4003]->C_IO[R4004] 
							 	  where (selected.Direction == param.direction);
select any sig related by self->C_EP[R4003]->C_AS[R4004]
								  where (selected.Direction == param.direction);
return not_empty op or not_empty sig;
',
	1,
	'',
	"141a32e9-dfd2-4ee8-a285-429cf52e2aab");
INSERT INTO O_TPARM
	VALUES ("70355763-edc3-44e9-a584-b0946ea12666",
	"a64aa572-a0f6-4e5c-b703-182bf6fc5d55",
	'direction',
	"57d1df51-0ab1-456e-93d3-1fbe57bba10d",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO S_DT_PROXY
	VALUES ("57d1df51-0ab1-456e-93d3-1fbe57bba10d",
	"00000000-0000-0000-0000-000000000000",
	'IFDirectionType',
	'BridgePoint allows the user to specify communication direction of individual 
elements in an interface as opposed to on the interface as a whole (which is 
what UML does).  For example, in UML when an interface is specified as being 
provided, all that interface''s operations are one way (from server to 
client).  Likewise, when a interface is specified as being required, all the 
operations are one way (from client to server).  In reality, interfaces are 
not often like this. There is a mixture of client to server and server to 
client in one interface.     This enum is used at the operation/signal level 
to determine if it is to be used for client to server or server to client 
communication.',
	'',
	'../../Datatypes/Datatypes.xtuml');
INSERT INTO O_TFR
	VALUES ("301db812-27fc-4627-a6c6-577c41052eef",
	"1f6bd066-3086-44d9-be95-61b2a9464fdb",
	'initializeOrder',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'// Alpha-sort the C_AS elements if they have not yet been ordered
select many peers related by self->C_EP[R4003]->C_AS[R4004];
if (cardinality peers > 1)
    initialOrderingCheckPerformed = false;
	select any head related by self->C_EP[R4003]->C_AS[R4004] where (selected.Id == GD::NULL_UNIQUE_ID());
	endOfList = head;
	loopCnt = 0;
	for each peer in peers
	  if ( not initialOrderingCheckPerformed)
	    select one predecessor related by peer->C_AS[R4020.''precedes''];
	    select one successor related by peer->C_AS[R4020.''succeeds''];
	    initialOrderingCheckPerformed = true;
	    if (not_empty  predecessor or not_empty  successor)
	      // Already ordered
	      break;
	    end if;
	    head = peer;
	    endOfList = peer;
	  end if;
	  
      if (loopCnt == 1)
        if (peer.Name < head.Name)
          relate peer to head across R4020.''precedes'';
          endOfList = peer;
        else
          relate head to peer across R4020.''precedes'';
          head = peer;
        end if;
      elif (loopCnt > 1)
        insertPoint = head;
        select one next related by head->C_AS[R4020.''succeeds''];
        while (not_empty next)
          if (next.Name < peer.Name)
            break;
          else
            insertPoint = next;          
            select one next related by next->C_AS[R4020.''succeeds''];
          end if;
        end while;
        
        if (empty next)
          // New end of list
          relate peer to endOfList across R4020.''precedes'';   
          endOfList = peer;       
        else
          if ((insertPoint == head) and (peer.Name > head.Name))
            // New head
            relate head to peer across R4020.''precedes'';
            head = peer;
          else
            unrelate next from insertPoint across R4020.''precedes'';
            relate peer to insertPoint across R4020.''precedes'';
            relate next to peer across R4020.''precedes'';
          end if;          
        end if;
      end if;
      
      loopCnt = loopCnt + 1;
	end for;
end if;

// Alpha-sort the C_IO elements if they have not yet been ordered
select many ioPeers related by self->C_EP[R4003]->C_IO[R4004];
if (cardinality ioPeers > 1)
    initialOrderingCheckPerformed = false;
	select any head related by self->C_EP[R4003]->C_IO[R4004] where (selected.Id == GD::NULL_UNIQUE_ID());
	endOfList = head;
	loopCnt = 0;
	for each peer in ioPeers
	  if ( not initialOrderingCheckPerformed)
	    select one predecessor related by peer->C_IO[R4019.''precedes''];
	    select one successor related by peer->C_IO[R4019.''succeeds''];
	    initialOrderingCheckPerformed = true;
	    if (not_empty  predecessor or not_empty  successor)
	      // Already ordered
	      break;
	    end if;
	    head = peer;
	    endOfList = peer;
	  end if;
	  
      if (loopCnt == 1)
        if (peer.Name < head.Name)
          relate peer to head across R4019.''precedes'';
          endOfList = peer;
        else
          relate head to peer across R4019.''precedes'';
          head = peer;
        end if;
      elif (loopCnt > 1)
        insertPoint = head;
        select one next related by head->C_IO[R4019.''succeeds''];
        while (not_empty next)
          if (next.Name < peer.Name)
            break;
          else
            insertPoint = next;          
            select one next related by next->C_IO[R4019.''succeeds''];
          end if;
        end while;
        
        if (empty next)
          // New end of list
          relate peer to endOfList across R4019.''precedes'';   
          endOfList = peer;       
        else
          if ((insertPoint == head) and (peer.Name > head.Name))
            // New head
            relate head to peer across R4019.''precedes'';
            head = peer;
          else
            unrelate next from insertPoint across R4019.''precedes'';
            relate peer to insertPoint across R4019.''precedes'';
            relate next to peer across R4019.''precedes'';
          end if;          
        end if;
      end if;
      
      loopCnt = loopCnt + 1;
	end for;
end if;',
	1,
	'',
	"481bd4ac-db53-441e-b60f-f0fc215c1162");
INSERT INTO O_TFR
	VALUES ("64cb63ae-da93-4fd0-a796-9f48bb13dd20",
	"1f6bd066-3086-44d9-be95-61b2a9464fdb",
	'get_ooa_id',
	'',
	"ba5eda7a-def5-0000-0000-000000000005",
	1,
	'return self.Id;',
	1,
	'',
	"f46bd060-42ce-477b-9eb6-38cb72e691a0");
INSERT INTO O_TFR
	VALUES ("a2f147a1-d8e4-4b4a-a01d-4e66020fdb1c",
	"1f6bd066-3086-44d9-be95-61b2a9464fdb",
	'pasteInterfaceOperation',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'select any iop from instances of C_IO where (selected.Id == param.id);
if(not_empty iop)
  select one existingEP related by iop->C_EP[R4004];
  if(not_empty existingEP)
    select one existing related by existingEP->C_I[R4003];
    if(not_empty existing)
      unrelate existing from existingEP across R4003;
    end if;
    relate existingEP to self across R4003;  
    iop.Name = ::getUniqueInitialNameInParent(instance:iop.convertToInstance(),
  						name:iop.Name, parent:self.convertToInstance());
    self.addInterfaceOperationToOrder(id:iop.Id);
  end if;
end if;',
	1,
	'',
	"64cb63ae-da93-4fd0-a796-9f48bb13dd20");
INSERT INTO O_TPARM
	VALUES ("8dc6fcf3-a2dd-4860-a546-230c7e03865b",
	"a2f147a1-d8e4-4b4a-a01d-4e66020fdb1c",
	'id',
	"ba5eda7a-def5-0000-0000-000000000005",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO O_TFR
	VALUES ("7d633866-ce4c-4513-b5ef-93924743183c",
	"1f6bd066-3086-44d9-be95-61b2a9464fdb",
	'addInterfaceOperationToOrder',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'select any interfaceOperation from instances of C_IO
                                                where (selected.Id == param.id);
if(not_empty interfaceOperation)
  ::changeNotificationEnablement(enabled:false);
  select many peers related by self->C_EP[R4003]->C_IO[R4004];
  for each peer in peers
    if (peer != interfaceOperation)
      select one predecessor related by peer->C_IO[R4019.''precedes''];
      if (empty predecessor)
        relate interfaceOperation to peer across R4019.''succeeds'';
      end if;
    end if;
  end for;
  ::changeNotificationEnablement(enabled:true);
end if;
',
	1,
	'',
	"a2f147a1-d8e4-4b4a-a01d-4e66020fdb1c");
INSERT INTO O_TPARM
	VALUES ("2717f15e-38c4-4eb0-b76e-3877b40d7d78",
	"7d633866-ce4c-4513-b5ef-93924743183c",
	'id',
	"ba5eda7a-def5-0000-0000-000000000005",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO O_TFR
	VALUES ("7cc4dd95-41f7-4411-9073-f59f77bb554c",
	"1f6bd066-3086-44d9-be95-61b2a9464fdb",
	'pasteInterfaceSignal',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'select any sig from instances of C_AS where (selected.Id == param.id);
if(not_empty sig)
  select one existingEP related by sig->C_EP[R4004];
  if(not_empty existingEP)
    select one existing related by existingEP->C_I[R4003];
    if(not_empty existing)
      unrelate existing from existingEP across R4003;
    end if;
    relate existingEP to self across R4003;
    sig.Name = ::getUniqueInitialNameInParent(instance:sig.convertToInstance(),
  						name:sig.Name, parent:self.convertToInstance());
    self.addInterfaceSignalToOrder(id:sig.Id);
  end if;  
end if;',
	1,
	'',
	"7d633866-ce4c-4513-b5ef-93924743183c");
INSERT INTO O_TPARM
	VALUES ("be6a9435-9d62-4c82-9217-2b54fddcb215",
	"7cc4dd95-41f7-4411-9073-f59f77bb554c",
	'id',
	"ba5eda7a-def5-0000-0000-000000000005",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO O_TFR
	VALUES ("12f58b90-1a5c-4c61-b2b5-96f6baf809dc",
	"1f6bd066-3086-44d9-be95-61b2a9464fdb",
	'addInterfaceSignalToOrder',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'select any signal from instances of C_AS where (selected.Id == param.id);
::changeNotificationEnablement(enabled:false);
select many peers related by self->C_EP[R4003]->C_AS[R4004];
for each peer in peers
  if (peer != signal)
    select one predecessor related by peer->C_AS[R4020.''precedes''];
    if (empty predecessor)
      relate signal to peer across R4020.''succeeds'';
    end if;
  end if;
end for;
::changeNotificationEnablement(enabled:true);',
	1,
	'',
	"7cc4dd95-41f7-4411-9073-f59f77bb554c");
INSERT INTO O_TPARM
	VALUES ("1fe45af7-7f0d-46e8-a3a3-9c38616c517e",
	"12f58b90-1a5c-4c61-b2b5-96f6baf809dc",
	'id',
	"ba5eda7a-def5-0000-0000-000000000005",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO O_TFR
	VALUES ("dcda9e76-ec67-49d0-926d-7405bef451cb",
	"1f6bd066-3086-44d9-be95-61b2a9464fdb",
	'getPath',
	'',
	"ba5eda7a-def5-0000-0000-000000000004",
	1,
	'// Data Type::getPath()
path = "";
if(param.includeSelf)
  path = self.Name;
end if;
if(param.path != "")
  path = path + "::" + param.path;
end if;
select one package related by self->PE_PE[R8001]->EP_PKG[R8000];
select one component related by self->PE_PE[R8001]->C_C[R8003];
  if not_empty package
    path = package.getQualifiedName();
  else
    path = component.getQualifiedName();
  end if;
return path;',
	1,
	'',
	"12f58b90-1a5c-4c61-b2b5-96f6baf809dc");
INSERT INTO O_TPARM
	VALUES ("5088076e-63aa-4c8f-a66e-f3c00cf2fba4",
	"dcda9e76-ec67-49d0-926d-7405bef451cb",
	'path',
	"ba5eda7a-def5-0000-0000-000000000004",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO O_TPARM
	VALUES ("409c55d7-de82-4035-a9b9-08c0e0d0c5b4",
	"dcda9e76-ec67-49d0-926d-7405bef451cb",
	'includeSelf',
	"ba5eda7a-def5-0000-0000-000000000001",
	0,
	'',
	"5088076e-63aa-4c8f-a66e-f3c00cf2fba4",
	'');
INSERT INTO O_TFR
	VALUES ("57b2fbba-ff74-42e7-b8f7-422916a2f1c5",
	"1f6bd066-3086-44d9-be95-61b2a9464fdb",
	'collectReferencesForSynchronization',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'/**
 *  Collect any references that require synchronization support
 */
// only push synchronizations are support here
if(param.syncType == SynchronizationType::Push)
  select many interfaceReferences related by self->C_IR[R4012];
  for each interfaceReference in interfaceReferences
    interfaceReference.collectReferencesForSynchronization(
                   referenceList:param.referenceList, syncType: param.syncType);
  end for;
end if;',
	1,
	'',
	"dcda9e76-ec67-49d0-926d-7405bef451cb");
INSERT INTO O_TPARM
	VALUES ("636bddfc-2fb4-4f6f-ac08-e77864d23d44",
	"57b2fbba-ff74-42e7-b8f7-422916a2f1c5",
	'referenceList',
	"a5d8b590-a627-4af4-afdf-152c889769b6",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO O_TPARM
	VALUES ("fcd2ad03-38af-462f-a78f-2af1da6abc2c",
	"57b2fbba-ff74-42e7-b8f7-422916a2f1c5",
	'syncType',
	"4f33ba55-5c9d-455a-b1bc-43ab2c076b7f",
	0,
	'',
	"636bddfc-2fb4-4f6f-ac08-e77864d23d44",
	'');
INSERT INTO S_DT_PROXY
	VALUES ("4f33ba55-5c9d-455a-b1bc-43ab2c076b7f",
	"00000000-0000-0000-0000-000000000000",
	'SynchronizationType',
	'',
	'',
	'../../Datatypes/Datatypes.xtuml');
INSERT INTO O_NBATTR
	VALUES ("c7bc6410-b721-448d-982b-3cfaffbe6f6d",
	"1f6bd066-3086-44d9-be95-61b2a9464fdb");
INSERT INTO O_BATTR
	VALUES ("c7bc6410-b721-448d-982b-3cfaffbe6f6d",
	"1f6bd066-3086-44d9-be95-61b2a9464fdb");
INSERT INTO O_ATTR
	VALUES ("c7bc6410-b721-448d-982b-3cfaffbe6f6d",
	"1f6bd066-3086-44d9-be95-61b2a9464fdb",
	"c09815a1-7688-4659-9a2e-a91b228ae013",
	'Name',
	'Full Name: Interface Name',
	'',
	'Name',
	0,
	"ba5eda7a-def5-0000-0000-000000000004",
	'',
	'');
INSERT INTO O_NBATTR
	VALUES ("49493458-f4da-4454-916f-dd04e02b85a8",
	"1f6bd066-3086-44d9-be95-61b2a9464fdb");
INSERT INTO O_BATTR
	VALUES ("49493458-f4da-4454-916f-dd04e02b85a8",
	"1f6bd066-3086-44d9-be95-61b2a9464fdb");
INSERT INTO O_ATTR
	VALUES ("49493458-f4da-4454-916f-dd04e02b85a8",
	"1f6bd066-3086-44d9-be95-61b2a9464fdb",
	"c7bc6410-b721-448d-982b-3cfaffbe6f6d",
	'Descrip',
	'Full Name: Interface Description
Description: A textual description of this provided interface.',
	'',
	'Descrip',
	0,
	"ba5eda7a-def5-0000-0000-000000000004",
	'',
	'');
INSERT INTO O_REF
	VALUES ("1f6bd066-3086-44d9-be95-61b2a9464fdb",
	"6af35b2a-8145-4e12-9330-bfc209409bb6",
	0,
	"6c0ac341-1d88-4650-b3fe-2c344b920ed1",
	"4cc3d8f8-81ab-4a0d-9f5f-70222d3d6371",
	"f7ee97d5-22c4-4fd8-bee6-cb69ccddfafd",
	"05fa1d91-2479-4e4d-97fd-25a6c7afe5b8",
	"69520fc5-2476-4bdc-85e3-3d66e4d46968",
	"6e0283cf-2c09-4873-970b-1056e7356158",
	"00000000-0000-0000-0000-000000000000",
	0,
	'',
	'Packageable Element',
	'Element_ID',
	'R8001');
INSERT INTO R_RGO_PROXY
	VALUES ("1f6bd066-3086-44d9-be95-61b2a9464fdb",
	"4cc3d8f8-81ab-4a0d-9f5f-70222d3d6371",
	"f7ee97d5-22c4-4fd8-bee6-cb69ccddfafd",
	'../../Packageable Element/Packageable Element.xtuml');
INSERT INTO O_RTIDA_PROXY
	VALUES ("6c0ac341-1d88-4650-b3fe-2c344b920ed1",
	"6af35b2a-8145-4e12-9330-bfc209409bb6",
	0,
	"4cc3d8f8-81ab-4a0d-9f5f-70222d3d6371",
	"05fa1d91-2479-4e4d-97fd-25a6c7afe5b8",
	'../../Packageable Element/Packageable Element.xtuml');
INSERT INTO O_RATTR
	VALUES ("69520fc5-2476-4bdc-85e3-3d66e4d46968",
	"1f6bd066-3086-44d9-be95-61b2a9464fdb",
	"6c0ac341-1d88-4650-b3fe-2c344b920ed1",
	"6af35b2a-8145-4e12-9330-bfc209409bb6",
	0,
	'Element_ID');
INSERT INTO O_BATTR_PROXY
	VALUES ("6c0ac341-1d88-4650-b3fe-2c344b920ed1",
	"6af35b2a-8145-4e12-9330-bfc209409bb6",
	'../../Packageable Element/Packageable Element/Packageable Element.xtuml');
INSERT INTO O_ATTR
	VALUES ("69520fc5-2476-4bdc-85e3-3d66e4d46968",
	"1f6bd066-3086-44d9-be95-61b2a9464fdb",
	"00000000-0000-0000-0000-000000000000",
	'Id',
	'',
	'',
	'Id',
	0,
	"ba5eda7a-def5-0000-0000-000000000007",
	'',
	'');
INSERT INTO O_NBATTR
	VALUES ("c09815a1-7688-4659-9a2e-a91b228ae013",
	"1f6bd066-3086-44d9-be95-61b2a9464fdb");
INSERT INTO O_BATTR
	VALUES ("c09815a1-7688-4659-9a2e-a91b228ae013",
	"1f6bd066-3086-44d9-be95-61b2a9464fdb");
INSERT INTO O_ATTR
	VALUES ("c09815a1-7688-4659-9a2e-a91b228ae013",
	"1f6bd066-3086-44d9-be95-61b2a9464fdb",
	"69520fc5-2476-4bdc-85e3-3d66e4d46968",
	'Package_ID',
	'',
	'',
	'Package_ID',
	0,
	"ba5eda7a-def5-0000-0000-000000000005",
	'',
	'');
INSERT INTO O_ID
	VALUES (0,
	"1f6bd066-3086-44d9-be95-61b2a9464fdb");
INSERT INTO O_OIDA
	VALUES ("69520fc5-2476-4bdc-85e3-3d66e4d46968",
	"1f6bd066-3086-44d9-be95-61b2a9464fdb",
	0,
	'Id');
INSERT INTO O_ID
	VALUES (1,
	"1f6bd066-3086-44d9-be95-61b2a9464fdb");
INSERT INTO O_ID
	VALUES (2,
	"1f6bd066-3086-44d9-be95-61b2a9464fdb");
INSERT INTO PE_PE
	VALUES ("1f6bd066-3086-44d9-be95-61b2a9464fdb",
	1,
	"c2aef6af-89fe-4e4a-a894-da16c0b6f512",
	"00000000-0000-0000-0000-000000000000",
	4);
INSERT INTO EP_PKG_PROXY
	VALUES ("c2aef6af-89fe-4e4a-a894-da16c0b6f512",
	"00000000-0000-0000-0000-000000000000",
	"2f3ea6a7-20e9-405c-b68c-7fba041e7daf",
	'Component',
	'// This is used by schema_gen to ignore this subsystem (for publication)
TRANSLATE_FOR_EXTERNAL_USE:FALSE

The component subsystem contains the classes necessary to capture the data
required for modeling components.',
	4000,
	'../Component.xtuml');
