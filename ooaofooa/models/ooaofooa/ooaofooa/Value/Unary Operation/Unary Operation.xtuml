-- BP 7.1.6 content: ModelClass syschar: 3 persistence-version: 7.1.6

INSERT INTO O_OBJ
	VALUES ("cd5fcead-5c27-4496-abee-b4225b87507e",
	'Unary Operation',
	809,
	'V_UNY',
	'Like binary operators, unary operators modify the value in some way, but in this case only a single value is needed. One example is - (unary minus) which negates any numeric value. However other unary operators include the empty and not_empty set operators.',
	"00000000-0000-0000-0000-000000000000");
INSERT INTO O_TFR
	VALUES ("e25baf13-0973-4932-8a25-9e49312f9532",
	"cd5fcead-5c27-4496-abee-b4225b87507e",
	'dispose',
	'This operation disconnects an instance, and all instances it is 
responsible for, from the model.',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'select one op related by self->V_VAL[R804];
if ( not_empty op )
  unrelate op from self across R804;
  op.dispose();
end if;
delete object instance self;
',
	1,
	'',
	"00000000-0000-0000-0000-000000000000");
INSERT INTO O_TFR
	VALUES ("8a16dda1-8305-479e-aeb6-bdcbd0207ceb",
	"cd5fcead-5c27-4496-abee-b4225b87507e",
	'getValue',
	'Performs Unary Operation and returns the value.',
	"a5d8b590-a627-4af4-afdf-152c889769b6",
	1,
	'//Value: Unary Operation.getValue()
select one body related by self->V_VAL[R801]->ACT_BLK[R826]->ACT_ACT[R601];
select one dt related by self->V_VAL[R801]->S_DT[R820];
coreDataTypeName = dt.getCoreDataTypeName();
if (coreDataTypeName == "boolean")
  return GD::boolean_to_instance(value:self.getBoolean(stack_frame_id: param.stack_frame_id));
elif (coreDataTypeName == "integer")
  return GD::int_to_instance(value:self.getInteger(stack_frame_id: param.stack_frame_id));
elif (coreDataTypeName == "real")
  return GD::real_to_instance(value:self.getReal(stack_frame_id: param.stack_frame_id));         
else
  error_message = "Error: Did not find a supported data type " + coreDataTypeName + " in attempt to retrieve value in unary operation.";
  USER::logError(msg:error_message,path:body.getPath() );
end if;
  
return GD::string_to_instance(value:"Error");',
	1,
	'',
	"80722a20-d9b0-4305-a9b9-8c3ec4ff1c81");
INSERT INTO O_TPARM
	VALUES ("56006a27-d32f-4b88-b703-d5f51c709461",
	"8a16dda1-8305-479e-aeb6-bdcbd0207ceb",
	'stack_frame_id',
	"ba5eda7a-def5-0000-0000-000000000005",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO S_DT_PROXY
	VALUES ("a5d8b590-a627-4af4-afdf-152c889769b6",
	"00000000-0000-0000-0000-000000000000",
	'instance',
	'',
	'',
	'../../Datatypes/Datatypes.xtuml');
INSERT INTO O_TFR
	VALUES ("e19d11b5-e455-4dfc-aa5a-62cd16bf72ac",
	"cd5fcead-5c27-4496-abee-b4225b87507e",
	'getBoolean',
	'',
	"ba5eda7a-def5-0000-0000-000000000001",
	1,
	'// Value: Unary Operation.getBoolean()
select one body related by self->V_VAL[R801]->ACT_BLK[R826]->ACT_ACT[R601];
select one operand related by self->V_VAL[R804];
select any result related by operand->I_VSF[R2978] where
                                selected.Stack_Frame_ID == param.stack_frame_id;
select any stack_frame related by self->V_VAL[R801]->I_VSF[R2978]->
             I_STF[R2951] where selected.Stack_Frame_ID == param.stack_frame_id;
select one rtVal related by result->RV_RVL[R3305];
stack_frame.popValue(value_id:operand.Value_ID);
if (self.Operator == "not")
  // Then this is a simple Boolean Unary Operation
  return not GD::instance_to_boolean(value:rtVal.getValue());

elif ((self.Operator == "empty") or (self.Operator == "not_empty"))  
  // Check for an instance reference
  select one instanceHandle related by operand->V_IRF[R801]->V_VAR[R808]->V_INT[R814];
  if (not_empty instanceHandle)
    // Based on the operator, execute the proper command
    isEmpty = instanceHandle.isEmpty(stack_frame_id: param.stack_frame_id);
    if(self.Operator == "not_empty")
      return not isEmpty;
    elif(self.Operator == "empty")
      return isEmpty;
    end if;
  else
  // Check for an instance set reference
    select one instanceSet related by operand->V_ISR[R801]->V_VAR[R809]->V_INS[R814];    
    if (not_empty instanceSet)
      // Based on the operator, execute the proper command
      isEmpty = instanceSet.isEmpty(stack_frame_id: param.stack_frame_id);
      if(self.Operator == "not_empty")
        return not isEmpty;
      elif(self.Operator == "empty")
        return isEmpty;
      end if;
    end if;    
  end if;  
end if;

pathMsg = "<No Path Available - Empty instance>";
    if (not_empty body)
      pathMsg = body.getPath();
    end if;
	USER::logError(msg:"Unary Operation.getBoolean error: Could not identify unary operator; returning False",path:pathMsg);
return false;',
	1,
	'',
	"e25baf13-0973-4932-8a25-9e49312f9532");
INSERT INTO O_TPARM
	VALUES ("81a98aa3-105e-4c52-b9f8-479996e2d266",
	"e19d11b5-e455-4dfc-aa5a-62cd16bf72ac",
	'stack_frame_id',
	"ba5eda7a-def5-0000-0000-000000000005",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO O_TFR
	VALUES ("e3a052b3-7bb7-47d0-a5b5-f94a8c21aaba",
	"cd5fcead-5c27-4496-abee-b4225b87507e",
	'getInteger',
	'',
	"ba5eda7a-def5-0000-0000-000000000002",
	1,
	'// Value: Unary Operation.getInteger()
select one body related by self->V_VAL[R801]->ACT_BLK[R826]->ACT_ACT[R601];
select one operand related by self->V_VAL[R804];
select any result related by operand->I_VSF[R2978] where
                                selected.Stack_Frame_ID == param.stack_frame_id;
select one rtVal related by result->RV_RVL[R3305];
select any stack_frame related by self->V_VAL[R801]->I_VSF[R2978]->
             I_STF[R2951] where selected.Stack_Frame_ID == param.stack_frame_id;
stack_frame.popValue(value_id:operand.Value_ID);
if (self.Operator == "+")
  return +(GD::instance_to_int(value:rtVal.getValue()));
elif (self.Operator == "-")
 return -(GD::instance_to_int(value:rtVal.getValue()));
elif (self.Operator == "cardinality")
  // Check for an instance set reference
  select one instanceSetRef related by operand->V_ISR[R801];
  if (not_empty instanceSetRef)
    select one instanceSet related by instanceSetRef->V_VAR[R809]->V_INS[R814];
    return instanceSet.getCardinality(stack_frame_id: param.stack_frame_id);      
  end if;
  // Check for an instance reference
  select one instanceRef related by operand->V_IRF[R801];
  if (not_empty instanceRef)
    select one inst related by instanceRef->V_VAR[R808]->V_INT[R814];
    return inst.getCardinality(stack_frame_id: param.stack_frame_id);
  end if;
end if;
 
pathMsg = "<No Path Available - Empty instance>";
    if (not_empty body)
      pathMsg = body.getPath();
    end if;
	USER::logError(msg:"Unary Operation.getInteger error: not applying unary operator, return default value of 0",path:pathMsg);
return 0;
',
	1,
	'',
	"e19d11b5-e455-4dfc-aa5a-62cd16bf72ac");
INSERT INTO O_TPARM
	VALUES ("62012260-2266-4a1a-86df-50d5ead37bf1",
	"e3a052b3-7bb7-47d0-a5b5-f94a8c21aaba",
	'stack_frame_id',
	"ba5eda7a-def5-0000-0000-000000000005",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO O_TFR
	VALUES ("80722a20-d9b0-4305-a9b9-8c3ec4ff1c81",
	"cd5fcead-5c27-4496-abee-b4225b87507e",
	'getReal',
	'',
	"ba5eda7a-def5-0000-0000-000000000003",
	1,
	'// Value: Unary Operation.getReal()
select one body related by self->V_VAL[R801]->ACT_BLK[R826]->ACT_ACT[R601];
select one operand related by self->V_VAL[R804];
select any result related by operand->I_VSF[R2978] where
                                selected.Stack_Frame_ID == param.stack_frame_id;
select one rtVal related by result->RV_RVL[R3305];
select any stack_frame related by self->V_VAL[R801]->I_VSF[R2978]->
             I_STF[R2951] where selected.Stack_Frame_ID == param.stack_frame_id;
stack_frame.popValue(value_id:operand.Value_ID);
if (self.Operator == "+")
  return +(GD::instance_to_real(value:rtVal.getValue()));
elif (self.Operator == "-")
 return -(GD::instance_to_real(value:rtVal.getValue()));
end if;

pathMsg = "<No Path Available - Empty instance>";
    if (not_empty body)
      pathMsg = body.getPath();
    end if;
	USER::logError(msg:"Unary Operation.getReal error: not applying unary operator",path:pathMsg);
return GD::instance_to_real(value:rtVal.getValue());
 ',
	1,
	'',
	"e3a052b3-7bb7-47d0-a5b5-f94a8c21aaba");
INSERT INTO O_TPARM
	VALUES ("6026c3d4-1078-4845-84d9-a1a6865e6af7",
	"80722a20-d9b0-4305-a9b9-8c3ec4ff1c81",
	'stack_frame_id',
	"ba5eda7a-def5-0000-0000-000000000005",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO O_REF
	VALUES ("cd5fcead-5c27-4496-abee-b4225b87507e",
	"43ea4f47-4fe8-4167-8153-9e199477d0fd",
	0,
	"6e185a42-0dc6-4b9d-9d4b-38cb7c8aa772",
	"06497a90-3e1f-4449-b56c-c0400f566edf",
	"13fb7686-4316-42e4-ade7-7d62f7a30a78",
	"b8c468d1-d7d3-40b3-85a0-dac116856ce9",
	"187847e1-283a-47dc-9866-499942f41c60",
	"95623c75-4249-4897-a590-c71e2683061c",
	"00000000-0000-0000-0000-000000000000",
	0,
	'',
	'Value',
	'Value_ID',
	'R801');
INSERT INTO R_RGO_PROXY
	VALUES ("cd5fcead-5c27-4496-abee-b4225b87507e",
	"06497a90-3e1f-4449-b56c-c0400f566edf",
	"13fb7686-4316-42e4-ade7-7d62f7a30a78",
	'../Value.xtuml');
INSERT INTO O_RTIDA_PROXY
	VALUES ("6e185a42-0dc6-4b9d-9d4b-38cb7c8aa772",
	"43ea4f47-4fe8-4167-8153-9e199477d0fd",
	0,
	"06497a90-3e1f-4449-b56c-c0400f566edf",
	"b8c468d1-d7d3-40b3-85a0-dac116856ce9",
	'../Value.xtuml');
INSERT INTO O_RATTR
	VALUES ("187847e1-283a-47dc-9866-499942f41c60",
	"cd5fcead-5c27-4496-abee-b4225b87507e",
	"6e185a42-0dc6-4b9d-9d4b-38cb7c8aa772",
	"43ea4f47-4fe8-4167-8153-9e199477d0fd",
	1,
	'Value_ID');
INSERT INTO O_BATTR_PROXY
	VALUES ("6e185a42-0dc6-4b9d-9d4b-38cb7c8aa772",
	"43ea4f47-4fe8-4167-8153-9e199477d0fd",
	'../Value/Value.xtuml');
INSERT INTO O_ATTR
	VALUES ("187847e1-283a-47dc-9866-499942f41c60",
	"cd5fcead-5c27-4496-abee-b4225b87507e",
	"00000000-0000-0000-0000-000000000000",
	'Value_ID',
	'',
	'',
	'Value_ID',
	0,
	"ba5eda7a-def5-0000-0000-000000000007",
	'',
	'');
INSERT INTO O_REF
	VALUES ("cd5fcead-5c27-4496-abee-b4225b87507e",
	"43ea4f47-4fe8-4167-8153-9e199477d0fd",
	0,
	"6e185a42-0dc6-4b9d-9d4b-38cb7c8aa772",
	"324e0113-dbe9-4018-abb4-406e5fbaf8a4",
	"03773cd3-b33d-4323-b340-b226016d6f2d",
	"1e079ca9-bdd5-4aab-b989-3e645bf8ba87",
	"818d547b-73be-4385-901b-3ccbd7f690ea",
	"835165e3-30de-4ca8-b77a-255b9cdb1350",
	"00000000-0000-0000-0000-000000000000",
	0,
	'',
	'Value',
	'Value_ID',
	'R804.''has operand''');
INSERT INTO R_RGO_PROXY
	VALUES ("cd5fcead-5c27-4496-abee-b4225b87507e",
	"324e0113-dbe9-4018-abb4-406e5fbaf8a4",
	"03773cd3-b33d-4323-b340-b226016d6f2d",
	'../Value.xtuml');
INSERT INTO O_RTIDA_PROXY
	VALUES ("6e185a42-0dc6-4b9d-9d4b-38cb7c8aa772",
	"43ea4f47-4fe8-4167-8153-9e199477d0fd",
	0,
	"324e0113-dbe9-4018-abb4-406e5fbaf8a4",
	"1e079ca9-bdd5-4aab-b989-3e645bf8ba87",
	'../Value.xtuml');
INSERT INTO O_RATTR
	VALUES ("818d547b-73be-4385-901b-3ccbd7f690ea",
	"cd5fcead-5c27-4496-abee-b4225b87507e",
	"6e185a42-0dc6-4b9d-9d4b-38cb7c8aa772",
	"43ea4f47-4fe8-4167-8153-9e199477d0fd",
	1,
	'Value_ID');
INSERT INTO O_ATTR
	VALUES ("818d547b-73be-4385-901b-3ccbd7f690ea",
	"cd5fcead-5c27-4496-abee-b4225b87507e",
	"187847e1-283a-47dc-9866-499942f41c60",
	'Operand_Value_ID',
	'',
	'Operand_',
	'Value_ID',
	1,
	"ba5eda7a-def5-0000-0000-000000000007",
	'',
	'');
INSERT INTO O_NBATTR
	VALUES ("1b51e9af-159e-4538-9604-28648432ca34",
	"cd5fcead-5c27-4496-abee-b4225b87507e");
INSERT INTO O_BATTR
	VALUES ("1b51e9af-159e-4538-9604-28648432ca34",
	"cd5fcead-5c27-4496-abee-b4225b87507e");
INSERT INTO O_ATTR
	VALUES ("1b51e9af-159e-4538-9604-28648432ca34",
	"cd5fcead-5c27-4496-abee-b4225b87507e",
	"818d547b-73be-4385-901b-3ccbd7f690ea",
	'Operator',
	'Full Name: Unary Mathematical Operator
The character or string representing the operation.',
	'',
	'Operator',
	0,
	"ba5eda7a-def5-0000-0000-000000000004",
	'',
	'');
INSERT INTO O_ID
	VALUES (0,
	"cd5fcead-5c27-4496-abee-b4225b87507e");
INSERT INTO O_OIDA
	VALUES ("187847e1-283a-47dc-9866-499942f41c60",
	"cd5fcead-5c27-4496-abee-b4225b87507e",
	0,
	'Value_ID');
INSERT INTO O_ID
	VALUES (1,
	"cd5fcead-5c27-4496-abee-b4225b87507e");
INSERT INTO O_ID
	VALUES (2,
	"cd5fcead-5c27-4496-abee-b4225b87507e");
INSERT INTO PE_PE
	VALUES ("cd5fcead-5c27-4496-abee-b4225b87507e",
	1,
	"8b9e8a8c-7fd0-4ca9-b025-f7949d99c0c5",
	"00000000-0000-0000-0000-000000000000",
	4);
INSERT INTO EP_PKG_PROXY
	VALUES ("8b9e8a8c-7fd0-4ca9-b025-f7949d99c0c5",
	"00000000-0000-0000-0000-000000000000",
	"2f3ea6a7-20e9-405c-b68c-7fba041e7daf",
	'Value',
	'This subsystem formalizes the concepts of values (r-values) and variables 
(l-values). It also captures the concept of an actual parameter.
Notify_Changes:false
Persistent:false
// This is used by schema_gen to ignore this subsystem (for publication)
TRANSLATE_FOR_EXTERNAL_USE:FALSE
',
	800,
	'../Value.xtuml');
