-- BP 7.1.6 content: ModelClass syschar: 3 persistence-version: 7.1.6

INSERT INTO O_OBJ
	VALUES ("70a3e88d-3ee9-4e76-93d3-c4f447e317f4",
	'Block',
	600,
	'ACT_BLK',
	'This class represents a block of action language within an action. Each block contains a number of statements.

',
	"00000000-0000-0000-0000-000000000000");
INSERT INTO O_TFR
	VALUES ("c9d3bcee-d3ce-4066-841c-a9a6bf809aef",
	"70a3e88d-3ee9-4e76-93d3-c4f447e317f4",
	'clearCurrentScope',
	'This operation finds the instance of Block that is the current scope 
for the Body instance, and unrelates it.  It then clears all blocks for the
Body instance.
This operation is used for resetting the block data after the parser has an
unrecoverable token error.
---------------------------------------------------------------------
Bridge:ALS',
	"ba5eda7a-def5-0000-0000-000000000000",
	0,
	'select any act from instances of ACT_ACT where ( selected.Action_ID == param.currentContext);
if(not_empty act)
  select one blk related by act->ACT_BLK[R699];
  if ( not_empty blk )
    unrelate blk from act across R699;
  end if;
  act.clear_blocks();
end if;',
	1,
	'',
	"00000000-0000-0000-0000-000000000000");
INSERT INTO O_TPARM
	VALUES ("f6273659-e958-4a0a-bc8e-7abd8f758dab",
	"c9d3bcee-d3ce-4066-841c-a9a6bf809aef",
	'currentContext',
	"ba5eda7a-def5-0000-0000-000000000005",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO O_TFR
	VALUES ("6fe0833e-3353-4229-b6ff-de63d1169ddd",
	"70a3e88d-3ee9-4e76-93d3-c4f447e317f4",
	'dispose',
	'This operation disconnects an instance, and all instances it is 
responsible for, from the model.
',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'select many statement_set related by self->ACT_SMT[R602];
for each statement in statement_set
  unrelate self from statement across R602;
  statement.dispose();
end for;

select one act related by self->ACT_ACT[R699];
if ( not_empty act )
  unrelate self from act across R699;
end if;

select one act related by self->ACT_ACT[R601];
if ( not_empty act )
  unrelate self from act across R601;
end if;
                                                                      
select one act related by self->ACT_ACT[R650];
if ( not_empty act )
  unrelate self from act across R650;
end if;

select one act related by self->ACT_ACT[R612];
if ( not_empty act )
  unrelate self from act across R612;
end if;
                                                                      
// clean up any variables that may be left around
select many var_set related by self->V_VAR[R823];
for each var in var_set;
  unrelate self from var across R823;
  var.dispose();
end for;

// clean up any values that may be left around
select many val_set related by self->V_VAL[R826];
for each val in val_set;
  unrelate self from val across R826;
  val.dispose();
end for;
                                                                      
// clean up any leftover references
select one for_var related by self->ACT_FOR[R605];
if ( not_empty for_var )
unrelate self from for_var across R605;
end if;
select one else_var related by self->ACT_E[R606];
if ( not_empty else_var )
  unrelate self from else_var across R606;
end if;
select one if_var related by self->ACT_IF[R607];
if ( not_empty if_var )
  unrelate self from if_var across R607;
end if;
select one whl_var related by self->ACT_WHL[R608];
if ( not_empty whl_var )
  unrelate self from whl_var across R608;
end if;
select one elif_var related by self->ACT_EL[R658];
if ( not_empty elif_var )
  unrelate self from elif_var across R658;
end if;

// Instance subsystem
select many bisfs related by self->I_BSF[R2923];
for each bisf in bisfs
  bisf.dispose();
end for;

delete object instance self;

',
	1,
	'',
	"c9d3bcee-d3ce-4066-841c-a9a6bf809aef");
INSERT INTO O_TFR
	VALUES ("6a44f0db-bc35-4a3e-b83e-9281c6df50a6",
	"70a3e88d-3ee9-4e76-93d3-c4f447e317f4",
	'newLocalReference',
	'',
	"ba5eda7a-def5-0000-0000-000000000005",
	1,
	'create object instance local_ref of L_LCR;
create object instance local of L_LCL;
relate local to local_ref across R3001;
// put the Local in the scope of the enclosing block
select any frame from instances of I_STF where
                              (selected.Stack_Frame_ID == param.stack_frame_id);
if (empty frame)
select one body related by self ->ACT_ACT[R601];
	//Invalid stack frame ID!
	pathMsg = "<No Path Available - Empty instance>";
    if (not_empty body)
      pathMsg = body.getPath();
    end if;
	USER::logError(msg:"Error in Block.newLocalReference: Invalid stack frame id used. Using top stack frame.",path:pathMsg);
	select any stack related by self->I_STF[R2923]->I_STACK[R2929];
	select one frame related by stack->I_STF[R2929];
end if;

select any blk_in_stack related by frame->I_BSF[R2923] where
                                           (selected.Block_ID == self.Block_ID);
relate local to blk_in_stack across R3000;
return local_ref.Local_ID;',
	1,
	'',
	"1e394c00-ae45-414e-9f41-a583c4850bbe");
INSERT INTO O_TPARM
	VALUES ("77cbd64a-5eeb-4173-ac3a-50addfdf35ab",
	"6a44f0db-bc35-4a3e-b83e-9281c6df50a6",
	'stack_frame_id',
	"ba5eda7a-def5-0000-0000-000000000005",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO O_TFR
	VALUES ("97d68498-4659-4aab-afb5-13f1946e5186",
	"70a3e88d-3ee9-4e76-93d3-c4f447e317f4",
	'newLocalValue',
	'',
	"ba5eda7a-def5-0000-0000-000000000005",
	1,
	'create object instance local_val of L_LVL;
create object instance local of L_LCL;
relate local to local_val across R3001;
// put the Local in the scope of the enclosing block
select any frame from instances of I_STF where (selected.Stack_Frame_ID == param.stack_frame_id);
if (empty frame)
    select one body related by self ->ACT_ACT[R601];
	//Invalid stack frame ID!
	pathMsg = "<No Path Available - Empty instance>";
    if (not_empty body)
      pathMsg = body.getPath();
    end if;
	USER::logError(msg:"Error in Block.newLocalValue: Invalid stack frame id used. Using top stack frame.",path:pathMsg);
	select any stack related by self->I_STF[R2923]->I_STACK[R2929];
	select one frame related by stack->I_STF[R2929];
end if;
select any blk_in_stack related by frame->I_BSF[R2923] where
                                           (selected.Block_ID == self.Block_ID);
relate local to blk_in_stack across R3000;
return local_val.Local_ID;',
	1,
	'',
	"aef6ac8f-0ed5-4854-a1ba-626fc6ef23b9");
INSERT INTO O_TPARM
	VALUES ("de5775a8-33c5-4765-9673-eeda5c1027f2",
	"97d68498-4659-4aab-afb5-13f1946e5186",
	'stack_frame_id',
	"ba5eda7a-def5-0000-0000-000000000005",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO O_TFR
	VALUES ("aef6ac8f-0ed5-4854-a1ba-626fc6ef23b9",
	"70a3e88d-3ee9-4e76-93d3-c4f447e317f4",
	'newLocalSelectedReference',
	'',
	"ba5eda7a-def5-0000-0000-000000000005",
	1,
	'create object instance local_selected_ref of L_LSR;
create object instance local of L_LCL;
relate local to local_selected_ref across R3001;
// put the Local in the scope of the enclosing block
select any frame from instances of I_STF where (selected.Stack_Frame_ID == param.stack_frame_id);
if (empty frame)
    select one body related by self ->ACT_ACT[R601];
	//Invalid stack frame ID!
	pathMsg = "<No Path Available - Empty instance>";
    if (not_empty body)
      pathMsg = body.getPath();
    end if;
	USER::logError(msg:"Error in Block.newLocalSelectedReference: Invalid stack frame id used. Using top stack frame.",path:pathMsg);
	select any stack related by self->I_STF[R2923]->I_STACK[R2929];
	select one frame related by stack->I_STF[R2929];
end if;
select any blk_in_stack related by frame->I_BSF[R2923] where
                                           (selected.Block_ID == self.Block_ID);
relate local to blk_in_stack across R3000;
return local_selected_ref.Local_ID;
',
	1,
	'',
	"6a44f0db-bc35-4a3e-b83e-9281c6df50a6");
INSERT INTO O_TPARM
	VALUES ("45ac4a4b-9d8e-41c5-b148-595601c7a6bd",
	"aef6ac8f-0ed5-4854-a1ba-626fc6ef23b9",
	'stack_frame_id',
	"ba5eda7a-def5-0000-0000-000000000005",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO O_TFR
	VALUES ("1e394c00-ae45-414e-9f41-a583c4850bbe",
	"70a3e88d-3ee9-4e76-93d3-c4f447e317f4",
	'isOuter',
	'',
	"ba5eda7a-def5-0000-0000-000000000001",
	1,
	'// Block.isOuter
select one body related by self->ACT_ACT[R666];
return not_empty body;',
	1,
	'',
	"63a890bd-513e-41da-8bb7-4bf1dc18d370");
INSERT INTO O_TFR
	VALUES ("63a890bd-513e-41da-8bb7-4bf1dc18d370",
	"70a3e88d-3ee9-4e76-93d3-c4f447e317f4",
	'initialize',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'// Block.initialize()
select many statements related by self->ACT_SMT[R602];
select any prevStmt from instances of ACT_SMT where (selected.Statement_ID == GD::NULL_UNIQUE_ID());
for each statement in statements
  select one elseStmt related by statement->ACT_E[R603];
  select one elifStmt related by statement->ACT_EL[R603];
  if (empty elseStmt and empty elifStmt)
    if (not_empty prevStmt)
      relate prevStmt to statement across R661.''succeeds'';
    end if;
    prevStmt = statement;
  end if;
end for;',
	1,
	'',
	"6fe0833e-3353-4229-b6ff-de63d1169ddd");
INSERT INTO O_TFR
	VALUES ("ff294ecf-512c-4c5f-abaa-04d715b0fa29",
	"70a3e88d-3ee9-4e76-93d3-c4f447e317f4",
	'popUpBlock',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'// Block.popUpBlock
select any currentBisf related by self->I_BSF[R2923] where
       selected.isExecuting and selected.Stack_Frame_ID == param.stack_frame_id;
select one containingWhile related by self->ACT_WHL[R608];
select one containingIf related by self->ACT_IF[R607];
select one containingElse related by self->ACT_E[R606];
select one containingElif related by self->ACT_EL[R658];
select one containingFor related by self->ACT_FOR[R605];
if (not_empty containingWhile or not_empty containingIf or
  not_empty containingElse or not_empty containingElif or
  not_empty containingFor)
  select any containingStmt related by self->ACT_SMT[R602];
  if (not_empty containingWhile)
    select one containingStmt related by containingWhile->ACT_SMT[R603];
  elif (not_empty containingIf)
    select one containingStmt related by containingIf->ACT_SMT[R603];
  elif (not_empty containingElse)
    select one containingStmt related by containingElse->
                                                    ACT_IF[R683]->ACT_SMT[R603];
  elif (not_empty containingElif)
    select one containingStmt related by containingElif->
                                                    ACT_IF[R682]->ACT_SMT[R603];
  elif (not_empty containingFor)
    select one containingStmt related by containingFor->ACT_SMT[R603];
  end if;
  if (not_empty containingStmt)
    currentBisf.dispose();
    select any containerBisf related by containingStmt->I_BSF[R2941] where
                                selected.Stack_Frame_ID == param.stack_frame_id;
    containerBisf.isExecuting = true;
    if (not_empty containingIf or not_empty containingElif or
                                                       not_empty containingElse)
      // Move on to next statement
      containingStmt.setupNextStatement(stack_frame_id:param.stack_frame_id);
    end if;
  else
    select one body related by self ->ACT_ACT[R601]; 
    pathMsg = "<No Path Available - Empty instance>";
    if (not_empty body)
      pathMsg = body.getPath();
    end if;
	USER::logError(msg:"Statement.execute Internal error: containing statement not found.",path:pathMsg);
  end if;
else
  // There is no containing statement, we are the outer block, pop the stack
  if (self.isOuter())
    select any stack_frame related by self->I_STF[R2923] where
                                selected.Stack_Frame_ID == param.stack_frame_id;
    select one stack related by stack_frame->I_STACK[R2943];
    select one invokingFrame related by stack_frame->I_STF[R2965.''blocks''];
    if not_empty invokingFrame
      stack.pop(disposeFrame:false);
      unrelate stack_frame from stack across R2943;
      select one tsf related by stack->I_STF[R2929];
      if tsf == stack_frame
        unrelate stack_frame from stack across R2929;
      end if;
      select one invokingStack related by invokingFrame->I_STACK[R2943];
      stack_frame.readyForInterrupt = false;
      invokingStack.enqueue(stack_frame_id:stack_frame.Stack_Frame_ID,
                       remote_stack_frame_id:invokingFrame.Stack_Frame_ID,
                                                              isActivity:false);
      stack_frame.readyForInterrupt = true;
      select one waitingEngine related by invokingFrame->
                                                   I_STACK[R2943]->I_EXE[R2930];
      waitingEngine.notify();
    else
      stack.pop(disposeFrame:true);
    end if;
    select one stack_frame related by stack->I_STF[R2929];
    select any top_blk_in_stack_frame related by stack_frame->I_BSF[R2923] where
                                                           selected.isExecuting;
    select one invokedFrame related by  stack_frame->I_STF[R2965.''blocked by''];
    select one body related by self->ACT_ACT[R601];
    select one tranActionBody related by body->ACT_TAB[R698];
    // step past the calling statement . . . 
    select one statement related by top_blk_in_stack_frame->ACT_SMT[R2941];
    select any intermediate_value related by stack_frame->I_VSF[R2951];
    if (empty intermediate_value and
                                   empty tranActionBody and empty invokedFrame)
      // in the case of transaction bodies, there is another stack frame below
      // the one that is being popped, but there is no calling statement, so
      // we do not want to move on to the next statement . . .
      if not_empty statement
        statement.setupNextStatement(stack_frame_id:
                                         top_blk_in_stack_frame.Stack_Frame_ID);
      else
        // The block is empty, must be a realized component.
        // We do nothing, since disposal of the stack frame
        // is managed in the realized code interface.
      end if;
    end if;
  if(not_empty body)
    self.exitAsynchronousActivity(stack_ID:stack.Stack_ID,body_ID:body.Action_ID);
  end if;

  else
    select one body related by self ->ACT_ACT[R601];
    pathMsg = "<No Path Available - Empty instance>";
    if (not_empty body)
      pathMsg = body.getPath();
    end if;
	USER::logError(msg:"Statement.execute Internal error: non outer block has no containing statement.",path:pathMsg);
  end if;
end if;',
	1,
	'',
	"97d68498-4659-4aab-afb5-13f1946e5186");
INSERT INTO O_TPARM
	VALUES ("50bc58a3-453d-498e-bd19-3e86d49d9d1f",
	"ff294ecf-512c-4c5f-abaa-04d715b0fa29",
	'stack_frame_id',
	"ba5eda7a-def5-0000-0000-000000000005",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO O_TFR
	VALUES ("bf005e9a-dda4-4d81-bfa6-f655be16458a",
	"70a3e88d-3ee9-4e76-93d3-c4f447e317f4",
	'exitAsynchronousActivity',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	' 
//select  any stateActionBody from instances of ACT_SAB where 
 //                               (selected.Action_ID==param.stateActionBody_ID);
//select any tranActionBody from instances of ACT_TAB where
    //                            (selected.Action_ID==param.tranActionBody_ID);
select  any body from instances of ACT_ACT where 
                                    (selected.Action_ID==param.body_ID);    
select one stateActionBody related by body->ACT_SAB[R698];    
select one tranActionBody related by body->ACT_TAB[R698];    
select any stack from instances of I_STACK where 
                                (selected.Stack_ID==param.stack_ID);
select any executingEvt related by stack->I_EXE[R2930]->I_EQE[R2944]->
                                        I_EVI[R2944] where selected.isExecuting;
if (empty executingEvt)
  select any executingEvt related by stack->I_EXE[R2930]->I_SQE[R2946]->
                                        I_EVI[R2946] where selected.isExecuting;
end if;
if not_empty stateActionBody
  // Dispose event that was being executed (and instance too if required)
  if (not_empty executingEvt)
  // If this is a final state, dispose the instance
     select one state related by stateActionBody->SM_ACT[R691]->
                                    SM_AH[R514]->SM_MOAH[R513]->SM_STATE[R511];
     if (state.Final == 1)
       select one tgtInst related by executingEvt->I_INS[R2907];
       if (not_empty tgtInst)
         USER::logInfo(msg:tgtInst.Label + " disposed.");
         tgtInst.dispose();
       end if;
     end if;
     executingEvt.dispose();
  end if;
elif not_empty tranActionBody
  select one tgtState related by tranActionBody->SM_ACT[R688]->
                        SM_AH[R514]->SM_TAH[R513]->SM_TXN[R530]->SM_STATE[R506];
  select one action related by tgtState->SM_MOAH[R511]->SM_AH[R513]->
                                     SM_ACT[R514]->ACT_SAB[R691]->ACT_ACT[R698];
  select many statements related by action->ACT_BLK[R601]->ACT_SMT[R602];
  if (empty action or empty statements)
    if (tgtState.Final == 1)
      select one tgtInst related by executingEvt->I_INS[R2907];
      if (not_empty tgtInst)
        USER::logInfo(msg:tgtInst.Label + " disposed.");
        tgtInst.dispose();
      end if;
    end if;
    if not_empty executingEvt
      executingEvt.dispose();
    end if;
  else
    // Do nothing, event will be disposed when target state action completes
  end if;
end if;

    ',
	1,
	'',
	"ff294ecf-512c-4c5f-abaa-04d715b0fa29");
INSERT INTO O_TPARM
	VALUES ("aaf9530e-4779-426f-b4ad-b041ae760fcd",
	"bf005e9a-dda4-4d81-bfa6-f655be16458a",
	'stack_ID',
	"ba5eda7a-def5-0000-0000-000000000005",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO O_TPARM
	VALUES ("310d7ac5-020e-43c2-829d-b41841aa49fb",
	"bf005e9a-dda4-4d81-bfa6-f655be16458a",
	'body_ID',
	"ba5eda7a-def5-0000-0000-000000000005",
	0,
	'',
	"aaf9530e-4779-426f-b4ad-b041ae760fcd",
	'');
INSERT INTO O_NBATTR
	VALUES ("d99d21d2-81d8-403b-9806-b4620234cdcc",
	"70a3e88d-3ee9-4e76-93d3-c4f447e317f4");
INSERT INTO O_BATTR
	VALUES ("d99d21d2-81d8-403b-9806-b4620234cdcc",
	"70a3e88d-3ee9-4e76-93d3-c4f447e317f4");
INSERT INTO O_ATTR
	VALUES ("d99d21d2-81d8-403b-9806-b4620234cdcc",
	"70a3e88d-3ee9-4e76-93d3-c4f447e317f4",
	"00000000-0000-0000-0000-000000000000",
	'Block_ID',
	'',
	'',
	'Block_ID',
	0,
	"ba5eda7a-def5-0000-0000-000000000005",
	'',
	'');
INSERT INTO O_REF
	VALUES ("70a3e88d-3ee9-4e76-93d3-c4f447e317f4",
	"395b247c-4d3a-4e4a-a7e4-6645a3a33371",
	0,
	"753cfb59-20b8-4f4f-a6a9-a7836988b5d4",
	"26943b54-d31e-4733-aff7-6a0876a457f9",
	"657b7bf6-31d1-4cf4-9bc8-c55eaade382c",
	"632b6113-637f-496f-976b-0d6ea947ce07",
	"c37ce6a5-1442-4651-8079-3edefebf5af7",
	"8a77517a-ec5a-4f5f-bfb4-93a9d07f92e6",
	"00000000-0000-0000-0000-000000000000",
	0,
	'',
	'Body',
	'Action_ID',
	'R601.''is committed from''');
INSERT INTO R_RGO_PROXY
	VALUES ("70a3e88d-3ee9-4e76-93d3-c4f447e317f4",
	"26943b54-d31e-4733-aff7-6a0876a457f9",
	"657b7bf6-31d1-4cf4-9bc8-c55eaade382c",
	'../Body.xtuml');
INSERT INTO O_RTIDA_PROXY
	VALUES ("753cfb59-20b8-4f4f-a6a9-a7836988b5d4",
	"395b247c-4d3a-4e4a-a7e4-6645a3a33371",
	0,
	"26943b54-d31e-4733-aff7-6a0876a457f9",
	"632b6113-637f-496f-976b-0d6ea947ce07",
	'../Body.xtuml');
INSERT INTO O_RATTR
	VALUES ("c37ce6a5-1442-4651-8079-3edefebf5af7",
	"70a3e88d-3ee9-4e76-93d3-c4f447e317f4",
	"753cfb59-20b8-4f4f-a6a9-a7836988b5d4",
	"395b247c-4d3a-4e4a-a7e4-6645a3a33371",
	1,
	'Action_ID');
INSERT INTO O_BATTR_PROXY
	VALUES ("753cfb59-20b8-4f4f-a6a9-a7836988b5d4",
	"395b247c-4d3a-4e4a-a7e4-6645a3a33371",
	'../Body/Body.xtuml');
INSERT INTO O_ATTR
	VALUES ("c37ce6a5-1442-4651-8079-3edefebf5af7",
	"70a3e88d-3ee9-4e76-93d3-c4f447e317f4",
	"215ff655-b2e1-4dcb-b7bd-0aa795edc397",
	'Action_ID',
	'',
	'',
	'Action_ID',
	0,
	"ba5eda7a-def5-0000-0000-000000000007",
	'',
	'');
INSERT INTO O_NBATTR
	VALUES ("aa6709f8-cd6f-41e8-beb8-c52c5e6205c3",
	"70a3e88d-3ee9-4e76-93d3-c4f447e317f4");
INSERT INTO O_BATTR
	VALUES ("aa6709f8-cd6f-41e8-beb8-c52c5e6205c3",
	"70a3e88d-3ee9-4e76-93d3-c4f447e317f4");
INSERT INTO O_ATTR
	VALUES ("aa6709f8-cd6f-41e8-beb8-c52c5e6205c3",
	"70a3e88d-3ee9-4e76-93d3-c4f447e317f4",
	"d99d21d2-81d8-403b-9806-b4620234cdcc",
	'WhereSpecOK',
	'This attribute is used during parsing to flag if the where specification that was last parsed had any errors or not.
---------------------------------------------------------------------
Bridge:ALS',
	'',
	'WhereSpecOK',
	0,
	"ba5eda7a-def5-0000-0000-000000000001",
	'',
	'');
INSERT INTO O_NBATTR
	VALUES ("58c759d6-8a99-4ab0-be69-8071af9b3b72",
	"70a3e88d-3ee9-4e76-93d3-c4f447e317f4");
INSERT INTO O_BATTR
	VALUES ("58c759d6-8a99-4ab0-be69-8071af9b3b72",
	"70a3e88d-3ee9-4e76-93d3-c4f447e317f4");
INSERT INTO O_ATTR
	VALUES ("58c759d6-8a99-4ab0-be69-8071af9b3b72",
	"70a3e88d-3ee9-4e76-93d3-c4f447e317f4",
	"aa6709f8-cd6f-41e8-beb8-c52c5e6205c3",
	'InWhereSpec',
	'This attribute is used during parsing to flag if the parser is currently parsing a where specification.
---------------------------------------------------------------------
Bridge:ALS',
	'',
	'InWhereSpec',
	0,
	"ba5eda7a-def5-0000-0000-000000000001",
	'',
	'');
INSERT INTO O_NBATTR
	VALUES ("5f141b48-1491-4ad4-9440-b7b63c448a82",
	"70a3e88d-3ee9-4e76-93d3-c4f447e317f4");
INSERT INTO O_BATTR
	VALUES ("5f141b48-1491-4ad4-9440-b7b63c448a82",
	"70a3e88d-3ee9-4e76-93d3-c4f447e317f4");
INSERT INTO O_ATTR
	VALUES ("5f141b48-1491-4ad4-9440-b7b63c448a82",
	"70a3e88d-3ee9-4e76-93d3-c4f447e317f4",
	"58c759d6-8a99-4ab0-be69-8071af9b3b72",
	'SelectedFound',
	'This attribute is used during parsing to flag if the parser found the keyword ''selected'' in a where specification.
---------------------------------------------------------------------
Bridge:ALS',
	'',
	'SelectedFound',
	0,
	"ba5eda7a-def5-0000-0000-000000000001",
	'',
	'');
INSERT INTO O_NBATTR
	VALUES ("1895beba-a92c-40c7-bdcd-463bb4478cdc",
	"70a3e88d-3ee9-4e76-93d3-c4f447e317f4");
INSERT INTO O_BATTR
	VALUES ("1895beba-a92c-40c7-bdcd-463bb4478cdc",
	"70a3e88d-3ee9-4e76-93d3-c4f447e317f4");
INSERT INTO O_ATTR
	VALUES ("1895beba-a92c-40c7-bdcd-463bb4478cdc",
	"70a3e88d-3ee9-4e76-93d3-c4f447e317f4",
	"5f141b48-1491-4ad4-9440-b7b63c448a82",
	'TempBuffer',
	'This attribute is used by the parser to save textual infomation 
for later use by the parser.  The current uses of this attribute are
by the functions:  obj_or_ee_keyletters_validate, and phrase_validate.
---------------------------------------------------------------------
Bridge:ALS

',
	'',
	'TempBuffer',
	0,
	"ba5eda7a-def5-0000-0000-000000000004",
	'',
	'');
INSERT INTO O_NBATTR
	VALUES ("a060c1e4-3ef4-4563-98f1-2cc6e42061b8",
	"70a3e88d-3ee9-4e76-93d3-c4f447e317f4");
INSERT INTO O_BATTR
	VALUES ("a060c1e4-3ef4-4563-98f1-2cc6e42061b8",
	"70a3e88d-3ee9-4e76-93d3-c4f447e317f4");
INSERT INTO O_ATTR
	VALUES ("a060c1e4-3ef4-4563-98f1-2cc6e42061b8",
	"70a3e88d-3ee9-4e76-93d3-c4f447e317f4",
	"1895beba-a92c-40c7-bdcd-463bb4478cdc",
	'SupData1',
	'This attribute is used by the parser to save textual infomation 
for later use by the parser.  It is used cache the name of the first parameter in an event parameter list.
---------------------------------------------------------------------
Bridge:ALS


',
	'',
	'SupData1',
	0,
	"ba5eda7a-def5-0000-0000-000000000004",
	'',
	'');
INSERT INTO O_NBATTR
	VALUES ("034c7efc-b63a-4fd1-bb30-3f475307fccb",
	"70a3e88d-3ee9-4e76-93d3-c4f447e317f4");
INSERT INTO O_BATTR
	VALUES ("034c7efc-b63a-4fd1-bb30-3f475307fccb",
	"70a3e88d-3ee9-4e76-93d3-c4f447e317f4");
INSERT INTO O_ATTR
	VALUES ("034c7efc-b63a-4fd1-bb30-3f475307fccb",
	"70a3e88d-3ee9-4e76-93d3-c4f447e317f4",
	"a060c1e4-3ef4-4563-98f1-2cc6e42061b8",
	'SupData2',
	'This attribute is used by the parser to save textual infomation 
for later use by the parser.  It is used cache the name of the second and subsequent parameters in an event parameter list.
---------------------------------------------------------------------
Bridge:ALS
',
	'',
	'SupData2',
	0,
	"ba5eda7a-def5-0000-0000-000000000004",
	'',
	'');
INSERT INTO O_NBATTR
	VALUES ("d70bfbc8-8a17-4f88-918e-949122710511",
	"70a3e88d-3ee9-4e76-93d3-c4f447e317f4");
INSERT INTO O_BATTR
	VALUES ("d70bfbc8-8a17-4f88-918e-949122710511",
	"70a3e88d-3ee9-4e76-93d3-c4f447e317f4");
INSERT INTO O_ATTR
	VALUES ("d70bfbc8-8a17-4f88-918e-949122710511",
	"70a3e88d-3ee9-4e76-93d3-c4f447e317f4",
	"034c7efc-b63a-4fd1-bb30-3f475307fccb",
	'CurrentLine',
	'This is a temporary value used to save the line number of the statement
currently being parsed.',
	'',
	'CurrentLine',
	0,
	"ba5eda7a-def5-0000-0000-000000000002",
	'',
	'');
INSERT INTO O_NBATTR
	VALUES ("b695a96f-269d-480e-a3cb-80e17690eb97",
	"70a3e88d-3ee9-4e76-93d3-c4f447e317f4");
INSERT INTO O_BATTR
	VALUES ("b695a96f-269d-480e-a3cb-80e17690eb97",
	"70a3e88d-3ee9-4e76-93d3-c4f447e317f4");
INSERT INTO O_ATTR
	VALUES ("b695a96f-269d-480e-a3cb-80e17690eb97",
	"70a3e88d-3ee9-4e76-93d3-c4f447e317f4",
	"d70bfbc8-8a17-4f88-918e-949122710511",
	'CurrentCol',
	'This is a temporary value used to save the starting column of the statement
currently being parsed.',
	'',
	'CurrentCol',
	0,
	"ba5eda7a-def5-0000-0000-000000000002",
	'',
	'');
INSERT INTO O_NBATTR
	VALUES ("e85e358d-fdff-4821-b419-c8423894a4a9",
	"70a3e88d-3ee9-4e76-93d3-c4f447e317f4");
INSERT INTO O_BATTR
	VALUES ("e85e358d-fdff-4821-b419-c8423894a4a9",
	"70a3e88d-3ee9-4e76-93d3-c4f447e317f4");
INSERT INTO O_ATTR
	VALUES ("e85e358d-fdff-4821-b419-c8423894a4a9",
	"70a3e88d-3ee9-4e76-93d3-c4f447e317f4",
	"b695a96f-269d-480e-a3cb-80e17690eb97",
	'currentKeyLettersLineNumber',
	'Holds the line number (within the activity text as a whole) of the last 
key-letters token parsed in this block.
',
	'',
	'currentKeyLettersLineNumber',
	0,
	"ba5eda7a-def5-0000-0000-000000000002",
	'',
	'');
INSERT INTO O_NBATTR
	VALUES ("654ac13b-91f2-47a2-bb6e-727a70d7e66f",
	"70a3e88d-3ee9-4e76-93d3-c4f447e317f4");
INSERT INTO O_BATTR
	VALUES ("654ac13b-91f2-47a2-bb6e-727a70d7e66f",
	"70a3e88d-3ee9-4e76-93d3-c4f447e317f4");
INSERT INTO O_ATTR
	VALUES ("654ac13b-91f2-47a2-bb6e-727a70d7e66f",
	"70a3e88d-3ee9-4e76-93d3-c4f447e317f4",
	"e85e358d-fdff-4821-b419-c8423894a4a9",
	'currentKeyLettersColumn',
	'Holds the column (within the activity text as a whole) of the last 
key-letters token parsed in this block.
',
	'',
	'currentKeyLettersColumn',
	0,
	"ba5eda7a-def5-0000-0000-000000000002",
	'',
	'');
INSERT INTO O_NBATTR
	VALUES ("8b37b2b6-bf8a-43cd-a404-9dab385146f9",
	"70a3e88d-3ee9-4e76-93d3-c4f447e317f4");
INSERT INTO O_BATTR
	VALUES ("8b37b2b6-bf8a-43cd-a404-9dab385146f9",
	"70a3e88d-3ee9-4e76-93d3-c4f447e317f4");
INSERT INTO O_ATTR
	VALUES ("8b37b2b6-bf8a-43cd-a404-9dab385146f9",
	"70a3e88d-3ee9-4e76-93d3-c4f447e317f4",
	"654ac13b-91f2-47a2-bb6e-727a70d7e66f",
	'currentParameterAssignmentNameLineNumber',
	'',
	'',
	'currentParameterAssignmentNameLineNumber',
	0,
	"ba5eda7a-def5-0000-0000-000000000002",
	'',
	'');
INSERT INTO O_NBATTR
	VALUES ("1895a4ce-6e71-46a8-93d4-aca7cf2bcb1c",
	"70a3e88d-3ee9-4e76-93d3-c4f447e317f4");
INSERT INTO O_BATTR
	VALUES ("1895a4ce-6e71-46a8-93d4-aca7cf2bcb1c",
	"70a3e88d-3ee9-4e76-93d3-c4f447e317f4");
INSERT INTO O_ATTR
	VALUES ("1895a4ce-6e71-46a8-93d4-aca7cf2bcb1c",
	"70a3e88d-3ee9-4e76-93d3-c4f447e317f4",
	"8b37b2b6-bf8a-43cd-a404-9dab385146f9",
	'currentParameterAssignmentNameColumn',
	'',
	'',
	'currentParameterAssignmentNameColumn',
	0,
	"ba5eda7a-def5-0000-0000-000000000002",
	'',
	'');
INSERT INTO O_NBATTR
	VALUES ("2f339e7b-d2e1-4cb7-a825-2ac3055e49ae",
	"70a3e88d-3ee9-4e76-93d3-c4f447e317f4");
INSERT INTO O_BATTR
	VALUES ("2f339e7b-d2e1-4cb7-a825-2ac3055e49ae",
	"70a3e88d-3ee9-4e76-93d3-c4f447e317f4");
INSERT INTO O_ATTR
	VALUES ("2f339e7b-d2e1-4cb7-a825-2ac3055e49ae",
	"70a3e88d-3ee9-4e76-93d3-c4f447e317f4",
	"1895a4ce-6e71-46a8-93d4-aca7cf2bcb1c",
	'currentAssociationNumberLineNumber',
	'',
	'',
	'currentAssociationNumberLineNumber',
	0,
	"ba5eda7a-def5-0000-0000-000000000002",
	'',
	'');
INSERT INTO O_NBATTR
	VALUES ("2c839324-6fce-4bd6-b93a-b7add2b10953",
	"70a3e88d-3ee9-4e76-93d3-c4f447e317f4");
INSERT INTO O_BATTR
	VALUES ("2c839324-6fce-4bd6-b93a-b7add2b10953",
	"70a3e88d-3ee9-4e76-93d3-c4f447e317f4");
INSERT INTO O_ATTR
	VALUES ("2c839324-6fce-4bd6-b93a-b7add2b10953",
	"70a3e88d-3ee9-4e76-93d3-c4f447e317f4",
	"2f339e7b-d2e1-4cb7-a825-2ac3055e49ae",
	'currentAssociationNumberColumn',
	'',
	'',
	'currentAssociationNumberColumn',
	0,
	"ba5eda7a-def5-0000-0000-000000000002",
	'',
	'');
INSERT INTO O_NBATTR
	VALUES ("966bf1c3-6cb6-42db-9d7a-bf5168e56160",
	"70a3e88d-3ee9-4e76-93d3-c4f447e317f4");
INSERT INTO O_BATTR
	VALUES ("966bf1c3-6cb6-42db-9d7a-bf5168e56160",
	"70a3e88d-3ee9-4e76-93d3-c4f447e317f4");
INSERT INTO O_ATTR
	VALUES ("966bf1c3-6cb6-42db-9d7a-bf5168e56160",
	"70a3e88d-3ee9-4e76-93d3-c4f447e317f4",
	"2c839324-6fce-4bd6-b93a-b7add2b10953",
	'currentAssociationPhraseLineNumber',
	'',
	'',
	'currentAssociationPhraseLineNumber',
	0,
	"ba5eda7a-def5-0000-0000-000000000002",
	'',
	'');
INSERT INTO O_NBATTR
	VALUES ("1b83c2c7-7032-4762-8799-3280c873f8c1",
	"70a3e88d-3ee9-4e76-93d3-c4f447e317f4");
INSERT INTO O_BATTR
	VALUES ("1b83c2c7-7032-4762-8799-3280c873f8c1",
	"70a3e88d-3ee9-4e76-93d3-c4f447e317f4");
INSERT INTO O_ATTR
	VALUES ("1b83c2c7-7032-4762-8799-3280c873f8c1",
	"70a3e88d-3ee9-4e76-93d3-c4f447e317f4",
	"966bf1c3-6cb6-42db-9d7a-bf5168e56160",
	'currentAssociationPhraseColumn',
	'',
	'',
	'currentAssociationPhraseColumn',
	0,
	"ba5eda7a-def5-0000-0000-000000000002",
	'',
	'');
INSERT INTO O_NBATTR
	VALUES ("9fec5b57-a607-4cdb-a829-f6535075d5cf",
	"70a3e88d-3ee9-4e76-93d3-c4f447e317f4");
INSERT INTO O_BATTR
	VALUES ("9fec5b57-a607-4cdb-a829-f6535075d5cf",
	"70a3e88d-3ee9-4e76-93d3-c4f447e317f4");
INSERT INTO O_ATTR
	VALUES ("9fec5b57-a607-4cdb-a829-f6535075d5cf",
	"70a3e88d-3ee9-4e76-93d3-c4f447e317f4",
	"1b83c2c7-7032-4762-8799-3280c873f8c1",
	'currentDataTypeNameLineNumber',
	'',
	'',
	'currentDataTypeNameLineNumber',
	0,
	"ba5eda7a-def5-0000-0000-000000000002",
	'',
	'');
INSERT INTO O_NBATTR
	VALUES ("d9d6e825-a3af-41f8-987b-44fb181ed665",
	"70a3e88d-3ee9-4e76-93d3-c4f447e317f4");
INSERT INTO O_BATTR
	VALUES ("d9d6e825-a3af-41f8-987b-44fb181ed665",
	"70a3e88d-3ee9-4e76-93d3-c4f447e317f4");
INSERT INTO O_ATTR
	VALUES ("d9d6e825-a3af-41f8-987b-44fb181ed665",
	"70a3e88d-3ee9-4e76-93d3-c4f447e317f4",
	"9fec5b57-a607-4cdb-a829-f6535075d5cf",
	'currentDataTypeNameColumn',
	'',
	'',
	'currentDataTypeNameColumn',
	0,
	"ba5eda7a-def5-0000-0000-000000000002",
	'',
	'');
INSERT INTO O_NBATTR
	VALUES ("215ff655-b2e1-4dcb-b7bd-0aa795edc397",
	"70a3e88d-3ee9-4e76-93d3-c4f447e317f4");
INSERT INTO O_BATTR
	VALUES ("215ff655-b2e1-4dcb-b7bd-0aa795edc397",
	"70a3e88d-3ee9-4e76-93d3-c4f447e317f4");
INSERT INTO O_ATTR
	VALUES ("215ff655-b2e1-4dcb-b7bd-0aa795edc397",
	"70a3e88d-3ee9-4e76-93d3-c4f447e317f4",
	"d9d6e825-a3af-41f8-987b-44fb181ed665",
	'blockInStackFrameCreated',
	'',
	'',
	'blockInStackFrameCreated',
	0,
	"ba5eda7a-def5-0000-0000-000000000001",
	'',
	'');
INSERT INTO O_REF
	VALUES ("70a3e88d-3ee9-4e76-93d3-c4f447e317f4",
	"395b247c-4d3a-4e4a-a7e4-6645a3a33371",
	0,
	"753cfb59-20b8-4f4f-a6a9-a7836988b5d4",
	"e44a919b-b766-4dfb-ba57-50704f18df34",
	"98780cc8-b7b3-40b3-aca0-180412211d31",
	"b35274cb-dddf-4457-b8d4-fcd5d2fd3123",
	"a112a9b2-f9ea-42da-bb65-f5c333fb940d",
	"9c66dfd6-d4e0-4a74-a758-30dfeaa4ea03",
	"00000000-0000-0000-0000-000000000000",
	0,
	'',
	'Body',
	'Action_ID',
	'R612.''is parsed from''');
INSERT INTO R_RGO_PROXY
	VALUES ("70a3e88d-3ee9-4e76-93d3-c4f447e317f4",
	"e44a919b-b766-4dfb-ba57-50704f18df34",
	"98780cc8-b7b3-40b3-aca0-180412211d31",
	'../Body.xtuml');
INSERT INTO O_RTIDA_PROXY
	VALUES ("753cfb59-20b8-4f4f-a6a9-a7836988b5d4",
	"395b247c-4d3a-4e4a-a7e4-6645a3a33371",
	0,
	"e44a919b-b766-4dfb-ba57-50704f18df34",
	"b35274cb-dddf-4457-b8d4-fcd5d2fd3123",
	'../Body.xtuml');
INSERT INTO O_RATTR
	VALUES ("a112a9b2-f9ea-42da-bb65-f5c333fb940d",
	"70a3e88d-3ee9-4e76-93d3-c4f447e317f4",
	"753cfb59-20b8-4f4f-a6a9-a7836988b5d4",
	"395b247c-4d3a-4e4a-a7e4-6645a3a33371",
	1,
	'Action_ID');
INSERT INTO O_ATTR
	VALUES ("a112a9b2-f9ea-42da-bb65-f5c333fb940d",
	"70a3e88d-3ee9-4e76-93d3-c4f447e317f4",
	"c37ce6a5-1442-4651-8079-3edefebf5af7",
	'Parsed_Action_ID',
	'',
	'Parsed_',
	'Action_ID',
	1,
	"ba5eda7a-def5-0000-0000-000000000007",
	'',
	'');
INSERT INTO O_ID
	VALUES (0,
	"70a3e88d-3ee9-4e76-93d3-c4f447e317f4");
INSERT INTO O_OIDA
	VALUES ("d99d21d2-81d8-403b-9806-b4620234cdcc",
	"70a3e88d-3ee9-4e76-93d3-c4f447e317f4",
	0,
	'Block_ID');
INSERT INTO O_ID
	VALUES (1,
	"70a3e88d-3ee9-4e76-93d3-c4f447e317f4");
INSERT INTO O_ID
	VALUES (2,
	"70a3e88d-3ee9-4e76-93d3-c4f447e317f4");
INSERT INTO PE_PE
	VALUES ("70a3e88d-3ee9-4e76-93d3-c4f447e317f4",
	1,
	"5375dd69-33aa-4887-8270-296340adc334",
	"00000000-0000-0000-0000-000000000000",
	4);
INSERT INTO EP_PKG_PROXY
	VALUES ("5375dd69-33aa-4887-8270-296340adc334",
	"00000000-0000-0000-0000-000000000000",
	"2f3ea6a7-20e9-405c-b68c-7fba041e7daf",
	'Body',
	'This subsystem abstracts the action itself, the blocks and statements
it contains together with the flow of control statements such as ''while'',
''for each'' and ''if''.
Notify_Changes:false
Persistent:false
// This is used by schema_gen to ignore this subsystem (for publication)
TRANSLATE_FOR_EXTERNAL_USE:FALSE
',
	600,
	'../Body.xtuml');
