-- BP 7.1.6 content: ModelClass syschar: 3 persistence-version: 7.1.6

INSERT INTO O_OBJ
	VALUES ("e880475e-9d23-4742-9d95-4b632666c1cf",
	'If Stmt',
	617,
	'ACT_IF',
	'The class represents an if statement in a block of action language.',
	"00000000-0000-0000-0000-000000000000");
INSERT INTO O_TFR
	VALUES ("764fdd1e-315c-43d2-8912-695e847a3171",
	"e880475e-9d23-4742-9d95-4b632666c1cf",
	'dispose',
	'This operation disconnects an instance, and all instances it is 
responsible for, from the model.',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'select one blk related by self->ACT_BLK[R607];
if ( not_empty blk )
  unrelate self from blk across R607;
  blk.dispose();
end if;
select one els related by self->ACT_E[R683];
if (not_empty els)
  unrelate self from els across R683;
end if;
select one stmt related by self->ACT_SMT[R603];
if (not_empty stmt)
  unrelate self from stmt across R603;
end if;
select many elfs related by self->ACT_EL[R682];
for each elf in elfs
  unrelate self from elf across R682;
end for;
select one val related by self->V_VAL[R625];
if ( not_empty val )
  unrelate self from val across R625;
  val.dispose();
end if;

select one exec_elif_stmt related by self->ACT_EL[R690];
if(not_empty exec_elif_stmt)
  unrelate self from exec_elif_stmt across R690; 
end if;  
      
select one exec_else_stmt related by self->ACT_E[R692];
if(not_empty exec_else_stmt)
  unrelate self from exec_else_stmt across R692; 
end if;  
   
delete object instance self;

',
	1,
	'',
	"00000000-0000-0000-0000-000000000000");
INSERT INTO O_TFR
	VALUES ("569e3992-4e74-4942-9b71-64c907d32d60",
	"e880475e-9d23-4742-9d95-4b632666c1cf",
	'execute',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'// If Stmt.execute()
 select one body related by self->ACT_SMT[R603]->ACT_BLK[R602]->ACT_ACT[R601];                             
// First check for a valid stack frame id and grab the stack frame
select any stack_frame from instances of I_STF where 
                              (selected.Stack_Frame_ID == param.stack_frame_id);
if (empty stack_frame)
  //Invalid stack frame ID!
  pathMsg = "<No Path Available - Empty instance>";
    if (not_empty body)
      pathMsg = body.getPath();
    end if;
	USER::logError(msg:"Error in Block.execute: Invalid stack frame id. Terminating execution.",path:pathMsg);
  select any stack from instances of I_STACK;
  stack.runState = RunStateType::Suspended; 
else
  select one value related by self->V_VAL[R625];
  if (not_empty value)
    // Execute if statement block
    value.computeValue(stack_frame_id: param.stack_frame_id);
    select any result related by stack_frame->I_VSF[R2951] where
                                            selected.Value_ID == value.Value_ID;
    select one rtVal related by result->RV_RVL[R3305];
    if (empty rtVal)
      // result requires computation. Return and let the new stack frame execute
      return;      
    else
      stack_frame.popValue(value_id:value.Value_ID);
      if (GD::instance_to_boolean(value:rtVal.getValue()) == true)
        select one child_block related by self->ACT_BLK[R607];
        select any statement related by child_block->ACT_SMT[R602];
        if not_empty statement
          // disable execution in parent block
          select any bisf related by stack_frame->I_BSF[R2923] where
                                                           selected.isExecuting;
          bisf.isExecuting = false;
          // Set up child block for execution
          create object instance bisf of I_BSF;
          relate stack_frame to child_block across R2923 using bisf;
          relate statement to bisf across R2941;
          bisf.isExecuting = true;
          child_block.initialize();
        end if;
      else
        select many elif_substmts related by self->ACT_EL[R682];
        // Check for else if sub-statements, and if a test passes then
        // execute and return and do not execute any other else if block.
        for each elif_substmt in elif_substmts
          select one value related by elif_substmt->V_VAL[R659];
      
          if (not_empty value)
            value.computeValue(stack_frame_id: param.stack_frame_id);
            select any result related by stack_frame->I_VSF[R2951] where
                                            selected.Value_ID == value.Value_ID;
            select one rtVal related by result->RV_RVL[R3305];
            if (empty rtVal)
              // result requires computation.
              // Return and let the new stack frame execute
              return;      
            else
              if (GD::instance_to_boolean(value:rtVal.getValue()) == true)
                select one child_block related by elif_substmt->ACT_BLK[R658];
                select any statement related by child_block->ACT_SMT[R602];
                if not_empty statement
                  // disable execution in parent block
                  select any bisf related by stack_frame->I_BSF[R2923] where selected.isExecuting;
                  bisf.isExecuting = false;
                  // Set child block for execution
                  create object instance bisf of I_BSF;
                  relate stack_frame to child_block across R2923 using bisf;
                  relate statement to bisf across R2941;
                  bisf.isExecuting = true;
                  child_block.initialize();
                end if;
                for each elif_substmt_to_clean in elif_substmts
                  stack_frame.popValue(value_id:elif_substmt_to_clean.Value_ID);
                end for;
                return;
              end if;
            end if;
          end if;
        end for;    
        for each elif_substmt_to_clean in elif_substmts
          stack_frame.popValue(value_id:elif_substmt_to_clean.Value_ID);
        end for;
        // Check for an else block and if it exists then execute it.
        select one else_substmt related by self->ACT_E[R683]; 
        if (not_empty else_substmt)
          select one child_block related by else_substmt->ACT_BLK[R606];
          select any statement related by child_block->ACT_SMT[R602];
          if not_empty statement
            // disable execution in parent block
            select any bisf related by stack_frame->I_BSF[R2923] where selected.isExecuting;
            bisf.isExecuting = false;
            // Set child block for execution
            create object instance bisf of I_BSF;
            relate stack_frame to child_block across R2923 using bisf;
            relate statement to bisf across R2941;
            bisf.isExecuting = true;
            child_block.initialize();
          end if;
        end if;
      end if;
    end if;
  end if;
end if;',
	1,
	'',
	"764fdd1e-315c-43d2-8912-695e847a3171");
INSERT INTO O_TPARM
	VALUES ("7e142ad2-4d66-4d3a-ba18-51d33d51d91a",
	"569e3992-4e74-4942-9b71-64c907d32d60",
	'stack_frame_id',
	"ba5eda7a-def5-0000-0000-000000000005",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO O_REF
	VALUES ("e880475e-9d23-4742-9d95-4b632666c1cf",
	"4f42b756-0c2e-4a87-b40f-87291682433c",
	0,
	"9bdc49e0-583c-4741-ad6c-fa52d80977a5",
	"df5d83da-30d6-4d47-b2e9-e0558c45efd8",
	"eb51aef3-86b7-4af2-b7a7-75e3ddffa29a",
	"7558839e-e4fb-46e4-97b0-decfec373abb",
	"582853f5-5fec-4742-be9c-44edf2356dd8",
	"8ae8ab90-494f-416b-97b5-6a68ae8d5cbf",
	"00000000-0000-0000-0000-000000000000",
	0,
	'',
	'Statement',
	'Statement_ID',
	'R603');
INSERT INTO R_RGO_PROXY
	VALUES ("e880475e-9d23-4742-9d95-4b632666c1cf",
	"df5d83da-30d6-4d47-b2e9-e0558c45efd8",
	"eb51aef3-86b7-4af2-b7a7-75e3ddffa29a",
	'../Body.xtuml');
INSERT INTO O_RTIDA_PROXY
	VALUES ("9bdc49e0-583c-4741-ad6c-fa52d80977a5",
	"4f42b756-0c2e-4a87-b40f-87291682433c",
	0,
	"df5d83da-30d6-4d47-b2e9-e0558c45efd8",
	"7558839e-e4fb-46e4-97b0-decfec373abb",
	'../Body.xtuml');
INSERT INTO O_RATTR
	VALUES ("582853f5-5fec-4742-be9c-44edf2356dd8",
	"e880475e-9d23-4742-9d95-4b632666c1cf",
	"9bdc49e0-583c-4741-ad6c-fa52d80977a5",
	"4f42b756-0c2e-4a87-b40f-87291682433c",
	1,
	'Statement_ID');
INSERT INTO O_BATTR_PROXY
	VALUES ("9bdc49e0-583c-4741-ad6c-fa52d80977a5",
	"4f42b756-0c2e-4a87-b40f-87291682433c",
	'../Statement/Statement.xtuml');
INSERT INTO O_ATTR
	VALUES ("582853f5-5fec-4742-be9c-44edf2356dd8",
	"e880475e-9d23-4742-9d95-4b632666c1cf",
	"00000000-0000-0000-0000-000000000000",
	'Statement_ID',
	'

',
	'',
	'Statement_ID',
	0,
	"ba5eda7a-def5-0000-0000-000000000007",
	'',
	'');
INSERT INTO O_REF
	VALUES ("e880475e-9d23-4742-9d95-4b632666c1cf",
	"70a3e88d-3ee9-4e76-93d3-c4f447e317f4",
	0,
	"d99d21d2-81d8-403b-9806-b4620234cdcc",
	"03f4352f-afc1-466a-9963-0c4a851003d7",
	"ef022a59-a791-4977-a5b1-70d30774be0f",
	"3886cc6b-6aae-4fd8-9e9d-d17330aa1987",
	"13425d42-7422-4188-9427-4ef72f99c549",
	"c7789f33-7036-4ee4-ae6e-2b40d4fc08fa",
	"00000000-0000-0000-0000-000000000000",
	0,
	'',
	'Block',
	'Block_ID',
	'R607.''controls''');
INSERT INTO R_RGO_PROXY
	VALUES ("e880475e-9d23-4742-9d95-4b632666c1cf",
	"03f4352f-afc1-466a-9963-0c4a851003d7",
	"ef022a59-a791-4977-a5b1-70d30774be0f",
	'../Body.xtuml');
INSERT INTO O_RTIDA_PROXY
	VALUES ("d99d21d2-81d8-403b-9806-b4620234cdcc",
	"70a3e88d-3ee9-4e76-93d3-c4f447e317f4",
	0,
	"03f4352f-afc1-466a-9963-0c4a851003d7",
	"3886cc6b-6aae-4fd8-9e9d-d17330aa1987",
	'../Body.xtuml');
INSERT INTO O_RATTR
	VALUES ("13425d42-7422-4188-9427-4ef72f99c549",
	"e880475e-9d23-4742-9d95-4b632666c1cf",
	"d99d21d2-81d8-403b-9806-b4620234cdcc",
	"70a3e88d-3ee9-4e76-93d3-c4f447e317f4",
	1,
	'Block_ID');
INSERT INTO O_BATTR_PROXY
	VALUES ("d99d21d2-81d8-403b-9806-b4620234cdcc",
	"70a3e88d-3ee9-4e76-93d3-c4f447e317f4",
	'../Block/Block.xtuml');
INSERT INTO O_ATTR
	VALUES ("13425d42-7422-4188-9427-4ef72f99c549",
	"e880475e-9d23-4742-9d95-4b632666c1cf",
	"582853f5-5fec-4742-be9c-44edf2356dd8",
	'Block_ID',
	'',
	'',
	'Block_ID',
	0,
	"ba5eda7a-def5-0000-0000-000000000007",
	'',
	'');
INSERT INTO O_REF
	VALUES ("e880475e-9d23-4742-9d95-4b632666c1cf",
	"43ea4f47-4fe8-4167-8153-9e199477d0fd",
	0,
	"6e185a42-0dc6-4b9d-9d4b-38cb7c8aa772",
	"22627bf8-5f94-4824-a86d-a7b89fef5e6c",
	"697a5b77-f82b-4679-96f9-91f6c771b4cd",
	"723842c2-e663-4bac-82ac-13f2282b9565",
	"0b3cbef1-2b64-450f-b408-01ed1d2a8b65",
	"9fa4d16f-feef-4d20-bb00-9285cebd62de",
	"00000000-0000-0000-0000-000000000000",
	0,
	'',
	'Value',
	'Value_ID',
	'R625.''test result''');
INSERT INTO R_RGO_PROXY
	VALUES ("e880475e-9d23-4742-9d95-4b632666c1cf",
	"22627bf8-5f94-4824-a86d-a7b89fef5e6c",
	"697a5b77-f82b-4679-96f9-91f6c771b4cd",
	'../Body.xtuml');
INSERT INTO O_RTIDA_PROXY
	VALUES ("6e185a42-0dc6-4b9d-9d4b-38cb7c8aa772",
	"43ea4f47-4fe8-4167-8153-9e199477d0fd",
	0,
	"22627bf8-5f94-4824-a86d-a7b89fef5e6c",
	"723842c2-e663-4bac-82ac-13f2282b9565",
	'../Body.xtuml');
INSERT INTO O_RATTR
	VALUES ("0b3cbef1-2b64-450f-b408-01ed1d2a8b65",
	"e880475e-9d23-4742-9d95-4b632666c1cf",
	"6e185a42-0dc6-4b9d-9d4b-38cb7c8aa772",
	"43ea4f47-4fe8-4167-8153-9e199477d0fd",
	1,
	'Value_ID');
INSERT INTO O_BATTR_PROXY
	VALUES ("6e185a42-0dc6-4b9d-9d4b-38cb7c8aa772",
	"43ea4f47-4fe8-4167-8153-9e199477d0fd",
	'../../Value/Value/Value.xtuml');
INSERT INTO O_ATTR
	VALUES ("0b3cbef1-2b64-450f-b408-01ed1d2a8b65",
	"e880475e-9d23-4742-9d95-4b632666c1cf",
	"13425d42-7422-4188-9427-4ef72f99c549",
	'Value_ID',
	'

',
	'',
	'Value_ID',
	0,
	"ba5eda7a-def5-0000-0000-000000000007",
	'',
	'');
INSERT INTO O_REF
	VALUES ("e880475e-9d23-4742-9d95-4b632666c1cf",
	"1310b3b2-b00c-4556-92e9-8556a790ad74",
	0,
	"89d14016-3bb2-4b30-8b10-68aecec80d3a",
	"172be715-be7e-45b9-84ae-11ac4469b4f5",
	"f803c605-0019-4c12-b83f-d7d627ad7cc3",
	"08efd2f2-6625-4fb3-841b-bbcfd5158838",
	"1e33acdb-1d5e-4b55-a005-97a00216ff6e",
	"3d4c2d76-92fb-4710-a211-9ae12fafb061",
	"00000000-0000-0000-0000-000000000000",
	0,
	'',
	'ElseIf Stmt',
	'Statement_ID',
	'R690.''was executing when halted''');
INSERT INTO R_RGO_PROXY
	VALUES ("e880475e-9d23-4742-9d95-4b632666c1cf",
	"172be715-be7e-45b9-84ae-11ac4469b4f5",
	"f803c605-0019-4c12-b83f-d7d627ad7cc3",
	'../Body.xtuml');
INSERT INTO O_RTIDA_PROXY
	VALUES ("89d14016-3bb2-4b30-8b10-68aecec80d3a",
	"1310b3b2-b00c-4556-92e9-8556a790ad74",
	0,
	"172be715-be7e-45b9-84ae-11ac4469b4f5",
	"08efd2f2-6625-4fb3-841b-bbcfd5158838",
	'../Body.xtuml');
INSERT INTO O_RATTR
	VALUES ("1e33acdb-1d5e-4b55-a005-97a00216ff6e",
	"e880475e-9d23-4742-9d95-4b632666c1cf",
	"9bdc49e0-583c-4741-ad6c-fa52d80977a5",
	"4f42b756-0c2e-4a87-b40f-87291682433c",
	1,
	'Statement_ID');
INSERT INTO O_ATTR
	VALUES ("1e33acdb-1d5e-4b55-a005-97a00216ff6e",
	"e880475e-9d23-4742-9d95-4b632666c1cf",
	"0b3cbef1-2b64-450f-b408-01ed1d2a8b65",
	'Elif_Statement_ID',
	'',
	'Elif_',
	'Statement_ID',
	1,
	"ba5eda7a-def5-0000-0000-000000000007",
	'',
	'');
INSERT INTO O_REF
	VALUES ("e880475e-9d23-4742-9d95-4b632666c1cf",
	"86f7a0dc-5e76-4f5b-8f5f-ccdd98a3aa0f",
	0,
	"52b33e6d-23e4-4bd2-955a-6c5b13fa3652",
	"ec68def0-9646-4c7b-bfc0-64e383f6c394",
	"a9ed0aaa-d5f2-40da-87f4-cc53abdfa5f9",
	"e7f1c938-e83c-4b62-8f9f-00bf5b01e215",
	"32178fbb-b614-473d-ac40-49f75315e332",
	"0885a77a-d2cc-4b48-b0d6-7187c9d78747",
	"00000000-0000-0000-0000-000000000000",
	0,
	'',
	'Else Stmt',
	'Statement_ID',
	'R692.''was executing when halted''');
INSERT INTO R_RGO_PROXY
	VALUES ("e880475e-9d23-4742-9d95-4b632666c1cf",
	"ec68def0-9646-4c7b-bfc0-64e383f6c394",
	"a9ed0aaa-d5f2-40da-87f4-cc53abdfa5f9",
	'../Body.xtuml');
INSERT INTO O_RTIDA_PROXY
	VALUES ("52b33e6d-23e4-4bd2-955a-6c5b13fa3652",
	"86f7a0dc-5e76-4f5b-8f5f-ccdd98a3aa0f",
	0,
	"ec68def0-9646-4c7b-bfc0-64e383f6c394",
	"e7f1c938-e83c-4b62-8f9f-00bf5b01e215",
	'../Body.xtuml');
INSERT INTO O_RATTR
	VALUES ("32178fbb-b614-473d-ac40-49f75315e332",
	"e880475e-9d23-4742-9d95-4b632666c1cf",
	"9bdc49e0-583c-4741-ad6c-fa52d80977a5",
	"4f42b756-0c2e-4a87-b40f-87291682433c",
	1,
	'Statement_ID');
INSERT INTO O_ATTR
	VALUES ("32178fbb-b614-473d-ac40-49f75315e332",
	"e880475e-9d23-4742-9d95-4b632666c1cf",
	"1e33acdb-1d5e-4b55-a005-97a00216ff6e",
	'Else_Statement_ID',
	'',
	'Else_',
	'Statement_ID',
	1,
	"ba5eda7a-def5-0000-0000-000000000007",
	'',
	'');
INSERT INTO O_ID
	VALUES (0,
	"e880475e-9d23-4742-9d95-4b632666c1cf");
INSERT INTO O_OIDA
	VALUES ("582853f5-5fec-4742-be9c-44edf2356dd8",
	"e880475e-9d23-4742-9d95-4b632666c1cf",
	0,
	'Statement_ID');
INSERT INTO O_ID
	VALUES (1,
	"e880475e-9d23-4742-9d95-4b632666c1cf");
INSERT INTO O_ID
	VALUES (2,
	"e880475e-9d23-4742-9d95-4b632666c1cf");
INSERT INTO PE_PE
	VALUES ("e880475e-9d23-4742-9d95-4b632666c1cf",
	1,
	"5375dd69-33aa-4887-8270-296340adc334",
	"00000000-0000-0000-0000-000000000000",
	4);
INSERT INTO EP_PKG_PROXY
	VALUES ("5375dd69-33aa-4887-8270-296340adc334",
	"00000000-0000-0000-0000-000000000000",
	"2f3ea6a7-20e9-405c-b68c-7fba041e7daf",
	'Body',
	'This subsystem abstracts the action itself, the blocks and statements
it contains together with the flow of control statements such as ''while'',
''for each'' and ''if''.
Notify_Changes:false
Persistent:false
// This is used by schema_gen to ignore this subsystem (for publication)
TRANSLATE_FOR_EXTERNAL_USE:FALSE
',
	600,
	'../Body.xtuml');
