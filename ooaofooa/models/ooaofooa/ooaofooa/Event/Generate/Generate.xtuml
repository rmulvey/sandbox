-- BP 7.1.6 content: ModelClass syschar: 3 persistence-version: 7.1.6

INSERT INTO O_OBJ
	VALUES ("7922c108-44b0-4ebc-af74-93e05a9b1724",
	'Generate',
	701,
	'E_GEN',
	'This class represents the generation of an event to a target instance.',
	"00000000-0000-0000-0000-000000000000");
INSERT INTO O_TFR
	VALUES ("fc8bd8ee-60fa-4a18-8f56-311de10efd7e",
	"7922c108-44b0-4ebc-af74-93e05a9b1724",
	'dispose',
	'This operation disconnects an instance, and all instances it is 
responsible for, from the model.',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'select one var related by self->V_VAR[R712];
if ( not empty var )
  unrelate self from var across R712;
end if;
delete object instance self;
',
	1,
	'',
	"00000000-0000-0000-0000-000000000000");
INSERT INTO O_TFR
	VALUES ("7b3d0da2-a501-4192-97de-8c05e2f02392",
	"7922c108-44b0-4ebc-af74-93e05a9b1724",
	'execute',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'// Event: Generate.execute()
                                   
// Create a pending event for this event
select one evt related by self->E_GSME[R705]->SM_EVT[R707];
select one body related by self->V_VAR[R712]->ACT_BLK[R823]->ACT_ACT[R601];
// Attempt to get the stack from the stack frame passed in.
// Note, this will only work if the stack frame passed in is a top stack frame
// If this is not sufficient then all stack frames will need to be related
// to a stack or the stack id will also need to be an input into this operation.
select any stack_frame from instances of I_STF where (selected.Stack_Frame_ID == param.stack_frame_id);
if (empty stack_frame)
	//Invalid stack frame ID!
	pathMsg = "<No Path Available - Empty instance>";
    if (not_empty body)
      pathMsg = body.getPath();
    end if;
	USER::logError(msg:"Error in Value.getValue: Invalid stack frame id used. Using random top stack frame.",path:pathMsg);
	select any stack from instances of I_STACK;
	select one stack_frame related by stack->I_STF[R2929];
end if;
select one stack related by stack_frame->I_STACK[R2929];
if (empty stack)
  //Could not get stack!
  pathMsg = "<No Path Available - Empty instance>";
    if (not_empty body)
      pathMsg = body.getPath();
    end if;
	USER::logError(msg:"Error in Value.getValue: Could not get stack. Using random stack.",path:pathMsg);
  select any stack from instances of I_STACK;
end if;

// Get all of the block in stack frames that exist for the top stack frame
select many block_in_stack_frames related by stack_frame->I_BSF[R2923];

// Find the local references in the top stack frame
select many top_stack_local_refs related by block_in_stack_frames->L_LCL[R3000]
                                     ->L_LCR[R3001];
                                   
// Find the recipient instance for the top stack frame
select one recipient_var related by self->V_VAR[R712];
select any recipient_local_ref related by block_in_stack_frames->
       L_LCL[R3000]->L_LCR[R3001] where selected.Var_ID == recipient_var.Var_ID;

// Since the same instance handle can point to multiple instances across
// different stack frames, make sure go through the currently executing 
// instance handle to get the correct instance.

select any inst related by recipient_local_ref->L_LCL[R3001]->RV_RVL[R3306]->
                       RV_SMV[R3300]->RV_IRV[R3308]->L_IIR[R3311]->I_INS[R3013];

if (not_empty inst)
  create object instance evtInst of I_EVI;
  relate evt to evtInst across R2906;

  // Relate this pending event to its instance
  relate evtInst to inst across R2935;

  // Hook up event data
  select one evt_spec_stmt related by self->E_GSME[R705]->
                                                       E_GES[R703]->E_ESS[R701];
  valueComputationComplete =
                      evt_spec_stmt.hookUpEventData(evtInst_ID:evtInst.Event_ID,
                                          stack_frame_id: param.stack_frame_id);
  if (valueComputationComplete)
    // Find the originating instance for this event and relate this event to it
    evt_spec_stmt.relateToOriginatingInst(evtInst_ID:evtInst.Event_ID,
                                           stack_frame_id:param.stack_frame_id);

    // Set this event as pending for the target instance
    evtInst.fire();
  end if;
else
  pathMsg = "<No Path Available - Empty instance>";
    if (not_empty body)
      pathMsg = body.getPath();
    end if;
	USER::logError(msg:"Event: Generate.execute: Could not find instance through the instance handle for event ",path:pathMsg);
end if;',
	1,
	'',
	"fc8bd8ee-60fa-4a18-8f56-311de10efd7e");
INSERT INTO O_TPARM
	VALUES ("670ce504-f3b3-4707-9974-1ce4364c47fa",
	"7b3d0da2-a501-4192-97de-8c05e2f02392",
	'stack_frame_id',
	"ba5eda7a-def5-0000-0000-000000000005",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO O_REF
	VALUES ("7922c108-44b0-4ebc-af74-93e05a9b1724",
	"da1022bb-1622-435e-951d-202c385876d6",
	0,
	"5f132ab4-4301-4293-87bc-9542f1e786fe",
	"f9f512ee-7f24-430b-836b-6ff0a7e1b052",
	"bf938da3-40ec-4c9c-953d-7c53348dd03f",
	"dde1a5ac-ec4c-4e3e-9fdf-942e9aa3c3bc",
	"578fe5b6-6081-44f4-9cd7-a48999ff8732",
	"a1db62da-6c04-40a2-a40b-dc4caf9caeb7",
	"00000000-0000-0000-0000-000000000000",
	0,
	'',
	'Generate SM Event Statement',
	'Statement_ID',
	'R705');
INSERT INTO R_RGO_PROXY
	VALUES ("7922c108-44b0-4ebc-af74-93e05a9b1724",
	"f9f512ee-7f24-430b-836b-6ff0a7e1b052",
	"bf938da3-40ec-4c9c-953d-7c53348dd03f",
	'../Event.xtuml');
INSERT INTO O_RTIDA_PROXY
	VALUES ("5f132ab4-4301-4293-87bc-9542f1e786fe",
	"da1022bb-1622-435e-951d-202c385876d6",
	0,
	"f9f512ee-7f24-430b-836b-6ff0a7e1b052",
	"dde1a5ac-ec4c-4e3e-9fdf-942e9aa3c3bc",
	'../Event.xtuml');
INSERT INTO O_RATTR
	VALUES ("578fe5b6-6081-44f4-9cd7-a48999ff8732",
	"7922c108-44b0-4ebc-af74-93e05a9b1724",
	"9bdc49e0-583c-4741-ad6c-fa52d80977a5",
	"4f42b756-0c2e-4a87-b40f-87291682433c",
	1,
	'Statement_ID');
INSERT INTO O_BATTR_PROXY
	VALUES ("9bdc49e0-583c-4741-ad6c-fa52d80977a5",
	"4f42b756-0c2e-4a87-b40f-87291682433c",
	'../../Body/Statement/Statement.xtuml');
INSERT INTO O_ATTR
	VALUES ("578fe5b6-6081-44f4-9cd7-a48999ff8732",
	"7922c108-44b0-4ebc-af74-93e05a9b1724",
	"00000000-0000-0000-0000-000000000000",
	'Statement_ID',
	'

',
	'',
	'Statement_ID',
	0,
	"ba5eda7a-def5-0000-0000-000000000007",
	'',
	'');
INSERT INTO O_REF
	VALUES ("7922c108-44b0-4ebc-af74-93e05a9b1724",
	"f8c82d33-e7c5-4fb7-8c3c-77b2a47feca7",
	0,
	"5b3f451e-a4bf-4d7c-97db-547eae3c84ae",
	"c2ddca54-7f4f-4c10-a8fe-44d887b9bbc1",
	"c22834ad-b723-44dc-89d5-2bcbfe786a24",
	"0371501a-eb35-45d3-90f4-eb5f88d72ab3",
	"00cf4912-1f95-457f-a9fe-9494f84f3b17",
	"20f9188e-1d9e-46f4-b2a0-46f345988046",
	"00000000-0000-0000-0000-000000000000",
	0,
	'',
	'Variable',
	'Var_ID',
	'R712.''has recipient''');
INSERT INTO R_RGO_PROXY
	VALUES ("7922c108-44b0-4ebc-af74-93e05a9b1724",
	"c2ddca54-7f4f-4c10-a8fe-44d887b9bbc1",
	"c22834ad-b723-44dc-89d5-2bcbfe786a24",
	'../Event.xtuml');
INSERT INTO O_RTIDA_PROXY
	VALUES ("5b3f451e-a4bf-4d7c-97db-547eae3c84ae",
	"f8c82d33-e7c5-4fb7-8c3c-77b2a47feca7",
	0,
	"c2ddca54-7f4f-4c10-a8fe-44d887b9bbc1",
	"0371501a-eb35-45d3-90f4-eb5f88d72ab3",
	'../Event.xtuml');
INSERT INTO O_RATTR
	VALUES ("00cf4912-1f95-457f-a9fe-9494f84f3b17",
	"7922c108-44b0-4ebc-af74-93e05a9b1724",
	"5b3f451e-a4bf-4d7c-97db-547eae3c84ae",
	"f8c82d33-e7c5-4fb7-8c3c-77b2a47feca7",
	1,
	'Var_ID');
INSERT INTO O_BATTR_PROXY
	VALUES ("5b3f451e-a4bf-4d7c-97db-547eae3c84ae",
	"f8c82d33-e7c5-4fb7-8c3c-77b2a47feca7",
	'../../Value/Variable/Variable.xtuml');
INSERT INTO O_ATTR
	VALUES ("00cf4912-1f95-457f-a9fe-9494f84f3b17",
	"7922c108-44b0-4ebc-af74-93e05a9b1724",
	"578fe5b6-6081-44f4-9cd7-a48999ff8732",
	'Var_ID',
	'

',
	'',
	'Var_ID',
	0,
	"ba5eda7a-def5-0000-0000-000000000007",
	'',
	'');
INSERT INTO O_ID
	VALUES (0,
	"7922c108-44b0-4ebc-af74-93e05a9b1724");
INSERT INTO O_OIDA
	VALUES ("578fe5b6-6081-44f4-9cd7-a48999ff8732",
	"7922c108-44b0-4ebc-af74-93e05a9b1724",
	0,
	'Statement_ID');
INSERT INTO O_ID
	VALUES (1,
	"7922c108-44b0-4ebc-af74-93e05a9b1724");
INSERT INTO O_ID
	VALUES (2,
	"7922c108-44b0-4ebc-af74-93e05a9b1724");
INSERT INTO PE_PE
	VALUES ("7922c108-44b0-4ebc-af74-93e05a9b1724",
	1,
	"cae93765-eec1-4086-915a-d3082fb48fa7",
	"00000000-0000-0000-0000-000000000000",
	4);
INSERT INTO EP_PKG_PROXY
	VALUES ("cae93765-eec1-4086-915a-d3082fb48fa7",
	"00000000-0000-0000-0000-000000000000",
	"2f3ea6a7-20e9-405c-b68c-7fba041e7daf",
	'Event',
	'This subsystem focuses on the creation and generation
of events. Events to instances, class, creators and
external entities are covered, as well as the creation of
event instances of those types. Finally the generation
of pre-existing event instances are also covered.
Notify_Changes:false
Persistent:false
// This is used by schema_gen to ignore this subsystem (for publication)
TRANSLATE_FOR_EXTERNAL_USE:FALSE
',
	700,
	'../Event.xtuml');
