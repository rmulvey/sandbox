-- BP 7.1.6 content: ModelClass syschar: 3 persistence-version: 7.1.6

INSERT INTO O_OBJ
	VALUES ("b8607417-b99c-4445-8a27-09e0bd095cf6",
	'Function Parameter',
	17,
	'S_SPARM',
	'A parameter to a function (S_SYNC) is called a function parameter (S_SPARM).  Function parameters are either passed in by value, or by reference.  Function parameters can be accessed by using the param keyword from within a function action specification.',
	"00000000-0000-0000-0000-000000000000");
INSERT INTO O_TFR
	VALUES ("b7ab31d5-205b-45a5-93b1-cdcb66913acd",
	"b8607417-b99c-4445-8a27-09e0bd095cf6",
	'dispose',
	'The dispose operation for this class.',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'// Function Parameter.dispose()
//
// Domain Subsystem
select one func related by self->S_SYNC[R24];
unrelate self from func across R24;
select one dt related by self->S_DT[R26];
unrelate self from dt across R26;
//
select one successor related by self->S_SPARM[R54.''precedes''];
select one predecessor related by self->S_SPARM[R54.''succeeds''];
if (not empty successor)
  unrelate self from successor across R54.''precedes'';
end if;
if (not empty predecessor)
  unrelate self from predecessor across R54.''succeeds'';
end if;
if (not_empty successor and not_empty predecessor)
  relate successor to predecessor across R54.''succeeds'';
end if;
//
// Value Subsystem
select many pvs related by self->V_PVL[R832];
for each pv in pvs
  unrelate self from pv across R832;
end for;
//
// Local Subsystem
select many lcls related by self->L_LCL[R3007];
for each lcl in lcls
  unrelate self from lcl across R3007;
  lcl.dispose();
end for;
// dispose each message argument
// associated with this parm
select many args related by self->MSG_FA[R1016];
for each arg in args
  arg.dispose();
end for;
select many dims related by self->S_DIM[R52];
for each dim in dims
  unrelate self from dim across R52;
  delete object instance dim;
end for;
//
// Finally, delete self
delete object instance self;',
	1,
	'',
	"67ed2f4d-d3a7-493f-b7d4-36bbb6aae4a7");
INSERT INTO O_TFR
	VALUES ("aa26958e-e591-48fa-a898-4f9af50ac682",
	"b8607417-b99c-4445-8a27-09e0bd095cf6",
	'initialize',
	'The initialization operation for this class.  Set the name and return value to defaults.',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'select one function related by self->S_SYNC[R24];
function.addParameterToOrder(id:self.SParm_ID);
isInGenericPkg = false;
select one pkg related by self->S_SYNC[R24]->PE_PE[R8001]->EP_PKG[R8000];

    select one system related by pkg->S_SYS[R1405];
    def_dt_id = GD::NULL_UNIQUE_ID();
    if not_empty system
      def_dt_id = system.getCoreTypeId(name:"integer");
    end if;
    select any pe from instances of PE_PE where selected.Element_ID == def_dt_id;
    select one def_dt related by pe->S_DT[R8001]; 
    if(not_empty def_dt)
      relate self to def_dt across R26;
    end if;

name = ::getUniqueInitialName( 
	instance: self.convertToInstance(), 
    candidateName: "Unnamed Parameter");
success = ::getNewElementName(name:name,instance: self.convertToInstance(),validateName:true);    
if ( success!="") 
 self.Name=success;
else 
 self.dispose();
end if;     
    ',
	1,
	'',
	"066fb564-79af-4664-9626-3603811a66e6");
INSERT INTO O_TFR
	VALUES ("7029426f-184e-4ce3-9253-7b7b420b3658",
	"b8607417-b99c-4445-8a27-09e0bd095cf6",
	'isAllowedType',
	'',
	"ba5eda7a-def5-0000-0000-000000000001",
	1,
	'// Function Parameter.isAllowedType()
select one packageableElem related by self->S_SYNC[R24]->PE_PE[R8001];
return packageableElem.isAllowedType(isReturnType:false,
                                                       typeName:param.typeName);
',
	1,
	'',
	"aa26958e-e591-48fa-a898-4f9af50ac682");
INSERT INTO O_TPARM
	VALUES ("50671e1c-caf9-4c29-a964-221b3729babb",
	"7029426f-184e-4ce3-9253-7b7b420b3658",
	'typeName',
	"ba5eda7a-def5-0000-0000-000000000004",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO O_TFR
	VALUES ("67ed2f4d-d3a7-493f-b7d4-36bbb6aae4a7",
	"b8607417-b99c-4445-8a27-09e0bd095cf6",
	'convertToInstance',
	'A utility operation to cast an instance of this type to the
instance datatype.

Translate: native',
	"a5d8b590-a627-4af4-afdf-152c889769b6",
	1,
	'// just return this instance as an Object
return this;',
	0,
	'',
	"c34e7dec-bcc0-4bb1-8851-8e9f6d0dc4ed");
INSERT INTO S_DT_PROXY
	VALUES ("a5d8b590-a627-4af4-afdf-152c889769b6",
	"00000000-0000-0000-0000-000000000000",
	'instance',
	'',
	'',
	'../../Datatypes/Datatypes.xtuml');
INSERT INTO O_TFR
	VALUES ("066fb564-79af-4664-9626-3603811a66e6",
	"b8607417-b99c-4445-8a27-09e0bd095cf6",
	'getValue',
	'',
	"a5d8b590-a627-4af4-afdf-152c889769b6",
	1,
	'// Domain:Function Parameter.getValue()
// Grab the stack frame
select any stack_frame from instances of I_STF where
                              (selected.Stack_Frame_ID == param.stack_frame_id);
if (empty stack_frame)
  //Invalid stack frame ID!
  USER::logError(msg:"Error in Function Parameter.getValue: Invalid stack frame handle used. Using random top stack frame.",path:"");
  select any stack from instances of I_STACK;
  select one stack_frame related by stack->I_STF[R2929];
end if;
// Find the local that exists in the stack frame
select many locals related by self->L_LCL[R3007];
for each local in locals
  // Find the stack frame where this local lives
  select one block_in_stack_frame related by local->I_BSF[R3000];
  if (block_in_stack_frame.Stack_Frame_ID == stack_frame.Stack_Frame_ID)
    // We found the local at the stack frame, so return its string
    return local.getValue(stack_frame_id: stack_frame.Stack_Frame_ID);
  end if;
end for;
USER::logError(msg:"Error: No value found for argument " +
                                                self.Name + ", using default.",path:"PathNotProvided");
select one dt related by self->S_DT[R26];
return dt.getDefaultValue();',
	1,
	'',
	"8a488770-02d8-4114-96a8-d9e4b19636c5");
INSERT INTO O_TPARM
	VALUES ("286f7586-871e-48aa-bb2b-6989aea537ef",
	"066fb564-79af-4664-9626-3603811a66e6",
	'stack_frame_id',
	"ba5eda7a-def5-0000-0000-000000000005",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO O_TFR
	VALUES ("0437a8df-73bd-4c0f-bc09-93d106241853",
	"b8607417-b99c-4445-8a27-09e0bd095cf6",
	'setValue',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'// Domain:Function Parameter.setValue()
// Grab the stack frame
select any stack_frame from instances of I_STF where
                              (selected.Stack_Frame_ID == param.stack_frame_id);
if (empty stack_frame)
  //Invalid stack frame ID!
  USER::logError(msg:"Error in Function Parameter.getValue: Invalid stack frame handle used. Using random top stack frame.",path:"");
  select any stack from instances of I_STACK;
  select one stack_frame related by stack->I_STF[R2929];
end if;
// Find the local value that exists in the stack frame
select many locals related by self->L_LCL[R3007];
for each local in locals
  // Find the stack frame where this local value lives
  select one block_in_stack_frame related by local->I_BSF[R3000];
  if (block_in_stack_frame.Stack_Frame_ID == stack_frame.Stack_Frame_ID)
    // We found the local at the stack frame, so set its value
    local.setValue(stack_frame_id: stack_frame.Stack_Frame_ID,
                                 value: param.value, member_id:param.member_id);
    return;
  end if;
end for;
USER::logError(msg:"Error in Function Parameter.setValue: Could not find the local value in the stack frame.",path:"");',
	1,
	'',
	"889f94f6-6a17-4156-a12f-b9d85e33f839");
INSERT INTO O_TPARM
	VALUES ("731dfb19-0b20-4c89-bf49-9e645cff8cd6",
	"0437a8df-73bd-4c0f-bc09-93d106241853",
	'stack_frame_id',
	"ba5eda7a-def5-0000-0000-000000000005",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO O_TPARM
	VALUES ("b87829a0-6c25-4317-a374-557628d1e76c",
	"0437a8df-73bd-4c0f-bc09-93d106241853",
	'value',
	"a5d8b590-a627-4af4-afdf-152c889769b6",
	0,
	'',
	"731dfb19-0b20-4c89-bf49-9e645cff8cd6",
	'');
INSERT INTO O_TPARM
	VALUES ("12e48cea-8f56-4865-a33c-71a96b17b884",
	"0437a8df-73bd-4c0f-bc09-93d106241853",
	'member_id',
	"ba5eda7a-def5-0000-0000-000000000005",
	0,
	'',
	"b87829a0-6c25-4317-a374-557628d1e76c",
	'');
INSERT INTO O_TFR
	VALUES ("889f94f6-6a17-4156-a12f-b9d85e33f839",
	"b8607417-b99c-4445-8a27-09e0bd095cf6",
	'resolveDatatype',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'select one dtProxy related by self->S_DT[R26];
if(not_empty dtProxy and not Util::isProxy(element:self.convertToInstance()))
  name = dtProxy.Name;
  unrelate dtProxy from self across R26;
  
  select one packageableElem related by self->S_SYNC[R24]->PE_PE[R8001];
  select one package related by packageableElem->EP_PKG[R8000];
  select one component related by packageableElem->C_C[R8003];

    id = packageableElem.resolveDataTypeRelativeToSelf(default_name:"integer",
                                                            expected_name:name);                                                          
    select any resolvedDt related by package->PE_VIS[R8002]->
                         PE_PE[R8002]->S_DT[R8001] where selected.DT_ID == id;
    if (empty resolvedDt)
      select any resolvedDt related by component->PE_CVS[R8004]->
                       PE_PE[R8004]->S_DT[R8001] where selected.DT_ID == id;
    end if;	
    if not_empty resolvedDt
      relate resolvedDt to self across R26;
    end if;
end if;',
	1,
	'',
	"1983070e-64d6-44d2-aa86-fb5ed2311a80");
INSERT INTO O_TFR
	VALUES ("8a488770-02d8-4114-96a8-d9e4b19636c5",
	"b8607417-b99c-4445-8a27-09e0bd095cf6",
	'getDimensionsCnt',
	'',
	"ba5eda7a-def5-0000-0000-000000000002",
	1,
	'select many dims related by self->S_DIM[R52];
dimensions = cardinality dims;
return dimensions;
',
	1,
	'',
	"b7ab31d5-205b-45a5-93b1-cdcb66913acd");
INSERT INTO O_TFR
	VALUES ("1983070e-64d6-44d2-aa86-fb5ed2311a80",
	"b8607417-b99c-4445-8a27-09e0bd095cf6",
	'resizeDimensions',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'// If the number of dimensions has increased then add dimensions
while (param.numDimensions > self.getDimensionsCnt())
  create object instance dim of S_DIM;
  dim.dimensionCount = self.getDimensionsCnt();
  relate dim to self across R52;
end while;

// If the number of dimensions has decreased then remove dimensions
while (param.numDimensions < self.getDimensionsCnt())
  select any dim related by self->S_DIM[R52] where (selected.dimensionCount == (self.getDimensionsCnt()-1));
  unrelate dim from self across R52;
  delete object instance dim;
end while;

// Update the specific dimension that was passed-in if its elementCount has 
// changed.
if (param.numDimensions > 0) 
  select any dim related by self->S_DIM[R52] where (selected.dimensionCount == param.dimension);
  if (dim.elementCount != param.elementCount)
    dim.elementCount = param.elementCount;
  end if;
end if;
',
	1,
	'',
	"08763ae6-0661-463a-9080-9e30239ae5a8");
INSERT INTO O_TPARM
	VALUES ("b451c1e9-c4b0-4703-97a8-ae8b912a2307",
	"1983070e-64d6-44d2-aa86-fb5ed2311a80",
	'dimension',
	"ba5eda7a-def5-0000-0000-000000000002",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO O_TPARM
	VALUES ("66f8894e-da31-4d54-85ee-ee7908bf14f6",
	"1983070e-64d6-44d2-aa86-fb5ed2311a80",
	'numDimensions',
	"ba5eda7a-def5-0000-0000-000000000002",
	0,
	'',
	"928f7e6c-259a-414b-b68a-06d1b0c1619c",
	'');
INSERT INTO O_TPARM
	VALUES ("928f7e6c-259a-414b-b68a-06d1b0c1619c",
	"1983070e-64d6-44d2-aa86-fb5ed2311a80",
	'elementCount',
	"ba5eda7a-def5-0000-0000-000000000002",
	0,
	'',
	"b451c1e9-c4b0-4703-97a8-ae8b912a2307",
	'');
INSERT INTO O_TFR
	VALUES ("08763ae6-0661-463a-9080-9e30239ae5a8",
	"b8607417-b99c-4445-8a27-09e0bd095cf6",
	'moveUp',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'::changeNotificationEnablement(enabled:false);
select one prev_attr related by self->S_SPARM[R54.''succeeds''];
select one prev_prev_attr related by prev_attr->S_SPARM[R54.''succeeds''];
select one next_attr related by self->S_SPARM[R54.''precedes''];

if ( not_empty prev_prev_attr )
  unrelate prev_attr from prev_prev_attr across R54.''succeeds'';
end if;
if ( not_empty next_attr )
  unrelate next_attr from self across R54.''succeeds'';
end if;
unrelate self from prev_attr across R54.''succeeds'';

if ( not_empty prev_prev_attr )
  relate self to prev_prev_attr across R54.''succeeds'';
end if;
// want to enable listeners at the last possible moment
if ( empty next_attr )
  ::changeNotificationEnablement(enabled:true);
end if;
relate prev_attr to self across R54.''succeeds'';
if ( not_empty next_attr )
  ::changeNotificationEnablement(enabled:true);
  relate next_attr to prev_attr across R54.''succeeds'';
end if;
',
	1,
	'',
	"a5ea830f-9efa-4869-886a-10368566b66e");
INSERT INTO O_TFR
	VALUES ("a5ea830f-9efa-4869-886a-10368566b66e",
	"b8607417-b99c-4445-8a27-09e0bd095cf6",
	'moveDown',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'::changeNotificationEnablement(enabled:false);
select one next_attr related by self->S_SPARM[R54.''precedes''];
select one prev_attr related by self->S_SPARM[R54.''succeeds''];
select one next_next_attr related by next_attr->S_SPARM[R54.''precedes''];

if ( not_empty next_next_attr )
  unrelate next_next_attr from next_attr across R54.''succeeds'';
end if;
if ( not_empty prev_attr )
  unrelate self from prev_attr across R54.''succeeds'';
end if;
unrelate next_attr from self across R54.''succeeds'';

if ( not_empty prev_attr )
  relate next_attr to prev_attr across R54.''succeeds'';
end if;
   
// want to enable listeners at the last possible moment
if ( empty next_next_attr )
  ::changeNotificationEnablement(enabled:true);
end if;
relate self to next_attr across R54.''succeeds'';
if ( not_empty next_next_attr )
  ::changeNotificationEnablement(enabled:true);
  relate next_next_attr to self across R54.''succeeds'';
end if;
',
	1,
	'',
	"0310fa67-ba9d-4687-b771-76ba4a5d1151");
INSERT INTO O_TFR
	VALUES ("e3b8da90-7f5d-44a2-97a8-4770761c526b",
	"b8607417-b99c-4445-8a27-09e0bd095cf6",
	'actionFilter',
	'',
	"ba5eda7a-def5-0000-0000-000000000001",
	1,
	'if (param.name == "can" )
  if ( param.value == "move up" )
    select one prev_attr related by self->S_SPARM[R54.''succeeds''];
    return not_empty prev_attr;
  elif ( param.value == "move down" )
    select one next_attr related by self->S_SPARM[R54.''precedes''];
    return not_empty next_attr;
  end if;
end if;
return false;
',
	1,
	'',
	"00000000-0000-0000-0000-000000000000");
INSERT INTO O_TPARM
	VALUES ("74f82a04-7262-43bf-b66a-8076381c90c7",
	"e3b8da90-7f5d-44a2-97a8-4770761c526b",
	'name',
	"ba5eda7a-def5-0000-0000-000000000004",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO O_TPARM
	VALUES ("8597ec4a-7332-40f2-a82e-95e7a97b6800",
	"e3b8da90-7f5d-44a2-97a8-4770761c526b",
	'value',
	"ba5eda7a-def5-0000-0000-000000000004",
	0,
	'',
	"74f82a04-7262-43bf-b66a-8076381c90c7",
	'');
INSERT INTO O_TFR
	VALUES ("c63b0e93-94a7-4220-bbbc-4f971ebc9b8d",
	"b8607417-b99c-4445-8a27-09e0bd095cf6",
	'canReferToDataType',
	'',
	"ba5eda7a-def5-0000-0000-000000000001",
	1,
	'// select the dt
select one dt related by self->S_DT[R26];
if(not_empty dt)
  select one packageableElem related by self->S_SYNC[R24]->PE_PE[R8001];
  select one package related by packageableElem->EP_PKG[R8000];
  select one component related by packageableElem->C_C[R8003];

    return packageableElem.canReferToDataType(dtID:dt.DT_ID, dtName: dt.Name);
end if;
return false;
',
	1,
	'',
	"e3b8da90-7f5d-44a2-97a8-4770761c526b");
INSERT INTO O_TFR
	VALUES ("0310fa67-ba9d-4687-b771-76ba4a5d1151",
	"b8607417-b99c-4445-8a27-09e0bd095cf6",
	'isReferringToDefaultDataType',
	'',
	"ba5eda7a-def5-0000-0000-000000000001",
	1,
	'select one dt related by self->S_DT[R26];
elementType = Util::getSimpleClassName(element:self.convertToInstance());
if(dt.Name == S_DT::getDefaultDataTypeName(elementType:elementType))
  return true;
end if;
return false;
',
	1,
	'',
	"7029426f-184e-4ce3-9253-7b7b420b3658");
INSERT INTO O_TFR
	VALUES ("c34e7dec-bcc0-4bb1-8851-8e9f6d0dc4ed",
	"b8607417-b99c-4445-8a27-09e0bd095cf6",
	'canUseDataType',
	'',
	"ba5eda7a-def5-0000-0000-000000000001",
	1,
	'// Function Parameter.canUseDataType()
select one packageableElem related by self->S_SYNC[R24]->PE_PE[R8001];
select one package related by packageableElem->EP_PKG[R8000];
select one component related by packageableElem->C_C[R8003];

  // Find the previously created visibility list
  select any resultSet related by package->PE_SRS[R8005] where
        selected.Name == "" and selected.Type == ElementTypeConstants::DATATYPE;
  select any dt related by resultSet->PE_VIS[R8006]->
                     PE_PE[R8002]->S_DT[R8001] where selected.DT_ID == param.id;
  if not_empty component
    // Find the previously created visibility list
    select any compResultSet related by component->PE_CRS[R8007] where
        selected.Name == "" and selected.Type == ElementTypeConstants::DATATYPE;
    select any dt related by compResultSet->PE_CVS[R8008]->
                     PE_PE[R8004]->S_DT[R8001] where selected.DT_ID == param.id;
  end if;
  if(not_empty dt)
    if(self.isAllowedType(typeName:dt.Name))
      return true;
    end if;
  end if;
  return false;
',
	1,
	'',
	"c63b0e93-94a7-4220-bbbc-4f971ebc9b8d");
INSERT INTO O_TPARM
	VALUES ("2d163a00-c769-43c1-b76d-525ccfaae733",
	"c34e7dec-bcc0-4bb1-8851-8e9f6d0dc4ed",
	'id',
	"ba5eda7a-def5-0000-0000-000000000005",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO O_TFR
	VALUES ("f8e29595-7d84-4626-9e17-5b795f37bc6f",
	"b8607417-b99c-4445-8a27-09e0bd095cf6",
	'checkIntegrity',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'/**
 *  Create an integrity issue if there are any other parameters in the same
 *  function with a matching name
 */
select one function related by self->S_SYNC[R24];
select one package related by function->PE_PE[R8001]->EP_PKG[R8000];
select one system related by package->S_SYS[R1405];
sys_id = GD::NULL_UNIQUE_ID();
if(not_empty system)
  sys_id = system.Sys_ID;
end if;
select many parameters related by function->S_SPARM[R24];
for each parameter in parameters
  if(parameter != self and parameter.Name == self.Name)
    MI_IM::createIssue(sys_id:sys_id, description:
         "Found another parameter under the same function with a " +
                                                          "matching name.",
                                      severity:Severity::Error, name:self.Name,
                                     path:function.getPath() + "::" + self.Name,
                    id:self.Sync_ID, element:self.convertToInstance());
  end if;
end for;',
	1,
	'',
	"0437a8df-73bd-4c0f-bc09-93d106241853");
INSERT INTO O_NBATTR
	VALUES ("6e7206fb-103b-4329-8d3c-0767b5324d7e",
	"b8607417-b99c-4445-8a27-09e0bd095cf6");
INSERT INTO O_BATTR
	VALUES ("6e7206fb-103b-4329-8d3c-0767b5324d7e",
	"b8607417-b99c-4445-8a27-09e0bd095cf6");
INSERT INTO O_ATTR
	VALUES ("6e7206fb-103b-4329-8d3c-0767b5324d7e",
	"b8607417-b99c-4445-8a27-09e0bd095cf6",
	"00000000-0000-0000-0000-000000000000",
	'SParm_ID',
	'Full Name: Parameter Identifier',
	'',
	'SParm_ID',
	0,
	"ba5eda7a-def5-0000-0000-000000000005",
	'',
	'');
INSERT INTO O_NBATTR
	VALUES ("175676fa-d1d9-4ca2-8f9a-d2ba1270821f",
	"b8607417-b99c-4445-8a27-09e0bd095cf6");
INSERT INTO O_BATTR
	VALUES ("175676fa-d1d9-4ca2-8f9a-d2ba1270821f",
	"b8607417-b99c-4445-8a27-09e0bd095cf6");
INSERT INTO O_ATTR
	VALUES ("175676fa-d1d9-4ca2-8f9a-d2ba1270821f",
	"b8607417-b99c-4445-8a27-09e0bd095cf6",
	"9139dbaa-1297-43cb-8248-23e99c3c4b07",
	'Name',
	'Full Name: Parameter Name',
	'',
	'Name',
	0,
	"ba5eda7a-def5-0000-0000-000000000004",
	'',
	'');
INSERT INTO O_NBATTR
	VALUES ("f2051aed-a64a-406f-845d-c7dca26e0c71",
	"b8607417-b99c-4445-8a27-09e0bd095cf6");
INSERT INTO O_BATTR
	VALUES ("f2051aed-a64a-406f-845d-c7dca26e0c71",
	"b8607417-b99c-4445-8a27-09e0bd095cf6");
INSERT INTO O_ATTR
	VALUES ("f2051aed-a64a-406f-845d-c7dca26e0c71",
	"b8607417-b99c-4445-8a27-09e0bd095cf6",
	"6964a250-c23e-48d9-b3a4-5947e1af62aa",
	'By_Ref',
	'Full Name: By Reference Indicator
Description: Indicates whether or not this parameter is passed by reference
Data Domain: 0 = passed by value, 1 = passed by reference
enum0: By Value
enum1: By Reference
',
	'',
	'By_Ref',
	0,
	"ba5eda7a-def5-0000-0000-000000000002",
	'',
	'');
INSERT INTO O_NBATTR
	VALUES ("edcf0a6f-4c2b-48cd-a0ed-dcb2c8b6aafb",
	"b8607417-b99c-4445-8a27-09e0bd095cf6");
INSERT INTO O_BATTR
	VALUES ("edcf0a6f-4c2b-48cd-a0ed-dcb2c8b6aafb",
	"b8607417-b99c-4445-8a27-09e0bd095cf6");
INSERT INTO O_ATTR
	VALUES ("edcf0a6f-4c2b-48cd-a0ed-dcb2c8b6aafb",
	"b8607417-b99c-4445-8a27-09e0bd095cf6",
	"f2051aed-a64a-406f-845d-c7dca26e0c71",
	'Dimensions',
	'Full Name: Array Dimensions',
	'',
	'Dimensions',
	0,
	"ba5eda7a-def5-0000-0000-000000000004",
	'',
	'');
INSERT INTO O_REF
	VALUES ("b8607417-b99c-4445-8a27-09e0bd095cf6",
	"b8607417-b99c-4445-8a27-09e0bd095cf6",
	0,
	"6e7206fb-103b-4329-8d3c-0767b5324d7e",
	"dfcd8ae6-a556-4e85-b498-6371534397b1",
	"132a9dc6-37e8-4fee-93b2-0513c4fd8201",
	"37208ee5-8238-4117-8b0c-6046ad0f0b2d",
	"7b489411-3850-4321-9796-c866638a4c25",
	"1a45f636-84cb-4e32-baf3-d0417809a558",
	"00000000-0000-0000-0000-000000000000",
	0,
	'',
	'Function Parameter',
	'SParm_ID',
	'R54.''succeeds''');
INSERT INTO R_RGO_PROXY
	VALUES ("b8607417-b99c-4445-8a27-09e0bd095cf6",
	"dfcd8ae6-a556-4e85-b498-6371534397b1",
	"132a9dc6-37e8-4fee-93b2-0513c4fd8201",
	'../Domain.xtuml');
INSERT INTO O_RTIDA_PROXY
	VALUES ("6e7206fb-103b-4329-8d3c-0767b5324d7e",
	"b8607417-b99c-4445-8a27-09e0bd095cf6",
	0,
	"dfcd8ae6-a556-4e85-b498-6371534397b1",
	"37208ee5-8238-4117-8b0c-6046ad0f0b2d",
	'../Domain.xtuml');
INSERT INTO O_RATTR
	VALUES ("7b489411-3850-4321-9796-c866638a4c25",
	"b8607417-b99c-4445-8a27-09e0bd095cf6",
	"6e7206fb-103b-4329-8d3c-0767b5324d7e",
	"b8607417-b99c-4445-8a27-09e0bd095cf6",
	1,
	'SParm_ID');
INSERT INTO O_ATTR
	VALUES ("7b489411-3850-4321-9796-c866638a4c25",
	"b8607417-b99c-4445-8a27-09e0bd095cf6",
	"edcf0a6f-4c2b-48cd-a0ed-dcb2c8b6aafb",
	'Previous_SParm_ID',
	'',
	'Previous_',
	'SParm_ID',
	1,
	"ba5eda7a-def5-0000-0000-000000000007",
	'',
	'');
INSERT INTO O_NBATTR
	VALUES ("a53a94e5-eafc-4ce2-b9bb-56341d6c47ba",
	"b8607417-b99c-4445-8a27-09e0bd095cf6");
INSERT INTO O_BATTR
	VALUES ("a53a94e5-eafc-4ce2-b9bb-56341d6c47ba",
	"b8607417-b99c-4445-8a27-09e0bd095cf6");
INSERT INTO O_ATTR
	VALUES ("a53a94e5-eafc-4ce2-b9bb-56341d6c47ba",
	"b8607417-b99c-4445-8a27-09e0bd095cf6",
	"7b489411-3850-4321-9796-c866638a4c25",
	'Descrip',
	'Full Name: Description
Description:  A textual description of the function parameter.',
	'',
	'Descrip',
	0,
	"ba5eda7a-def5-0000-0000-000000000004",
	'',
	'');
INSERT INTO O_REF
	VALUES ("b8607417-b99c-4445-8a27-09e0bd095cf6",
	"8e4aa370-0206-4cf0-a81e-edaf0e37466e",
	0,
	"35133802-1b64-4470-b677-760b79f4e5da",
	"ab79a786-cbcd-4863-8382-cfa354d88f75",
	"f796baac-540d-4e65-b99e-f6fae1be53c9",
	"b32a34c3-8f6b-4a84-9bca-b3f9cae13af5",
	"6964a250-c23e-48d9-b3a4-5947e1af62aa",
	"dfb3f775-dc97-4307-8339-43c34718cf82",
	"00000000-0000-0000-0000-000000000000",
	0,
	'',
	'Data Type',
	'DT_ID',
	'R26.''is typed by ''');
INSERT INTO R_RGO_PROXY
	VALUES ("b8607417-b99c-4445-8a27-09e0bd095cf6",
	"ab79a786-cbcd-4863-8382-cfa354d88f75",
	"f796baac-540d-4e65-b99e-f6fae1be53c9",
	'../Domain.xtuml');
INSERT INTO O_RTIDA_PROXY
	VALUES ("35133802-1b64-4470-b677-760b79f4e5da",
	"8e4aa370-0206-4cf0-a81e-edaf0e37466e",
	0,
	"ab79a786-cbcd-4863-8382-cfa354d88f75",
	"b32a34c3-8f6b-4a84-9bca-b3f9cae13af5",
	'../Domain.xtuml');
INSERT INTO O_RATTR
	VALUES ("6964a250-c23e-48d9-b3a4-5947e1af62aa",
	"b8607417-b99c-4445-8a27-09e0bd095cf6",
	"6c0ac341-1d88-4650-b3fe-2c344b920ed1",
	"6af35b2a-8145-4e12-9330-bfc209409bb6",
	1,
	'Element_ID');
INSERT INTO O_BATTR_PROXY
	VALUES ("6c0ac341-1d88-4650-b3fe-2c344b920ed1",
	"6af35b2a-8145-4e12-9330-bfc209409bb6",
	'../../Packageable Element/Packageable Element/Packageable Element.xtuml');
INSERT INTO O_ATTR
	VALUES ("6964a250-c23e-48d9-b3a4-5947e1af62aa",
	"b8607417-b99c-4445-8a27-09e0bd095cf6",
	"175676fa-d1d9-4ca2-8f9a-d2ba1270821f",
	'DT_ID',
	'',
	'',
	'Element_ID',
	2,
	"ba5eda7a-def5-0000-0000-000000000007",
	'',
	'');
INSERT INTO O_REF
	VALUES ("b8607417-b99c-4445-8a27-09e0bd095cf6",
	"c7d596a1-f089-48e7-9716-493f7199737b",
	0,
	"8c3002e5-a920-48af-835c-cd64e901697a",
	"01fb1886-dfb9-4e88-876d-46f8007eb083",
	"7cb078e4-2caa-457f-a702-9a563325c253",
	"df7a6136-3464-42c3-828e-e7cba8635228",
	"9139dbaa-1297-43cb-8248-23e99c3c4b07",
	"ec84fa79-b0a3-428d-a1c8-76bcc6203ef8",
	"00000000-0000-0000-0000-000000000000",
	0,
	'',
	'Function',
	'Sync_ID',
	'R24.''is defined for''');
INSERT INTO R_RGO_PROXY
	VALUES ("b8607417-b99c-4445-8a27-09e0bd095cf6",
	"01fb1886-dfb9-4e88-876d-46f8007eb083",
	"7cb078e4-2caa-457f-a702-9a563325c253",
	'../Domain.xtuml');
INSERT INTO O_RTIDA_PROXY
	VALUES ("8c3002e5-a920-48af-835c-cd64e901697a",
	"c7d596a1-f089-48e7-9716-493f7199737b",
	0,
	"01fb1886-dfb9-4e88-876d-46f8007eb083",
	"df7a6136-3464-42c3-828e-e7cba8635228",
	'../Domain.xtuml');
INSERT INTO O_RATTR
	VALUES ("9139dbaa-1297-43cb-8248-23e99c3c4b07",
	"b8607417-b99c-4445-8a27-09e0bd095cf6",
	"6c0ac341-1d88-4650-b3fe-2c344b920ed1",
	"6af35b2a-8145-4e12-9330-bfc209409bb6",
	1,
	'Element_ID');
INSERT INTO O_ATTR
	VALUES ("9139dbaa-1297-43cb-8248-23e99c3c4b07",
	"b8607417-b99c-4445-8a27-09e0bd095cf6",
	"6e7206fb-103b-4329-8d3c-0767b5324d7e",
	'Sync_ID',
	'',
	'',
	'Sync_ID',
	0,
	"ba5eda7a-def5-0000-0000-000000000007",
	'',
	'');
INSERT INTO O_ID
	VALUES (0,
	"b8607417-b99c-4445-8a27-09e0bd095cf6");
INSERT INTO O_OIDA
	VALUES ("6e7206fb-103b-4329-8d3c-0767b5324d7e",
	"b8607417-b99c-4445-8a27-09e0bd095cf6",
	0,
	'SParm_ID');
INSERT INTO O_ID
	VALUES (1,
	"b8607417-b99c-4445-8a27-09e0bd095cf6");
INSERT INTO O_ID
	VALUES (2,
	"b8607417-b99c-4445-8a27-09e0bd095cf6");
INSERT INTO PE_PE
	VALUES ("b8607417-b99c-4445-8a27-09e0bd095cf6",
	1,
	"b308feec-d790-479d-b13b-24dc13bbb084",
	"00000000-0000-0000-0000-000000000000",
	4);
INSERT INTO EP_PKG_PROXY
	VALUES ("b308feec-d790-479d-b13b-24dc13bbb084",
	"00000000-0000-0000-0000-000000000000",
	"2f3ea6a7-20e9-405c-b68c-7fba041e7daf",
	'Domain',
	'A domain (S_DOM) consists of one or more subsystems (S_SS) that each contain an information model that abstracts a portion of the data for the domain: classes (O_OBJ), associations (R_REL), etc.  Breaking a domain into subsystems allows the complexity of the domain to be more easily managed: 1) subsystems are components and can be checked out individually allowing parallelism in development of the models and 2) breaking up a domain into smaller units is easier to understand.  A subsystem is composed of classes that tend to cluster, i.e., they have few associations that span subsystem boundaries.  Inter-subsystem associations, communications, and accesses are captured in the Subsystem Relationship Model (SRM), Subsystem Communication Model (SCM), and Subsystem Access Model (SAM) respectively.',
	1,
	'../Domain.xtuml');
