-- BP 7.1.6 content: ModelClass syschar: 3 persistence-version: 7.1.6

INSERT INTO O_OBJ
	VALUES ("d65f7cd2-83a8-4960-9f15-aae7e91913f1",
	'Interface Operation Invocation',
	626,
	'ACT_IOP',
	'',
	"00000000-0000-0000-0000-000000000000");
INSERT INTO O_TFR
	VALUES ("fc0e96e7-0377-4d6a-9027-9889a7ed96c8",
	"d65f7cd2-83a8-4960-9f15-aae7e91913f1",
	'dispose',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'// Interface Operation Invocation.dispose()
select one rop related by self->SPR_RO[R657];
if not_empty rop
  unrelate self from rop across R657;
end if;
select one pop related by self->SPR_PO[R680];
if(not_empty pop)
  unrelate self from pop across R680;
end if;
select many parm_set related by self->V_PAR[R679];
for each parm in parm_set 
  unrelate self from parm across R679;
  parm.dispose();
end for;
select one targetVal related by self->V_VAL[R629];
if not_empty targetVal
  unrelate self from targetVal across R629;
  targetVal.dispose();
end if;
delete object instance self;',
	1,
	'',
	"00000000-0000-0000-0000-000000000000");
INSERT INTO O_TFR
	VALUES ("1bb18770-5afb-4a9d-9a3e-e8e862cd5bf3",
	"d65f7cd2-83a8-4960-9f15-aae7e91913f1",
	'execute',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'//Invocation:Interface Operation Invocation.execute()
/* The following conditions apply when executing an interface operation body:
*
*  If there is no component at the other end of this interface, then execute the
*  body of this component''s operation.
*
*  If there is a component yet it is not being executed, then execute the body
*  of this component''s operation.
*
*  If there is a component and it is being verified then execute the body of the
*  operation belonging to the component at the other end.
*
*/

select any localComponentInstance from instances of I_EXE where
                           selected.Execution_Engine_ID == GD::NULL_UNIQUE_ID();
select any localStackFrame from instances of I_STF where
                                selected.Stack_Frame_ID == param.stack_frame_id;
if not_empty localStackFrame
  select one localStack related by localStackFrame->I_STACK[R2929];
  if not_empty localStack
    select one localComponentInstance related by localStack->I_EXE[R2930];
  end if;
end if;

isRequired = false;

select one requiredOp related by self->SPR_RO[R657];
select one providedOp related by self->SPR_PO[R680];
select one interfaceReference related by providedOp->
                                        SPR_PEP[R4503]->C_P[R4501]->C_IR[R4009];
if not_empty requiredOp
  isRequired = true;
  select one interfaceReference related by requiredOp->
                                        SPR_REP[R4502]->C_R[R4500]->C_IR[R4009];
end if;


componentID = GD::NULL_UNIQUE_ID();
select one targetValue related by self->V_VAL[R629];
if not_empty targetValue
  targetRuntimeValueId = targetValue.getRuntimeValue(stack_frame_id:
                                                          param.stack_frame_id);
  select any rv from instances of RV_RVL where
                               selected.RuntimeValue_ID == targetRuntimeValueId;
  select one componentRef related by rv->RV_SMV[R3300]->RV_CRV[R3308];
  if not_empty componentRef
    select one specifiedEngine related by componentRef->I_EXE[R3309];
    component_ID = specifiedEngine.Execution_Engine_ID;
  else
    // TODO Log error the parser shouldn''t let this happen
  end if;
end if;
channelID = I_EXE::resolveTargetChannel(
              specifiedComponentInstance: componentID,
              isRequired: isRequired,
              localComponentInstance:localComponentInstance.Execution_Engine_ID,
              interfaceReference: interfaceReference.Id);
if channelID != GD::NULL_UNIQUE_ID()
  select any channel from instances of I_RCH where
                                               selected.Channel_Id == channelID;
  select one targetEngine related by channel->
                                        I_EXE[R2968.''is interface requirer of''];
  operationName = "";
  if isRequired
    operationName = requiredOp.Name;
    select one targetEngine related by channel->
                                        I_EXE[R2968.''is interface provider to''];
  else
    operationName = providedOp.Name;
  end if;

  invokingFrame = localStackFrame;
  // Grab the stack as well
  select one stack related by localStackFrame->I_STACK[R2929];
  if not_empty targetEngine
    // select the interrupt stack if available
    select one stack related by targetEngine->I_STACK[R2930];
  end if;

  select one invokingBody related by self ->ACT_SMT[R603]->
                                                   ACT_BLK[R602]->ACT_ACT[R601];
  pathForErrorMessage = "Unknown";
  if not_empty invokingBody
    pathForErrorMessage = invokingBody.getPath();
  end if;
  targetActivityID = I_EXE::resolveTargetBody(
                                              isRequired: isRequired,
                                              channel: channelID,
                                              invokingPath: pathForErrorMessage,
                                              messageName: operationName);

  select any body from instances of ACT_ACT where
                                         selected.Action_ID == targetActivityID;
  if(not_empty body)
    // Setup the parameter values within the newly created stack frame
    // on the local stack
    complete = self.setupParameterValues(stack_frame_id:param.stack_frame_id);
    if(complete)
      // All parameters now computed, now set up stack frame for remote call
      // Create new stack frame on target component''s stack
      sf = body.createStackFrame(stack_id:stack.Stack_ID,
                          enqueue: not_empty targetEngine,
             invoking_stack_frame_or_component_id:invokingFrame.Stack_Frame_ID);
      select one ep related by self->SPR_RO[R657]->SPR_REP[R4502]->C_EP[R4500];
      if(empty ep)
        select one ep related by self->SPR_PO[R680]->SPR_PEP[R4503]->
                                                                    C_EP[R4501];
      end if;
      select many args related by self->V_PAR[R679];
      // If we get here, all computation of arguments was completed,
      // prepare for execution of the operation
      for each arg in args
        I_EXE::transferValueToTarget(
                          message: ep.Id,
                          body: body.Action_ID,
                          arg: arg.Value_ID,
                          stack_frame_id: sf,
                          local_stack_frame_id: localStackFrame.Stack_Frame_ID);
      end for;
      if(not_empty targetEngine)
        // associate new stack frame with the invocation stack, to allow
        // wake up of this thread upon execution completion
        select any newStackFrame related by stack->I_ICQE[R2966]->I_STF[R2966]
                                          where (selected.Stack_Frame_ID == sf);
        relate invokingFrame to newStackFrame across R2965.''blocked by'';
        body.startStackFrameForMessage(stackframe_id:
                                                  newStackFrame.Stack_Frame_ID);
      end if;
    end if;
  end if;
else  // specified engine was not resolved
  select one body related by self ->ACT_SMT[R603]->ACT_BLK[R602]->ACT_ACT[R601];
  pathMsg = "<No Path Available - Empty instance>";
    if (not_empty body)
      pathMsg = body.getPath();
    end if;
	USER::logError(msg:"Error sending message, specified component reference " +
              " wiring not found. Message not delivered.",path:pathMsg);
end if;',
	1,
	'',
	"fc0e96e7-0377-4d6a-9027-9889a7ed96c8");
INSERT INTO O_TPARM
	VALUES ("4f1ffc35-76d1-46a1-8b92-9b8854c0ffa6",
	"1bb18770-5afb-4a9d-9a3e-e8e862cd5bf3",
	'stack_frame_id',
	"ba5eda7a-def5-0000-0000-000000000005",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO O_TFR
	VALUES ("30498a54-80d8-48a7-9374-27fe8b04968a",
	"d65f7cd2-83a8-4960-9f15-aae7e91913f1",
	'setupParameterValues',
	'',
	"ba5eda7a-def5-0000-0000-000000000001",
	1,
	'// Invocation:Interface Operation Invocation.setupParameterValues
select one body related by self ->ACT_SMT[R603]->ACT_BLK[R602]->ACT_ACT[R601];
select one ep related by self->SPR_RO[R657]->SPR_REP[R4502]->C_EP[R4500];
if(empty ep)
  select one ep related by self->SPR_PO[R680]->SPR_PEP[R4503]->C_EP[R4501];
end if;
select many args related by self->V_PAR[R679];
// Grab the stack frame(should be the new top stack frame)
select any stack_frame from instances of I_STF where
                                selected.Stack_Frame_ID == param.stack_frame_id;
if empty stack_frame
  //Invalid stack frame ID!
  pathMsg = "<No Path Available - Empty instance>";
    if (not_empty body)
      pathMsg = body.getPath();
    end if;
	USER::logError(msg:"Interface Operation Invocation.setupParameterValues: " +
                                       "Invalid stack frame id used. Halting.",path:pathMsg);
  select any engine from instances of I_EXE;
  engine.stop();
  return false;
end if;
pathForErrorMessage = body.getPath();
for each arg in args
  // Search for a property parameter with the same name as the actual parameter
  select any prop_param related by ep->C_PP[R4006] where
                                                      selected.Name == arg.Name;
  if (empty prop_param)
    USER::logError(msg:"Interface Operation Invocation.setupParameterValues: " +
                  "Did not find a corresponding interface parameter. halting.",
                                                      path:pathForErrorMessage);
    select any engine from instances of I_EXE;
    engine.stop();
    return false;
  else    
    // We have found the matching property parameter and actual parameter
    // Now set the value of the parameter value related to the property
    // parameter to the actual parameter''s value
    if (prop_param.By_Ref == 0)  // by value
      select one act_val related by arg->V_VAL[R800];
      act_val.computeValue(stack_frame_id: param.stack_frame_id);
      select any stack_frame from instances of I_STF where
                                selected.Stack_Frame_ID == param.stack_frame_id;
      select any result related by stack_frame->I_VSF[R2951] where
                                          selected.Value_ID == act_val.Value_ID;
      select one rtVal related by result->RV_RVL[R3305];
      if (empty rtVal)
        // result requires computation.
        return false;
      end if;
    end if;
  end if;
end for;
return true;',
	1,
	'',
	"1bb18770-5afb-4a9d-9a3e-e8e862cd5bf3");
INSERT INTO O_TPARM
	VALUES ("9dce2589-01dc-4be2-9cc4-3f5405b9553c",
	"30498a54-80d8-48a7-9374-27fe8b04968a",
	'stack_frame_id',
	"ba5eda7a-def5-0000-0000-000000000005",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO O_REF
	VALUES ("d65f7cd2-83a8-4960-9f15-aae7e91913f1",
	"4f42b756-0c2e-4a87-b40f-87291682433c",
	0,
	"9bdc49e0-583c-4741-ad6c-fa52d80977a5",
	"df5d83da-30d6-4d47-b2e9-e0558c45efd8",
	"cd0766dd-0b81-4eea-8c3d-75d1af97c2d1",
	"7558839e-e4fb-46e4-97b0-decfec373abb",
	"27283e89-02d1-4394-bc7e-51feed8bf294",
	"96438023-f0f5-4738-99d1-5eebeb278073",
	"00000000-0000-0000-0000-000000000000",
	0,
	'',
	'Statement',
	'Statement_ID',
	'R603');
INSERT INTO R_RGO_PROXY
	VALUES ("d65f7cd2-83a8-4960-9f15-aae7e91913f1",
	"df5d83da-30d6-4d47-b2e9-e0558c45efd8",
	"cd0766dd-0b81-4eea-8c3d-75d1af97c2d1",
	'../../Body/Body.xtuml');
INSERT INTO O_RTIDA_PROXY
	VALUES ("9bdc49e0-583c-4741-ad6c-fa52d80977a5",
	"4f42b756-0c2e-4a87-b40f-87291682433c",
	0,
	"df5d83da-30d6-4d47-b2e9-e0558c45efd8",
	"7558839e-e4fb-46e4-97b0-decfec373abb",
	'../../Body/Body.xtuml');
INSERT INTO O_RATTR
	VALUES ("27283e89-02d1-4394-bc7e-51feed8bf294",
	"d65f7cd2-83a8-4960-9f15-aae7e91913f1",
	"9bdc49e0-583c-4741-ad6c-fa52d80977a5",
	"4f42b756-0c2e-4a87-b40f-87291682433c",
	1,
	'Statement_ID');
INSERT INTO O_BATTR_PROXY
	VALUES ("9bdc49e0-583c-4741-ad6c-fa52d80977a5",
	"4f42b756-0c2e-4a87-b40f-87291682433c",
	'../../Body/Statement/Statement.xtuml');
INSERT INTO O_ATTR
	VALUES ("27283e89-02d1-4394-bc7e-51feed8bf294",
	"d65f7cd2-83a8-4960-9f15-aae7e91913f1",
	"00000000-0000-0000-0000-000000000000",
	'Statement_ID',
	'',
	'',
	'Statement_ID',
	0,
	"ba5eda7a-def5-0000-0000-000000000007",
	'',
	'');
INSERT INTO O_NBATTR
	VALUES ("270e583f-0ab5-4d12-98fc-332a1434cab4",
	"d65f7cd2-83a8-4960-9f15-aae7e91913f1");
INSERT INTO O_BATTR
	VALUES ("270e583f-0ab5-4d12-98fc-332a1434cab4",
	"d65f7cd2-83a8-4960-9f15-aae7e91913f1");
INSERT INTO O_ATTR
	VALUES ("270e583f-0ab5-4d12-98fc-332a1434cab4",
	"d65f7cd2-83a8-4960-9f15-aae7e91913f1",
	"27283e89-02d1-4394-bc7e-51feed8bf294",
	'opNameLineNumber',
	'',
	'',
	'opNameLineNumber',
	0,
	"ba5eda7a-def5-0000-0000-000000000002",
	'',
	'');
INSERT INTO O_NBATTR
	VALUES ("fda10ac7-1be7-4f86-841c-bac77cd7bd3b",
	"d65f7cd2-83a8-4960-9f15-aae7e91913f1");
INSERT INTO O_BATTR
	VALUES ("fda10ac7-1be7-4f86-841c-bac77cd7bd3b",
	"d65f7cd2-83a8-4960-9f15-aae7e91913f1");
INSERT INTO O_ATTR
	VALUES ("fda10ac7-1be7-4f86-841c-bac77cd7bd3b",
	"d65f7cd2-83a8-4960-9f15-aae7e91913f1",
	"270e583f-0ab5-4d12-98fc-332a1434cab4",
	'opNameColumn',
	'',
	'',
	'opNameColumn',
	0,
	"ba5eda7a-def5-0000-0000-000000000002",
	'',
	'');
INSERT INTO O_NBATTR
	VALUES ("47a113a4-b771-45fb-a24c-860768ce8b42",
	"d65f7cd2-83a8-4960-9f15-aae7e91913f1");
INSERT INTO O_BATTR
	VALUES ("47a113a4-b771-45fb-a24c-860768ce8b42",
	"d65f7cd2-83a8-4960-9f15-aae7e91913f1");
INSERT INTO O_ATTR
	VALUES ("47a113a4-b771-45fb-a24c-860768ce8b42",
	"d65f7cd2-83a8-4960-9f15-aae7e91913f1",
	"fda10ac7-1be7-4f86-841c-bac77cd7bd3b",
	'ownerNameLineNumber',
	'',
	'',
	'ownerNameLineNumber',
	0,
	"ba5eda7a-def5-0000-0000-000000000002",
	'',
	'');
INSERT INTO O_NBATTR
	VALUES ("1a13be07-859a-4850-b849-9850dc0a0b84",
	"d65f7cd2-83a8-4960-9f15-aae7e91913f1");
INSERT INTO O_BATTR
	VALUES ("1a13be07-859a-4850-b849-9850dc0a0b84",
	"d65f7cd2-83a8-4960-9f15-aae7e91913f1");
INSERT INTO O_ATTR
	VALUES ("1a13be07-859a-4850-b849-9850dc0a0b84",
	"d65f7cd2-83a8-4960-9f15-aae7e91913f1",
	"47a113a4-b771-45fb-a24c-860768ce8b42",
	'ownerNameColumn',
	'',
	'',
	'ownerNameColumn',
	0,
	"ba5eda7a-def5-0000-0000-000000000002",
	'',
	'');
INSERT INTO O_REF
	VALUES ("d65f7cd2-83a8-4960-9f15-aae7e91913f1",
	"64e84178-15e3-4e76-b949-e1e636411a98",
	0,
	"3401073e-9754-4599-961c-fe7c0a8da309",
	"98bcc704-bb91-4525-a23d-5db2a33b0446",
	"b16c6063-9e2e-4a3b-bb47-8e101731b38a",
	"2b27a77c-832a-4b7d-8ca4-6daddee7c631",
	"f5148d36-6e86-4947-bd6a-120e3b21be8f",
	"dcf392b6-465a-4966-b9f7-d307991c00f0",
	"00000000-0000-0000-0000-000000000000",
	0,
	'',
	'Provided Operation',
	'Id',
	'R680.''is invocation of''');
INSERT INTO R_RGO_PROXY
	VALUES ("d65f7cd2-83a8-4960-9f15-aae7e91913f1",
	"98bcc704-bb91-4525-a23d-5db2a33b0446",
	"b16c6063-9e2e-4a3b-bb47-8e101731b38a",
	'../Invocation.xtuml');
INSERT INTO O_RTIDA_PROXY
	VALUES ("3401073e-9754-4599-961c-fe7c0a8da309",
	"64e84178-15e3-4e76-b949-e1e636411a98",
	0,
	"98bcc704-bb91-4525-a23d-5db2a33b0446",
	"2b27a77c-832a-4b7d-8ca4-6daddee7c631",
	'../Invocation.xtuml');
INSERT INTO O_RATTR
	VALUES ("f5148d36-6e86-4947-bd6a-120e3b21be8f",
	"d65f7cd2-83a8-4960-9f15-aae7e91913f1",
	"17cc65db-d9bd-4966-9d81-e4630f998a59",
	"a9a14c8a-d125-41d5-a1c3-51aefe127031",
	1,
	'Id');
INSERT INTO O_BATTR_PROXY
	VALUES ("17cc65db-d9bd-4966-9d81-e4630f998a59",
	"a9a14c8a-d125-41d5-a1c3-51aefe127031",
	'../../Component/Signal Provisions and Requirements/Provided Executable Property/Provided Executable Property.xtuml');
INSERT INTO O_ATTR
	VALUES ("f5148d36-6e86-4947-bd6a-120e3b21be8f",
	"d65f7cd2-83a8-4960-9f15-aae7e91913f1",
	"1a13be07-859a-4850-b849-9850dc0a0b84",
	'ProvidedOp_Id',
	'',
	'ProvidedOp_',
	'Id',
	1,
	"ba5eda7a-def5-0000-0000-000000000007",
	'',
	'');
INSERT INTO O_REF
	VALUES ("d65f7cd2-83a8-4960-9f15-aae7e91913f1",
	"ef196ab3-80d2-4f1d-901e-0dc72dc71b09",
	0,
	"25daff4b-dcd8-44ad-ac45-bfc0f43b91f1",
	"dee50056-fcce-4d24-86ea-ddd0b360f0b7",
	"e1b03325-9bdf-4802-8268-3645a7bd9e95",
	"045417c9-b435-4c6a-8490-55d5a07cce86",
	"18a7afbd-70dd-4bf7-bab7-3869bdac1fa8",
	"7e62fdcc-6c84-4900-993d-ce602454d37c",
	"00000000-0000-0000-0000-000000000000",
	0,
	'',
	'Required Operation',
	'Id',
	'R657.''is invocation of''');
INSERT INTO R_RGO_PROXY
	VALUES ("d65f7cd2-83a8-4960-9f15-aae7e91913f1",
	"dee50056-fcce-4d24-86ea-ddd0b360f0b7",
	"e1b03325-9bdf-4802-8268-3645a7bd9e95",
	'../Invocation.xtuml');
INSERT INTO O_RTIDA_PROXY
	VALUES ("25daff4b-dcd8-44ad-ac45-bfc0f43b91f1",
	"ef196ab3-80d2-4f1d-901e-0dc72dc71b09",
	0,
	"dee50056-fcce-4d24-86ea-ddd0b360f0b7",
	"045417c9-b435-4c6a-8490-55d5a07cce86",
	'../Invocation.xtuml');
INSERT INTO O_RATTR
	VALUES ("18a7afbd-70dd-4bf7-bab7-3869bdac1fa8",
	"d65f7cd2-83a8-4960-9f15-aae7e91913f1",
	"ebd14632-fee4-4368-8f7b-a06b91d25922",
	"a658788b-fa78-452e-99f0-44c7c426f4b0",
	1,
	'Id');
INSERT INTO O_BATTR_PROXY
	VALUES ("ebd14632-fee4-4368-8f7b-a06b91d25922",
	"a658788b-fa78-452e-99f0-44c7c426f4b0",
	'../../Component/Signal Provisions and Requirements/Required Executable Property/Required Executable Property.xtuml');
INSERT INTO O_ATTR
	VALUES ("18a7afbd-70dd-4bf7-bab7-3869bdac1fa8",
	"d65f7cd2-83a8-4960-9f15-aae7e91913f1",
	"f5148d36-6e86-4947-bd6a-120e3b21be8f",
	'RequiredOp_Id',
	'',
	'RequiredOp_',
	'Id',
	1,
	"ba5eda7a-def5-0000-0000-000000000007",
	'',
	'');
INSERT INTO O_REF
	VALUES ("d65f7cd2-83a8-4960-9f15-aae7e91913f1",
	"43ea4f47-4fe8-4167-8153-9e199477d0fd",
	0,
	"6e185a42-0dc6-4b9d-9d4b-38cb7c8aa772",
	"e63147b1-1b8d-46bc-96cc-a863de132093",
	"814f5a67-aef7-4127-8736-a3b6df9da7d0",
	"445e05fa-e545-4a62-b5d6-bd8494694a59",
	"52eefe09-a4fe-4d2c-ad9d-f47c0e9688ba",
	"50c738e7-2be9-4af5-ac52-6c6bd5f6709f",
	"00000000-0000-0000-0000-000000000000",
	0,
	'',
	'Value',
	'Value_ID',
	'R629.''has target''');
INSERT INTO R_RGO_PROXY
	VALUES ("d65f7cd2-83a8-4960-9f15-aae7e91913f1",
	"e63147b1-1b8d-46bc-96cc-a863de132093",
	"814f5a67-aef7-4127-8736-a3b6df9da7d0",
	'../Invocation.xtuml');
INSERT INTO O_RTIDA_PROXY
	VALUES ("6e185a42-0dc6-4b9d-9d4b-38cb7c8aa772",
	"43ea4f47-4fe8-4167-8153-9e199477d0fd",
	0,
	"e63147b1-1b8d-46bc-96cc-a863de132093",
	"445e05fa-e545-4a62-b5d6-bd8494694a59",
	'../Invocation.xtuml');
INSERT INTO O_RATTR
	VALUES ("52eefe09-a4fe-4d2c-ad9d-f47c0e9688ba",
	"d65f7cd2-83a8-4960-9f15-aae7e91913f1",
	"6e185a42-0dc6-4b9d-9d4b-38cb7c8aa772",
	"43ea4f47-4fe8-4167-8153-9e199477d0fd",
	1,
	'Value_ID');
INSERT INTO O_BATTR_PROXY
	VALUES ("6e185a42-0dc6-4b9d-9d4b-38cb7c8aa772",
	"43ea4f47-4fe8-4167-8153-9e199477d0fd",
	'../../Value/Value/Value.xtuml');
INSERT INTO O_ATTR
	VALUES ("52eefe09-a4fe-4d2c-ad9d-f47c0e9688ba",
	"d65f7cd2-83a8-4960-9f15-aae7e91913f1",
	"18a7afbd-70dd-4bf7-bab7-3869bdac1fa8",
	'Value_ID',
	'',
	'',
	'Value_ID',
	0,
	"ba5eda7a-def5-0000-0000-000000000007",
	'',
	'');
INSERT INTO O_ID
	VALUES (0,
	"d65f7cd2-83a8-4960-9f15-aae7e91913f1");
INSERT INTO O_OIDA
	VALUES ("27283e89-02d1-4394-bc7e-51feed8bf294",
	"d65f7cd2-83a8-4960-9f15-aae7e91913f1",
	0,
	'Statement_ID');
INSERT INTO O_ID
	VALUES (1,
	"d65f7cd2-83a8-4960-9f15-aae7e91913f1");
INSERT INTO O_ID
	VALUES (2,
	"d65f7cd2-83a8-4960-9f15-aae7e91913f1");
INSERT INTO PE_PE
	VALUES ("d65f7cd2-83a8-4960-9f15-aae7e91913f1",
	1,
	"f32f7bad-c1a4-43a8-8652-05993f749e71",
	"00000000-0000-0000-0000-000000000000",
	4);
INSERT INTO EP_PKG_PROXY
	VALUES ("f32f7bad-c1a4-43a8-8652-05993f749e71",
	"00000000-0000-0000-0000-000000000000",
	"2f3ea6a7-20e9-405c-b68c-7fba041e7daf",
	'Invocation',
	'This subsystem captures the concepts of call and return. It covers
calls to operations, bridges and functions and includes the return
statement.
Notify_Changes:false
Persistent:false
// This is used by schema_gen to ignore this subsystem (for publication)
TRANSLATE_FOR_EXTERNAL_USE:FALSE
',
	600,
	'../Invocation.xtuml');
