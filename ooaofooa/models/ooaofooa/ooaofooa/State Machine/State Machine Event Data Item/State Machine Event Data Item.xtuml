-- BP 7.1.6 content: ModelClass syschar: 3 persistence-version: 7.1.6

INSERT INTO O_OBJ
	VALUES ("39ebe204-8316-467e-96c0-50181aec48be",
	'State Machine Event Data Item',
	517,
	'SM_EVTDI',
	'Each state machine (SM_SM) has a pool of event data items that can be used as supplemental data (SM_SUPDT) for the events (SM_EVT) of the state machine.  When an event data item is used as supplemental data for an event an instance of SM_SDI is created.',
	"00000000-0000-0000-0000-000000000000");
INSERT INTO O_TFR
	VALUES ("b9ecf26b-a9c0-428f-8fd4-140adf8e4c57",
	"39ebe204-8316-467e-96c0-50181aec48be",
	'dispose',
	'Dispose this State Machine Event Data Item',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'// State Machine Subsystem
select one sm related by self->SM_SM[R516];
unrelate self from sm across R516;
select one dt related by self->S_DT[R524];
unrelate self from dt across R524;
select many sdis related by self->SM_SDI[R522];
for each sdi in sdis
  sdi.dispose();
end for;
//
select one event related by self->SM_EVT[R532];
if not_empty event
  unrelate self from event across R532;
end if;
//
select one successor related by self->SM_EVTDI[R533.''precedes''];
select one predecessor related by self->SM_EVTDI[R533.''succeeds''];
if (not empty successor)
  unrelate self from successor across R533.''precedes'';
end if;
if (not empty predecessor)
  unrelate self from predecessor across R533.''succeeds'';
end if;
if (not_empty successor and not_empty predecessor)
  relate successor to predecessor across R533.''succeeds'';
end if;
//
// Value Subsystem
select many evdiValRefs related by self->V_EPR[R846];
for each evdiValRef in evdiValRefs
  evdiValRef.dispose();
end for;
//
// Instance Subsystem
select many divs related by self->I_DIV[R2934];
for each div in divs
  unrelate self from div across R2934;
  div.dispose();
end for;
// dispose each message argument
// associated with this parm
select many args related by self->MSG_EA[R1017];
for each arg in args
  arg.dispose();
end for;
select many dims related by self->S_DIM[R531];
for each dim in dims
  unrelate self from dim across R531;
  delete object instance dim;
end for;
//
// Finally, delete self;
delete object instance self;',
	1,
	'',
	"9dfff4f6-a9cf-4a16-b20f-61dfe477aa7c");
INSERT INTO O_TFR
	VALUES ("159c1ed1-9683-4e5d-b3dd-bed9dcc139e9",
	"39ebe204-8316-467e-96c0-50181aec48be",
	'initialize',
	'Initialize this SM_EVTDI.  Set the name and data type to default values.',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'select one stateMachine related by self->SM_SM[R516];
select one evt related by self->SM_EVT[R532];
evt.addDataItemToOrder(id:self.SMedi_ID);
select one packageableElem related by self->SM_SM[R516]->SM_ASM[R517]->O_OBJ[R519]->PE_PE[R8001]; 
if (empty packageableElem)
  select one packageableElem related by self->SM_SM[R516]->SM_ISM[R517]->O_OBJ[R518]->PE_PE[R8001];
end if;
select one package related by packageableElem->EP_PKG[R8000];
select one component related by packageableElem->C_C[R8003];

  id = packageableElem.resolveDataTypeRelativeToSelf(default_name:"integer",
                                                          expected_name:"integer");                                                          
  select any dt related by package->PE_VIS[R8002]->
                       PE_PE[R8002]->S_DT[R8001] where selected.DT_ID == id;
  if (empty dt)
    select any dt related by component->PE_CVS[R8004]->
                     PE_PE[R8004]->S_DT[R8001] where selected.DT_ID == id;
  end if;	
  relate self to dt across R524;
  name = ::getUniqueInitialName( 
      instance: self.convertToInstance(), 
      candidateName: "Unnamed Data Item");
       success = ::getNewElementName(name:name,instance: self.convertToInstance(),validateName:true);    
         if ( success!="") 
           self.Name=success;
         else 
           self.dispose();
        end if;  
',
	1,
	'',
	"3b39c116-5582-4068-89b3-5abf6a25642d");
INSERT INTO O_TFR
	VALUES ("804432a0-2c5d-4d00-8734-50781b882fda",
	"39ebe204-8316-467e-96c0-50181aec48be",
	'isAllowedType',
	'',
	"ba5eda7a-def5-0000-0000-000000000001",
	1,
	'// if this element is at the system level check the
// system level data types, otherwise check the 
// domain
// State Machine Event Data Item.isAllowedType()
select one machine related by self->SM_SM[R516];
select one clazz related by machine->SM_ISM[R517]->O_OBJ[R518];
if(empty clazz)
  select one clazz related by machine->SM_ASM[R517]->O_OBJ[R519];
end if;
select one packageableElem related by clazz->PE_PE[R8001];

return packageableElem.isAllowedType(isReturnType:false,
                                                       typeName:param.typeName);
',
	1,
	'',
	"159c1ed1-9683-4e5d-b3dd-bed9dcc139e9");
INSERT INTO O_TPARM
	VALUES ("d5db25d1-0ccc-4146-9e86-e7332c89a6e0",
	"804432a0-2c5d-4d00-8734-50781b882fda",
	'typeName',
	"ba5eda7a-def5-0000-0000-000000000004",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO O_TFR
	VALUES ("9dfff4f6-a9cf-4a16-b20f-61dfe477aa7c",
	"39ebe204-8316-467e-96c0-50181aec48be",
	'convertToInstance',
	'A utility operation to cast an instance of this type to the
instance datatype.

Translate: native',
	"a5d8b590-a627-4af4-afdf-152c889769b6",
	1,
	'// just return this instance as an Object
return this;',
	0,
	'',
	"e466279a-9555-47e9-aa3d-4641e127c163");
INSERT INTO S_DT_PROXY
	VALUES ("a5d8b590-a627-4af4-afdf-152c889769b6",
	"00000000-0000-0000-0000-000000000000",
	'instance',
	'',
	'',
	'../../Datatypes/Datatypes.xtuml');
INSERT INTO O_TFR
	VALUES ("8b269b14-8ee1-4595-8c54-6f7f5fe1a382",
	"39ebe204-8316-467e-96c0-50181aec48be",
	'resolveDatatype',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'select one dtProxy related by self->S_DT[R524];
if(not_empty dtProxy and not Util::isProxy(element:self.convertToInstance()))
  name = dtProxy.Name;
  unrelate dtProxy from self across R524;
  
  select one packageableElem related by self->SM_SM[R516]->SM_ASM[R517]->O_OBJ[R519]->PE_PE[R8001]; 
  if (empty packageableElem)
    select one packageableElem related by self->SM_SM[R516]->SM_ISM[R517]->O_OBJ[R518]->PE_PE[R8001];
  end if;
  select one package related by packageableElem->EP_PKG[R8000];
  select one component related by packageableElem->C_C[R8003];

    id = packageableElem.resolveDataTypeRelativeToSelf(default_name:"integer",
                                                            expected_name:name);                                                          
    select any resolvedDt related by package->PE_VIS[R8002]->
                         PE_PE[R8002]->S_DT[R8001] where selected.DT_ID == id;
    if (empty resolvedDt)
      select any resolvedDt related by component->PE_CVS[R8004]->
                       PE_PE[R8004]->S_DT[R8001] where selected.DT_ID == id;
    end if;	
    if not_empty resolvedDt
      relate resolvedDt to self across R524;
    end if;
end if;',
	1,
	'',
	"c95f1dec-3e60-4ae9-bf74-120b63d06c38");
INSERT INTO O_TFR
	VALUES ("e95061c1-2b6c-4d70-85b9-4e28b0aded22",
	"39ebe204-8316-467e-96c0-50181aec48be",
	'resolveExistingDataItem',
	'',
	"ba5eda7a-def5-0000-0000-000000000005",
	1,
	'select any sm from instances of SM_SM where (selected.SM_ID == param.id);
if(not_empty sm)
  foundDI = false;
  select any resolvedDI from instances of SM_EVTDI where (selected.SMedi_ID == GD::NULL_UNIQUE_ID());
  // resolve a data item by name and type
  select many existingDIs related by sm->SM_EVTDI[R516] where (selected.Name == self.Name);
  for each existingDI in existingDIs
    select one dt related by self->S_DT[R524];
    select one otherDt related by existingDI->S_DT[R524];
    if(dt.Name == otherDt.Name)
      foundDI = true;
      resolvedDI = existingDI;
      break;
    end if;
  end for;
  if(foundDI)
    return resolvedDI.SMedi_ID;
  end if;
end if;
return GD::NULL_UNIQUE_ID();',
	1,
	'',
	"8b269b14-8ee1-4595-8c54-6f7f5fe1a382");
INSERT INTO O_TPARM
	VALUES ("37b2ad39-9dc5-4f1d-a9cb-07058cb66e35",
	"e95061c1-2b6c-4d70-85b9-4e28b0aded22",
	'id',
	"ba5eda7a-def5-0000-0000-000000000005",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO O_TFR
	VALUES ("c95f1dec-3e60-4ae9-bf74-120b63d06c38",
	"39ebe204-8316-467e-96c0-50181aec48be",
	'resizeDimensions',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'// If the number of dimensions has increased then add dimensions
while (param.numDimensions > self.getDimensionsCnt())
  create object instance dim of S_DIM;
  dim.dimensionCount = self.getDimensionsCnt();
  relate dim to self across R531;
end while;

// If the number of dimensions has decreased then remove dimensions
while (param.numDimensions < self.getDimensionsCnt())
  select any dim related by self->S_DIM[R531] where (selected.dimensionCount == (self.getDimensionsCnt()-1));
  unrelate dim from self across R531;
  delete object instance dim;
end while;

// Update the specific dimension that was passed-in if its elementCount has 
// changed.
if (param.numDimensions > 0) 
  select any dim related by self->S_DIM[R531] where (selected.dimensionCount == param.dimension);
  if (dim.elementCount != param.elementCount)
    dim.elementCount = param.elementCount;
  end if;
end if;
',
	1,
	'',
	"1cd2fe2b-4f11-434a-9acc-dbccb7e99d2f");
INSERT INTO O_TPARM
	VALUES ("ce3cd0c1-b90f-4084-9bf4-12d695748db3",
	"c95f1dec-3e60-4ae9-bf74-120b63d06c38",
	'elementCount',
	"ba5eda7a-def5-0000-0000-000000000002",
	0,
	'',
	"eb84e114-96b5-49b1-9a97-25f644aa3f88",
	'');
INSERT INTO O_TPARM
	VALUES ("eb84e114-96b5-49b1-9a97-25f644aa3f88",
	"c95f1dec-3e60-4ae9-bf74-120b63d06c38",
	'dimension',
	"ba5eda7a-def5-0000-0000-000000000002",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO O_TPARM
	VALUES ("c31df336-b39f-4ac2-bf0a-0201fbae2211",
	"c95f1dec-3e60-4ae9-bf74-120b63d06c38",
	'numDimensions',
	"ba5eda7a-def5-0000-0000-000000000002",
	0,
	'',
	"ce3cd0c1-b90f-4084-9bf4-12d695748db3",
	'');
INSERT INTO O_TFR
	VALUES ("3b39c116-5582-4068-89b3-5abf6a25642d",
	"39ebe204-8316-467e-96c0-50181aec48be",
	'getDimensionsCnt',
	'',
	"ba5eda7a-def5-0000-0000-000000000002",
	1,
	'select many dims related by self->S_DIM[R531];
dimensions = cardinality dims;
return dimensions;',
	1,
	'',
	"b9ecf26b-a9c0-428f-8fd4-140adf8e4c57");
INSERT INTO O_TFR
	VALUES ("1cd2fe2b-4f11-434a-9acc-dbccb7e99d2f",
	"39ebe204-8316-467e-96c0-50181aec48be",
	'moveUp',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'::changeNotificationEnablement(enabled:false);
select one prev_attr related by self->SM_EVTDI[R533.''succeeds''];
select one prev_prev_attr related by prev_attr->SM_EVTDI[R533.''succeeds''];
select one next_attr related by self->SM_EVTDI[R533.''precedes''];

if ( not_empty prev_prev_attr )
  unrelate prev_attr from prev_prev_attr across R533.''succeeds'';
end if;
if ( not_empty next_attr )
  unrelate next_attr from self across R533.''succeeds'';
end if;
unrelate self from prev_attr across R533.''succeeds'';

if ( not_empty prev_prev_attr )
  relate self to prev_prev_attr across R533.''succeeds'';
end if;
// want to enable listeners at the last possible moment
if ( empty next_attr )
  ::changeNotificationEnablement(enabled:true);
end if;
relate prev_attr to self across R533.''succeeds'';
if ( not_empty next_attr )
  ::changeNotificationEnablement(enabled:true);
  relate next_attr to prev_attr across R533.''succeeds'';
end if;
',
	1,
	'',
	"08b937ba-4cee-4a96-a93e-665ec6ea1d07");
INSERT INTO O_TFR
	VALUES ("08b937ba-4cee-4a96-a93e-665ec6ea1d07",
	"39ebe204-8316-467e-96c0-50181aec48be",
	'moveDown',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'::changeNotificationEnablement(enabled:false);
select one next_attr related by self->SM_EVTDI[R533.''precedes''];
select one prev_attr related by self->SM_EVTDI[R533.''succeeds''];
select one next_next_attr related by next_attr->SM_EVTDI[R533.''precedes''];

if ( not_empty next_next_attr )
  unrelate next_next_attr from next_attr across R533.''succeeds'';
end if;
if ( not_empty prev_attr )
  unrelate self from prev_attr across R533.''succeeds'';
end if;
unrelate next_attr from self across R533.''succeeds'';

if ( not_empty prev_attr )
  relate next_attr to prev_attr across R533.''succeeds'';
end if;
   
// want to enable listeners at the last possible moment
if ( empty next_next_attr )
  ::changeNotificationEnablement(enabled:true);
end if;
relate self to next_attr across R533.''succeeds'';
if ( not_empty next_next_attr )
  ::changeNotificationEnablement(enabled:true);
  relate next_next_attr to self across R533.''succeeds'';
end if;
',
	1,
	'',
	"bb0c9598-8067-40c2-b0aa-46b612ae263b");
INSERT INTO O_TFR
	VALUES ("c38f1208-6b06-4171-8fcf-cbcd0c3ca06c",
	"39ebe204-8316-467e-96c0-50181aec48be",
	'actionFilter',
	'',
	"ba5eda7a-def5-0000-0000-000000000001",
	1,
	'if (param.name == "can" )
  if ( param.value == "move up" )
    select one prev_attr related by self->SM_EVTDI[R533.''succeeds''];
    return not_empty prev_attr;
  elif ( param.value == "move down" )
    select one next_attr related by self->SM_EVTDI[R533.''precedes''];
    return not_empty next_attr;
  end if;
end if;
return false;
',
	1,
	'',
	"00000000-0000-0000-0000-000000000000");
INSERT INTO O_TPARM
	VALUES ("f1c36e7e-c84d-4a8a-8013-dfd0b3d118f7",
	"c38f1208-6b06-4171-8fcf-cbcd0c3ca06c",
	'name',
	"ba5eda7a-def5-0000-0000-000000000004",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO O_TPARM
	VALUES ("f7e61e10-7b24-483e-8d3c-f84e0567c5c4",
	"c38f1208-6b06-4171-8fcf-cbcd0c3ca06c",
	'value',
	"ba5eda7a-def5-0000-0000-000000000004",
	0,
	'',
	"f1c36e7e-c84d-4a8a-8013-dfd0b3d118f7",
	'');
INSERT INTO O_TFR
	VALUES ("de977514-3105-4674-8a82-4f4d7190acd3",
	"39ebe204-8316-467e-96c0-50181aec48be",
	'canReferToDataType',
	'',
	"ba5eda7a-def5-0000-0000-000000000001",
	1,
	'// select the dt
select one dt related by self->S_DT[R524];
if(not_empty dt)
  select one packageableElem related by self->SM_SM[R516]->SM_ASM[R517]->O_OBJ[R519]->PE_PE[R8001];
  if (empty packageableElem)
    select one packageableElem related by self->SM_SM[R516]->SM_ISM[R517]->O_OBJ[R518]->PE_PE[R8001];
  end if;

    return packageableElem.canReferToDataType(dtID:dt.DT_ID, dtName: dt.Name);
end if;
return false;
',
	1,
	'',
	"c38f1208-6b06-4171-8fcf-cbcd0c3ca06c");
INSERT INTO O_TFR
	VALUES ("bb0c9598-8067-40c2-b0aa-46b612ae263b",
	"39ebe204-8316-467e-96c0-50181aec48be",
	'isReferringToDefaultDataType',
	'',
	"ba5eda7a-def5-0000-0000-000000000001",
	1,
	'select one dt related by self->S_DT[R524];
elementType = Util::getSimpleClassName(element:self.convertToInstance());
if(dt.Name == S_DT::getDefaultDataTypeName(elementType:elementType))
  return true;
end if;
return false;
',
	1,
	'',
	"804432a0-2c5d-4d00-8734-50781b882fda");
INSERT INTO O_TFR
	VALUES ("e466279a-9555-47e9-aa3d-4641e127c163",
	"39ebe204-8316-467e-96c0-50181aec48be",
	'canUseDataType',
	'',
	"ba5eda7a-def5-0000-0000-000000000001",
	1,
	'// State Machine Event Data Item.canUseDataType()
select one machine related by self->SM_SM[R516];
select one clazz related by machine->SM_ISM[R517]->O_OBJ[R518];
if(empty clazz)
  select one clazz related by machine->SM_ASM[R517]->O_OBJ[R519];
end if;
select one packageableElem related by clazz->PE_PE[R8001];
select one package related by packageableElem->EP_PKG[R8000];
select one component related by packageableElem->C_C[R8003];

  // Find the previously created visibility list
  select any resultSet related by package->PE_SRS[R8005] where
        selected.Name == "" and selected.Type == ElementTypeConstants::DATATYPE;
  select any dt related by resultSet->PE_VIS[R8006]->
                     PE_PE[R8002]->S_DT[R8001] where selected.DT_ID == param.id;
  if not_empty component
    // Find the previously created visibility list
    select any compResultSet related by component->PE_CRS[R8007] where
        selected.Name == "" and selected.Type == ElementTypeConstants::DATATYPE;
    select any dt related by compResultSet->PE_CVS[R8008]->
                     PE_PE[R8004]->S_DT[R8001] where selected.DT_ID == param.id;
  end if;
  if(not_empty dt)
    if(self.isAllowedType(typeName:dt.Name))
      return true;
    end if;
  end if;
  return false;
',
	1,
	'',
	"de977514-3105-4674-8a82-4f4d7190acd3");
INSERT INTO O_TPARM
	VALUES ("f5ec0a4d-4dc2-4030-9ff6-11ab2650fd68",
	"e466279a-9555-47e9-aa3d-4641e127c163",
	'id',
	"ba5eda7a-def5-0000-0000-000000000005",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO O_TFR
	VALUES ("3c7d08bf-32cb-47ed-b890-4cba726e952d",
	"39ebe204-8316-467e-96c0-50181aec48be",
	'checkIntegrity',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'/**
 *  Create an integrity issue if there are any other parameters in the same
 *  event with a matching name
 */
select one event related by self->SM_EVT[R532];
select one machine related by event->SM_SM[R502];
select one clazz related by machine->SM_ISM[R517]->O_OBJ[R518];
if(empty clazz)
  select one clazz related by machine->SM_ASM[R517]->O_OBJ[R519];
end if;
select one package related by clazz->PE_PE[R8001]->EP_PKG[R8000];
select one system related by package->S_SYS[R1405];
sys_id = GD::NULL_UNIQUE_ID();
if(not_empty system)
  sys_id = system.Sys_ID;
end if;
select many parameters related by event->SM_EVTDI[R532];
for each parameter in parameters
  if(parameter != self and parameter.Name == self.Name)
    MI_IM::createIssue(sys_id:sys_id, description:
         "Found another parameter under the same event with a " +
                                                          "matching name.",
                                      severity:Severity::Error, name:self.Name,
                                     path:event.getPath() + "::" + self.Name,
                    id:self.SMedi_ID, element:self.convertToInstance());
  end if;
end for;',
	1,
	'',
	"e95061c1-2b6c-4d70-85b9-4e28b0aded22");
INSERT INTO O_NBATTR
	VALUES ("c67f8081-2c26-4e5a-80e4-53bef4674193",
	"39ebe204-8316-467e-96c0-50181aec48be");
INSERT INTO O_BATTR
	VALUES ("c67f8081-2c26-4e5a-80e4-53bef4674193",
	"39ebe204-8316-467e-96c0-50181aec48be");
INSERT INTO O_ATTR
	VALUES ("c67f8081-2c26-4e5a-80e4-53bef4674193",
	"39ebe204-8316-467e-96c0-50181aec48be",
	"00000000-0000-0000-0000-000000000000",
	'SMedi_ID',
	'Full Name: Event Data Item Identifier',
	'',
	'SMedi_ID',
	0,
	"ba5eda7a-def5-0000-0000-000000000005",
	'',
	'');
INSERT INTO O_REF
	VALUES ("39ebe204-8316-467e-96c0-50181aec48be",
	"a1150e32-8c3e-4e21-8295-75b0c795b02d",
	0,
	"918c8926-3597-4f97-bdc4-a65cf9de1666",
	"009f11cd-1fbc-427f-a128-f58f92be8e7e",
	"10561191-8f36-4bba-b77a-6d0c4a92807b",
	"d403487f-81ae-45d7-b579-bbbaff58c944",
	"a3321e8d-2a6e-4906-be02-82ecc0256913",
	"9a90677c-96f5-4c84-af8e-01a49d3312a7",
	"00000000-0000-0000-0000-000000000000",
	0,
	'',
	'State Machine',
	'SM_ID',
	'R516.''is carried on events into''');
INSERT INTO R_RGO_PROXY
	VALUES ("39ebe204-8316-467e-96c0-50181aec48be",
	"009f11cd-1fbc-427f-a128-f58f92be8e7e",
	"10561191-8f36-4bba-b77a-6d0c4a92807b",
	'../State Machine.xtuml');
INSERT INTO O_RTIDA_PROXY
	VALUES ("918c8926-3597-4f97-bdc4-a65cf9de1666",
	"a1150e32-8c3e-4e21-8295-75b0c795b02d",
	0,
	"009f11cd-1fbc-427f-a128-f58f92be8e7e",
	"d403487f-81ae-45d7-b579-bbbaff58c944",
	'../State Machine.xtuml');
INSERT INTO O_REF
	VALUES ("39ebe204-8316-467e-96c0-50181aec48be",
	"39ebe204-8316-467e-96c0-50181aec48be",
	0,
	"a3321e8d-2a6e-4906-be02-82ecc0256913",
	"8babb741-c0f3-477f-bc85-09123224e3ea",
	"17f9ace0-3661-4ebc-b371-26a385623793",
	"b284efbc-1bec-4767-9cb6-391480e3819f",
	"a3321e8d-2a6e-4906-be02-82ecc0256913",
	"aee10819-5f9d-4e01-a7f8-a5ba11497714",
	"9a90677c-96f5-4c84-af8e-01a49d3312a7",
	0,
	'',
	'State Machine Event Data Item',
	'SM_ID',
	'R533.''succeeds''');
INSERT INTO R_RGO_PROXY
	VALUES ("39ebe204-8316-467e-96c0-50181aec48be",
	"8babb741-c0f3-477f-bc85-09123224e3ea",
	"17f9ace0-3661-4ebc-b371-26a385623793",
	'../State Machine.xtuml');
INSERT INTO O_RTIDA_PROXY
	VALUES ("a3321e8d-2a6e-4906-be02-82ecc0256913",
	"39ebe204-8316-467e-96c0-50181aec48be",
	0,
	"8babb741-c0f3-477f-bc85-09123224e3ea",
	"b284efbc-1bec-4767-9cb6-391480e3819f",
	'../State Machine.xtuml');
INSERT INTO O_RATTR
	VALUES ("a3321e8d-2a6e-4906-be02-82ecc0256913",
	"39ebe204-8316-467e-96c0-50181aec48be",
	"918c8926-3597-4f97-bdc4-a65cf9de1666",
	"a1150e32-8c3e-4e21-8295-75b0c795b02d",
	1,
	'SM_ID');
INSERT INTO O_BATTR_PROXY
	VALUES ("918c8926-3597-4f97-bdc4-a65cf9de1666",
	"a1150e32-8c3e-4e21-8295-75b0c795b02d",
	'../State Machine/State Machine.xtuml');
INSERT INTO O_ATTR
	VALUES ("a3321e8d-2a6e-4906-be02-82ecc0256913",
	"39ebe204-8316-467e-96c0-50181aec48be",
	"c67f8081-2c26-4e5a-80e4-53bef4674193",
	'SM_ID',
	'',
	'',
	'SM_ID',
	0,
	"ba5eda7a-def5-0000-0000-000000000007",
	'',
	'');
INSERT INTO O_NBATTR
	VALUES ("90683924-8bb0-4b06-b7e2-21cb264889bc",
	"39ebe204-8316-467e-96c0-50181aec48be");
INSERT INTO O_BATTR
	VALUES ("90683924-8bb0-4b06-b7e2-21cb264889bc",
	"39ebe204-8316-467e-96c0-50181aec48be");
INSERT INTO O_ATTR
	VALUES ("90683924-8bb0-4b06-b7e2-21cb264889bc",
	"39ebe204-8316-467e-96c0-50181aec48be",
	"a3321e8d-2a6e-4906-be02-82ecc0256913",
	'Name',
	'Full Name: Event Data Item Name',
	'',
	'Name',
	0,
	"ba5eda7a-def5-0000-0000-000000000004",
	'',
	'');
INSERT INTO O_NBATTR
	VALUES ("4a907f08-37e8-4722-94ec-1cce1cf57a0b",
	"39ebe204-8316-467e-96c0-50181aec48be");
INSERT INTO O_BATTR
	VALUES ("4a907f08-37e8-4722-94ec-1cce1cf57a0b",
	"39ebe204-8316-467e-96c0-50181aec48be");
INSERT INTO O_ATTR
	VALUES ("4a907f08-37e8-4722-94ec-1cce1cf57a0b",
	"39ebe204-8316-467e-96c0-50181aec48be",
	"90683924-8bb0-4b06-b7e2-21cb264889bc",
	'Descrip',
	'Full Name: Event Data Item Description',
	'',
	'Descrip',
	0,
	"ba5eda7a-def5-0000-0000-000000000004",
	'',
	'');
INSERT INTO O_NBATTR
	VALUES ("42296d36-c063-4aa2-ac6c-dc51a8281183",
	"39ebe204-8316-467e-96c0-50181aec48be");
INSERT INTO O_BATTR
	VALUES ("42296d36-c063-4aa2-ac6c-dc51a8281183",
	"39ebe204-8316-467e-96c0-50181aec48be");
INSERT INTO O_ATTR
	VALUES ("42296d36-c063-4aa2-ac6c-dc51a8281183",
	"39ebe204-8316-467e-96c0-50181aec48be",
	"f1868131-8520-4e75-ac6b-b5ee7b23f259",
	'Dimensions',
	'Full Name: Array Dimensions',
	'',
	'Dimensions',
	0,
	"ba5eda7a-def5-0000-0000-000000000004",
	'',
	'');
INSERT INTO O_REF
	VALUES ("39ebe204-8316-467e-96c0-50181aec48be",
	"85bdf335-51a2-4603-b6af-19ba8f7a45e5",
	0,
	"cdb80faa-5a5c-42cb-a807-72e5ffcc371d",
	"49b926bd-9958-45a9-9117-a189352326f6",
	"48906e06-9b68-400c-b646-da72c036df3d",
	"d851bdd0-cf63-45c5-82de-6c4dc6c00ed7",
	"ad252689-58b9-424c-98c8-047028408ad2",
	"03ad9fdb-5eb8-4bc2-9774-4f82206da8e5",
	"00000000-0000-0000-0000-000000000000",
	0,
	'',
	'State Machine Event',
	'SMevt_ID',
	'R532.''carried by''');
INSERT INTO R_RGO_PROXY
	VALUES ("39ebe204-8316-467e-96c0-50181aec48be",
	"49b926bd-9958-45a9-9117-a189352326f6",
	"48906e06-9b68-400c-b646-da72c036df3d",
	'../State Machine.xtuml');
INSERT INTO O_RTIDA_PROXY
	VALUES ("cdb80faa-5a5c-42cb-a807-72e5ffcc371d",
	"85bdf335-51a2-4603-b6af-19ba8f7a45e5",
	0,
	"49b926bd-9958-45a9-9117-a189352326f6",
	"d851bdd0-cf63-45c5-82de-6c4dc6c00ed7",
	'../State Machine.xtuml');
INSERT INTO O_RATTR
	VALUES ("ad252689-58b9-424c-98c8-047028408ad2",
	"39ebe204-8316-467e-96c0-50181aec48be",
	"cdb80faa-5a5c-42cb-a807-72e5ffcc371d",
	"85bdf335-51a2-4603-b6af-19ba8f7a45e5",
	1,
	'SMevt_ID');
INSERT INTO O_BATTR_PROXY
	VALUES ("cdb80faa-5a5c-42cb-a807-72e5ffcc371d",
	"85bdf335-51a2-4603-b6af-19ba8f7a45e5",
	'../State Machine Event/State Machine Event.xtuml');
INSERT INTO O_ATTR
	VALUES ("ad252689-58b9-424c-98c8-047028408ad2",
	"39ebe204-8316-467e-96c0-50181aec48be",
	"42296d36-c063-4aa2-ac6c-dc51a8281183",
	'SMevt_ID',
	'',
	'',
	'SMevt_ID',
	0,
	"ba5eda7a-def5-0000-0000-000000000007",
	'',
	'');
INSERT INTO O_REF
	VALUES ("39ebe204-8316-467e-96c0-50181aec48be",
	"39ebe204-8316-467e-96c0-50181aec48be",
	0,
	"c67f8081-2c26-4e5a-80e4-53bef4674193",
	"8babb741-c0f3-477f-bc85-09123224e3ea",
	"17f9ace0-3661-4ebc-b371-26a385623793",
	"b284efbc-1bec-4767-9cb6-391480e3819f",
	"d31b8c6f-3605-486e-b579-0056d0310713",
	"8234a6c4-6e57-4194-b360-35644952b074",
	"00000000-0000-0000-0000-000000000000",
	0,
	'',
	'State Machine Event Data Item',
	'SMedi_ID',
	'R533.''succeeds''');
INSERT INTO O_RTIDA_PROXY
	VALUES ("c67f8081-2c26-4e5a-80e4-53bef4674193",
	"39ebe204-8316-467e-96c0-50181aec48be",
	0,
	"8babb741-c0f3-477f-bc85-09123224e3ea",
	"b284efbc-1bec-4767-9cb6-391480e3819f",
	'../State Machine.xtuml');
INSERT INTO O_RATTR
	VALUES ("d31b8c6f-3605-486e-b579-0056d0310713",
	"39ebe204-8316-467e-96c0-50181aec48be",
	"c67f8081-2c26-4e5a-80e4-53bef4674193",
	"39ebe204-8316-467e-96c0-50181aec48be",
	1,
	'SMedi_ID');
INSERT INTO O_ATTR
	VALUES ("d31b8c6f-3605-486e-b579-0056d0310713",
	"39ebe204-8316-467e-96c0-50181aec48be",
	"ad252689-58b9-424c-98c8-047028408ad2",
	'Previous_SMedi_ID',
	'',
	'Previous_',
	'SMedi_ID',
	1,
	"ba5eda7a-def5-0000-0000-000000000007",
	'',
	'');
INSERT INTO O_REF
	VALUES ("39ebe204-8316-467e-96c0-50181aec48be",
	"8e4aa370-0206-4cf0-a81e-edaf0e37466e",
	0,
	"35133802-1b64-4470-b677-760b79f4e5da",
	"4c8ef356-8934-4d97-9ac3-4c5484f56f98",
	"9151f7cc-cbad-4480-bd95-2477e7666795",
	"e4549ca8-4f9d-4c48-ab31-552c3756af19",
	"f1868131-8520-4e75-ac6b-b5ee7b23f259",
	"a9e360e5-e396-41e4-b565-7c15c8fb139b",
	"00000000-0000-0000-0000-000000000000",
	0,
	'',
	'Data Type',
	'DT_ID',
	'R524.''is defined by''');
INSERT INTO R_RGO_PROXY
	VALUES ("39ebe204-8316-467e-96c0-50181aec48be",
	"4c8ef356-8934-4d97-9ac3-4c5484f56f98",
	"9151f7cc-cbad-4480-bd95-2477e7666795",
	'../State Machine.xtuml');
INSERT INTO O_RTIDA_PROXY
	VALUES ("35133802-1b64-4470-b677-760b79f4e5da",
	"8e4aa370-0206-4cf0-a81e-edaf0e37466e",
	0,
	"4c8ef356-8934-4d97-9ac3-4c5484f56f98",
	"e4549ca8-4f9d-4c48-ab31-552c3756af19",
	'../State Machine.xtuml');
INSERT INTO O_RATTR
	VALUES ("f1868131-8520-4e75-ac6b-b5ee7b23f259",
	"39ebe204-8316-467e-96c0-50181aec48be",
	"6c0ac341-1d88-4650-b3fe-2c344b920ed1",
	"6af35b2a-8145-4e12-9330-bfc209409bb6",
	1,
	'Element_ID');
INSERT INTO O_BATTR_PROXY
	VALUES ("6c0ac341-1d88-4650-b3fe-2c344b920ed1",
	"6af35b2a-8145-4e12-9330-bfc209409bb6",
	'../../Packageable Element/Packageable Element/Packageable Element.xtuml');
INSERT INTO O_ATTR
	VALUES ("f1868131-8520-4e75-ac6b-b5ee7b23f259",
	"39ebe204-8316-467e-96c0-50181aec48be",
	"4a907f08-37e8-4722-94ec-1cce1cf57a0b",
	'DT_ID',
	'',
	'',
	'Element_ID',
	2,
	"ba5eda7a-def5-0000-0000-000000000007",
	'',
	'');
INSERT INTO O_ID
	VALUES (0,
	"39ebe204-8316-467e-96c0-50181aec48be");
INSERT INTO O_OIDA
	VALUES ("a3321e8d-2a6e-4906-be02-82ecc0256913",
	"39ebe204-8316-467e-96c0-50181aec48be",
	0,
	'SM_ID');
INSERT INTO O_OIDA
	VALUES ("c67f8081-2c26-4e5a-80e4-53bef4674193",
	"39ebe204-8316-467e-96c0-50181aec48be",
	0,
	'SMedi_ID');
INSERT INTO O_ID
	VALUES (1,
	"39ebe204-8316-467e-96c0-50181aec48be");
INSERT INTO O_ID
	VALUES (2,
	"39ebe204-8316-467e-96c0-50181aec48be");
INSERT INTO PE_PE
	VALUES ("39ebe204-8316-467e-96c0-50181aec48be",
	1,
	"3314c083-3e42-4dfd-8a60-9305d01957ef",
	"00000000-0000-0000-0000-000000000000",
	4);
INSERT INTO EP_PKG_PROXY
	VALUES ("3314c083-3e42-4dfd-8a60-9305d01957ef",
	"00000000-0000-0000-0000-000000000000",
	"2f3ea6a7-20e9-405c-b68c-7fba041e7daf",
	'State Machine',
	'Classes (O_OBJ) that have interesting behavior are given lifecycles. These lifecycles are described using state machines (SM_SM). A state machine consists of states, events, transitions and state actions. The state machine exists for each instance of the class for which it has been modeled (SM_ISM). A state machine can also be an assigner state machine (SM_ASM) of which only one can exists for all class instances. The purpose of the assigner state machine is to act as a single point of control through which competing requests are serialized.',
	501,
	'../State Machine.xtuml');
