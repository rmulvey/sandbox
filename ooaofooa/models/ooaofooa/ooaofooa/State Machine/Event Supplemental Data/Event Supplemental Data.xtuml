-- BP 7.1.6 content: ModelClass syschar: 3 persistence-version: 7.1.6

INSERT INTO O_OBJ
	VALUES ("c7bef657-8c46-4a09-b499-e99eb1f234d4",
	'Event Supplemental Data',
	518,
	'SM_SUPDT',
	'Each event (SM_EVT) may carry supplemental event data defined by state machine event data items (SM_EVTDI).  The supplemental data items for the event are defined by instances of supplemental data items (SM_SDI).

Events now locate their data across simple association R532.

Deprecated:true',
	"00000000-0000-0000-0000-000000000000");
INSERT INTO O_TFR
	VALUES ("cf6153b8-5f73-4b83-8704-0ef8a176d0f5",
	"c7bef657-8c46-4a09-b499-e99eb1f234d4",
	'dispose',
	'Dispose of this SM_SUPDT.
',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'select many states related by self->SM_STATE[R521];
for each state in states
  unrelate self from state across R521;
end for;
select one sm related by self->SM_SM[R523];
if(not_empty sm)
  unrelate self from sm across R523;
end if;
select many sdis related by self->SM_SDI[ R522];
for each sdi in sdis
  sdi.dispose();
end for;
select many events related by self->SM_EVT[R520];
for each event in events
  unrelate self from event across R520;
end for;
delete object instance self;


',
	1,
	'',
	"00000000-0000-0000-0000-000000000000");
INSERT INTO O_TFR
	VALUES ("e77e507b-1462-41d0-8648-a1ad33ae2d4b",
	"c7bef657-8c46-4a09-b499-e99eb1f234d4",
	'get_name',
	'',
	"ba5eda7a-def5-0000-0000-000000000004",
	1,
	'select many edi_set related by self->SM_EVTDI[R522];
if ( self.Non_Local )
  select any nlevt related by self->SM_EVT[R520]->SM_SEVT[R525]->SM_NLEVT[R526];
  select one pevtdi related by nlevt->SM_PEVT[R527]->SM_EVT[R525]->SM_SUPDT[R520];;
  select many edi_set related by pevtdi->SM_EVTDI[R522];
end if;
result = "(";
first = true;
for each edi in edi_set
  if ( not first )
    result = result + ",";
  end if;
  result = result + edi.Name;
  first = false;
end for;
return result + ")";
',
	1,
	'',
	"f7e11f8f-070e-488e-97c9-de1bcfbe0288");
INSERT INTO O_TFR
	VALUES ("f7e11f8f-070e-488e-97c9-de1bcfbe0288",
	"c7bef657-8c46-4a09-b499-e99eb1f234d4",
	'findWithChangedData',
	'',
	"ba5eda7a-def5-0000-0000-000000000005",
	1,
	'select many my_sdi related by self->SM_SDI[R522];
select many other_supdt_set related by self->SM_SM[R523]->SM_SUPDT[R523]
    where selected.SMspd_ID != self.SMspd_ID;
if ( param.addToSet )
  for each other_supdt in other_supdt_set
    select many other_sdi_set related by other_supdt->SM_SDI[R522];
    if ( cardinality other_sdi_set - 1 == cardinality my_sdi )
      found_all = true;
      for each other_sdi in other_sdi_set
        found = false;
        for each sdi in my_sdi
          if ( other_sdi.SMedi_ID == sdi.SMedi_ID )
            found = true;
            break;
          end if;
        end for;  // for each sdi 
        if ( not found )
          if ( other_sdi.SMedi_ID != param.data )
            found_all = false;
            break;
          end if;
        end if;
      end for;  // for each other_sdi
      if ( found_all )
        return other_supdt.SMspd_ID;
      end if;
    end if;
  end for;
else
  for each other_supdt in other_supdt_set
    select many other_sdi_set related by other_supdt->SM_SDI[R522];
    if ( cardinality other_sdi_set + 1 == cardinality my_sdi )
      found_all = true;
      for each sdi in my_sdi
        found = false;
        for each other_sdi in other_sdi_set
          if ( other_sdi.SMedi_ID == sdi.SMedi_ID )
            found = true;
            break;
          end if;
        end for;  // for each other_sdi
        if ( not found )
          if ( sdi.SMedi_ID != param.data )
            found_all = false;
            break;
          end if;
        end if;
      end for;  // for each sdi
      if ( found_all )
        return other_supdt.SMspd_ID;
      end if;
    end if;
  end for;
end if;
return GD::NULL_UNIQUE_ID();
',
	1,
	'',
	"cf6153b8-5f73-4b83-8704-0ef8a176d0f5");
INSERT INTO O_TPARM
	VALUES ("8e8796ad-f8bd-4787-bcc7-d7a782986e85",
	"f7e11f8f-070e-488e-97c9-de1bcfbe0288",
	'data',
	"ba5eda7a-def5-0000-0000-000000000005",
	0,
	'',
	"08dae239-d424-49ad-8fb3-92bfde358302",
	'');
INSERT INTO O_TPARM
	VALUES ("08dae239-d424-49ad-8fb3-92bfde358302",
	"f7e11f8f-070e-488e-97c9-de1bcfbe0288",
	'addToSet',
	"ba5eda7a-def5-0000-0000-000000000001",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO O_NBATTR
	VALUES ("687f0a3c-0ce1-40b3-a498-b18d64de5cc5",
	"c7bef657-8c46-4a09-b499-e99eb1f234d4");
INSERT INTO O_BATTR
	VALUES ("687f0a3c-0ce1-40b3-a498-b18d64de5cc5",
	"c7bef657-8c46-4a09-b499-e99eb1f234d4");
INSERT INTO O_ATTR
	VALUES ("687f0a3c-0ce1-40b3-a498-b18d64de5cc5",
	"c7bef657-8c46-4a09-b499-e99eb1f234d4",
	"00000000-0000-0000-0000-000000000000",
	'SMspd_ID',
	'Full Name: Event Supplemental Data Identifier',
	'',
	'SMspd_ID',
	0,
	"ba5eda7a-def5-0000-0000-000000000005",
	'',
	'');
INSERT INTO O_REF
	VALUES ("c7bef657-8c46-4a09-b499-e99eb1f234d4",
	"a1150e32-8c3e-4e21-8295-75b0c795b02d",
	0,
	"918c8926-3597-4f97-bdc4-a65cf9de1666",
	"d0195ced-7077-4615-b7f3-470133db619a",
	"44a99f79-72f8-4c68-8e1b-a721caf47fbc",
	"2b00b740-73a8-467e-8a0f-e79b40f0d8a7",
	"db24c693-2dba-4ec2-9495-6a4c92a23d6c",
	"540f648c-4938-4f43-be4e-a3bd680a60d0",
	"00000000-0000-0000-0000-000000000000",
	0,
	'',
	'State Machine',
	'SM_ID',
	'R523.''is assigned to''');
INSERT INTO R_RGO_PROXY
	VALUES ("c7bef657-8c46-4a09-b499-e99eb1f234d4",
	"d0195ced-7077-4615-b7f3-470133db619a",
	"44a99f79-72f8-4c68-8e1b-a721caf47fbc",
	'../State Machine.xtuml');
INSERT INTO O_RTIDA_PROXY
	VALUES ("918c8926-3597-4f97-bdc4-a65cf9de1666",
	"a1150e32-8c3e-4e21-8295-75b0c795b02d",
	0,
	"d0195ced-7077-4615-b7f3-470133db619a",
	"2b00b740-73a8-467e-8a0f-e79b40f0d8a7",
	'../State Machine.xtuml');
INSERT INTO O_RATTR
	VALUES ("db24c693-2dba-4ec2-9495-6a4c92a23d6c",
	"c7bef657-8c46-4a09-b499-e99eb1f234d4",
	"918c8926-3597-4f97-bdc4-a65cf9de1666",
	"a1150e32-8c3e-4e21-8295-75b0c795b02d",
	1,
	'SM_ID');
INSERT INTO O_BATTR_PROXY
	VALUES ("918c8926-3597-4f97-bdc4-a65cf9de1666",
	"a1150e32-8c3e-4e21-8295-75b0c795b02d",
	'../State Machine/State Machine.xtuml');
INSERT INTO O_ATTR
	VALUES ("db24c693-2dba-4ec2-9495-6a4c92a23d6c",
	"c7bef657-8c46-4a09-b499-e99eb1f234d4",
	"687f0a3c-0ce1-40b3-a498-b18d64de5cc5",
	'SM_ID',
	'',
	'',
	'SM_ID',
	0,
	"ba5eda7a-def5-0000-0000-000000000007",
	'',
	'');
INSERT INTO O_DBATTR
	VALUES ("bc177b4f-3868-4e91-96bc-6c5c595c69f8",
	"c7bef657-8c46-4a09-b499-e99eb1f234d4",
	'select any nlevt related by self->SM_EVT[R520]->SM_SEVT[R525]->SM_NLEVT[R526];
self.Non_Local = not_empty nlevt;
',
	1);
INSERT INTO O_BATTR
	VALUES ("bc177b4f-3868-4e91-96bc-6c5c595c69f8",
	"c7bef657-8c46-4a09-b499-e99eb1f234d4");
INSERT INTO O_ATTR
	VALUES ("bc177b4f-3868-4e91-96bc-6c5c595c69f8",
	"c7bef657-8c46-4a09-b499-e99eb1f234d4",
	"db24c693-2dba-4ec2-9495-6a4c92a23d6c",
	'Non_Local',
	'Full Name: Non local event indicator
Description: This attribute captures that the event supplemental data is for a non-local event.
User_Visible:false',
	'',
	'Non_Local',
	0,
	"ba5eda7a-def5-0000-0000-000000000001",
	'',
	'');
INSERT INTO O_ID
	VALUES (0,
	"c7bef657-8c46-4a09-b499-e99eb1f234d4");
INSERT INTO O_OIDA
	VALUES ("687f0a3c-0ce1-40b3-a498-b18d64de5cc5",
	"c7bef657-8c46-4a09-b499-e99eb1f234d4",
	0,
	'SMspd_ID');
INSERT INTO O_OIDA
	VALUES ("db24c693-2dba-4ec2-9495-6a4c92a23d6c",
	"c7bef657-8c46-4a09-b499-e99eb1f234d4",
	0,
	'SM_ID');
INSERT INTO O_ID
	VALUES (1,
	"c7bef657-8c46-4a09-b499-e99eb1f234d4");
INSERT INTO O_ID
	VALUES (2,
	"c7bef657-8c46-4a09-b499-e99eb1f234d4");
INSERT INTO PE_PE
	VALUES ("c7bef657-8c46-4a09-b499-e99eb1f234d4",
	1,
	"3314c083-3e42-4dfd-8a60-9305d01957ef",
	"00000000-0000-0000-0000-000000000000",
	4);
INSERT INTO EP_PKG_PROXY
	VALUES ("3314c083-3e42-4dfd-8a60-9305d01957ef",
	"00000000-0000-0000-0000-000000000000",
	"2f3ea6a7-20e9-405c-b68c-7fba041e7daf",
	'State Machine',
	'Classes (O_OBJ) that have interesting behavior are given lifecycles. These lifecycles are described using state machines (SM_SM). A state machine consists of states, events, transitions and state actions. The state machine exists for each instance of the class for which it has been modeled (SM_ISM). A state machine can also be an assigner state machine (SM_ASM) of which only one can exists for all class instances. The purpose of the assigner state machine is to act as a single point of control through which competing requests are serialized.',
	501,
	'../State Machine.xtuml');
