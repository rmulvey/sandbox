-- BP 7.1.6 content: ModelClass syschar: 3 persistence-version: 7.1.6

INSERT INTO O_OBJ
	VALUES ("0a369991-13ff-4b2c-8d7d-b2e88d927643",
	'Select From Instances',
	612,
	'ACT_FIO',
	'This class represents a statement that selects a set of  instances from a class extent.',
	"00000000-0000-0000-0000-000000000000");
INSERT INTO O_TFR
	VALUES ("4e168674-d770-4b3f-8219-4197d9ccb21c",
	"0a369991-13ff-4b2c-8d7d-b2e88d927643",
	'dispose',
	'This operation disconnects an instance, and all instances it is 
responsible for, from the model.',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'select one obj related by self->O_OBJ[R677];
if ( not_empty obj )
  unrelate self from obj across R677;
end if;

select one var related by self->V_VAR[R639];
if ( not_empty var )
  unrelate self from var across R639;
  if ( not var.Declared )
    var.dispose();
  end if;
end if;
delete object instance self;

',
	1,
	'',
	"00000000-0000-0000-0000-000000000000");
INSERT INTO O_TFR
	VALUES ("2d234064-8296-4fea-b60a-44a272c5bdf2",
	"0a369991-13ff-4b2c-8d7d-b2e88d927643",
	'execute',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'// Select From Instances.execute()
select one body related by self->ACT_SMT[R603]->ACT_BLK[R602]->ACT_ACT[R601];
// Grab the stack frame
select any stack_frame from instances of I_STF where (selected.Stack_Frame_ID == param.stack_frame_id);
if (empty stack_frame)
  //Invalid stack frame ID!
  pathMsg = "<No Path Available - Empty instance>";
    if (not_empty body)
      pathMsg = body.getPath();
    end if;
	USER::logError(msg:"Error in Select From Instances.execute: Invalid stack frame id used. Using random top stack frame.",path:pathMsg);
  select any stack from instances of I_STACK;
  select one stack_frame related by stack->I_STF[R2929];
end if;
  
select one engine related by stack_frame->I_STACK[R2943]->I_EXE[R2930];
  
if (self.cardinality == "many")
  select many cies related by self->O_OBJ[R677]->CSME_CIE[R2961]
             where (selected.Execution_Engine_ID == engine.Execution_Engine_ID);
  select many insts related by cies->I_INS[R2962];
  select one inst_set related by self->V_VAR[R639]->V_INS[R814];

  if (self.is_implicit)
    // Create the selection result instance reference
    // in the scope of the enclosing block
    select one block related by self->ACT_SMT[R603]->ACT_BLK[R602];
    ref_ID = block.newLocalReference(stack_frame_id: param.stack_frame_id);
    select any local_ref related by block->I_BSF[R2923]->L_LCL[R3000]->L_LCR[R3001] where
                                                  (selected.Local_ID == ref_ID);
    relate inst_set to local_ref across R3003;
  end if;

  // Get the right local reference for this instance set in this block in stack frame

  // Set value to this block with the right type so we can use it later.  The value here is useless.
  select any local_ref from instances of L_LCR;

  // Get all of the block in stack frames that exist for the stack frame
  select many block_in_stack_frames related by stack_frame->I_BSF[R2923];
  for each block_in_stack_frame in block_in_stack_frames

    // Find the one local reference that matches the block in stack frame where we are executing for the transient variable we want to assign
    select any local_ref related by block_in_stack_frame->L_LCL[R3000]->L_LCR[R3001] where selected.Var_ID == inst_set.Var_ID;
    if (not_empty local_ref)
      // We found the 1 local reference in this stack frame for this instance handle id.  So stop looking.
      // All of this was necessary in order to support nested blocks that reference variables that were created in outer blocks in this stack frame
    
      // WARNING: This implementation is based on the Object Action Language definition that existed in November of 2005.
      //          If the language is changed to become a strongly typed language where a user can define a variable in an inner block with the same
      //          name as something that exists in the outer block, then this implementation will not work because it does not walk out of the current
      //          block.
      break;
    end if;
  end for;
    
  select many staleInsts related by inst_set->L_LCR[R3003]->L_LCL[R3001]->
        RV_RVL[R3306]->RV_SMV[R3300]->RV_IRV[R3308]->L_IIR[R3311]->I_INS[R3013];
  for each inst in staleInsts
    local_ref.purge(inst_id:inst.Inst_ID);
  end for;
  for each inst in insts
    local_ref.addInstance(inst_id:inst.Inst_ID);
  end for;
  
else  // Cardinality is either any or one

  select many cies related by self->O_OBJ[R677]->CSME_CIE[R2961]
             where (selected.Execution_Engine_ID == engine.Execution_Engine_ID);
  select any inst related by cies->I_INS[R2962];
  select one instHandle related by self->V_VAR[R639]->V_INT[R814];

  if (self.is_implicit)
    // Create the selection result instance reference
    // in the scope of the enclosing block
    select one block related by self->ACT_SMT[R603]->ACT_BLK[R602];
    ref_ID = block.newLocalReference(stack_frame_id: stack_frame.Stack_Frame_ID);
    select any local_ref related by block->I_BSF[R2923]->L_LCL[R3000]->
                               L_LCR[R3001] where (selected.Local_ID == ref_ID);
    relate instHandle to local_ref across R3004;
  end if;

  // Get the right local reference handle again because the relationship we
  // just made is now out of scope

  // Set value to this block with the right type so we can use it later.
  //  The value here is useless.
  select any local_ref from instances of L_LCR;

  // Get all of the block in stack frames that exist for the stack frame
  select many block_in_stack_frames related by stack_frame->I_BSF[R2923];
  for each block_in_stack_frame in block_in_stack_frames

    // Find the one local value that matches the block in stack frame where
    // we are executing for the transient variable we want to assign
    select any local_ref related by block_in_stack_frame->L_LCL[R3000]->
                        L_LCR[R3001] where selected.Var_ID == instHandle.Var_ID;
    if (not_empty local_ref)
      // We found the 1 local reference in this stack frame for this instance
      // handle id.  So stop looking.
      // All of this was necessary in order to support nested blocks that
      // reference variables that were created in outer blocks in this stack
      // frame
    
      // WARNING: This implementation is based on the Object Action Language
      // definition that existed in November of 2005.
      // If the language is changed to become a strongly typed language where
      // a user can define a variable in an inner block with the same
      // name as something that exists in the outer block, then this
      // implementation will not work because it does not walk out of the
      // current block.
      break;
    end if;
  end for;

  select many staleInsts related by instHandle->
         L_LCR[R3004]->L_LCL[R3001]->RV_RVL[R3306]->RV_SMV[R3300]->
                                      RV_IRV[R3308]->L_IIR[R3311]->I_INS[R3013];
  for each inst in staleInsts
    local_ref.purge(inst_id:inst.Inst_ID);
  end for;
  if (not_empty inst)
    local_ref.addInstance(inst_id:inst.Inst_ID);
  end if;
end if;',
	1,
	'',
	"4e168674-d770-4b3f-8219-4197d9ccb21c");
INSERT INTO O_TPARM
	VALUES ("e0c5ca25-4e8b-4a99-88dd-33a54b99be8c",
	"2d234064-8296-4fea-b60a-44a272c5bdf2",
	'stack_frame_id',
	"ba5eda7a-def5-0000-0000-000000000005",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO O_REF
	VALUES ("0a369991-13ff-4b2c-8d7d-b2e88d927643",
	"4f42b756-0c2e-4a87-b40f-87291682433c",
	0,
	"9bdc49e0-583c-4741-ad6c-fa52d80977a5",
	"df5d83da-30d6-4d47-b2e9-e0558c45efd8",
	"b619f469-b5eb-4c2e-b1fe-b74ee48846a3",
	"7558839e-e4fb-46e4-97b0-decfec373abb",
	"40a63b5c-21aa-46bf-be16-db8598a401b4",
	"23b2036c-9151-4a69-b18a-6036aefb3e6a",
	"00000000-0000-0000-0000-000000000000",
	0,
	'',
	'Statement',
	'Statement_ID',
	'R603');
INSERT INTO R_RGO_PROXY
	VALUES ("0a369991-13ff-4b2c-8d7d-b2e88d927643",
	"df5d83da-30d6-4d47-b2e9-e0558c45efd8",
	"b619f469-b5eb-4c2e-b1fe-b74ee48846a3",
	'../../Body/Body.xtuml');
INSERT INTO O_RTIDA_PROXY
	VALUES ("9bdc49e0-583c-4741-ad6c-fa52d80977a5",
	"4f42b756-0c2e-4a87-b40f-87291682433c",
	0,
	"df5d83da-30d6-4d47-b2e9-e0558c45efd8",
	"7558839e-e4fb-46e4-97b0-decfec373abb",
	'../../Body/Body.xtuml');
INSERT INTO O_RATTR
	VALUES ("40a63b5c-21aa-46bf-be16-db8598a401b4",
	"0a369991-13ff-4b2c-8d7d-b2e88d927643",
	"9bdc49e0-583c-4741-ad6c-fa52d80977a5",
	"4f42b756-0c2e-4a87-b40f-87291682433c",
	1,
	'Statement_ID');
INSERT INTO O_BATTR_PROXY
	VALUES ("9bdc49e0-583c-4741-ad6c-fa52d80977a5",
	"4f42b756-0c2e-4a87-b40f-87291682433c",
	'../../Body/Statement/Statement.xtuml');
INSERT INTO O_ATTR
	VALUES ("40a63b5c-21aa-46bf-be16-db8598a401b4",
	"0a369991-13ff-4b2c-8d7d-b2e88d927643",
	"00000000-0000-0000-0000-000000000000",
	'Statement_ID',
	'

',
	'',
	'Statement_ID',
	0,
	"ba5eda7a-def5-0000-0000-000000000007",
	'',
	'');
INSERT INTO O_REF
	VALUES ("0a369991-13ff-4b2c-8d7d-b2e88d927643",
	"f8c82d33-e7c5-4fb7-8c3c-77b2a47feca7",
	0,
	"5b3f451e-a4bf-4d7c-97db-547eae3c84ae",
	"a3c54996-9382-4b66-9b77-b727ef528f7a",
	"e24ebc31-b47d-485f-a5f3-348bb092222e",
	"7b670477-e3a4-401d-8dc5-9d93dce38cdc",
	"a4024885-a97c-4465-b1b2-9ab290889ec0",
	"1dcdea0e-65e5-4e2f-8c2e-416ec6663544",
	"00000000-0000-0000-0000-000000000000",
	0,
	'',
	'Variable',
	'Var_ID',
	'R639.''selection''');
INSERT INTO R_RGO_PROXY
	VALUES ("0a369991-13ff-4b2c-8d7d-b2e88d927643",
	"a3c54996-9382-4b66-9b77-b727ef528f7a",
	"e24ebc31-b47d-485f-a5f3-348bb092222e",
	'../Selection.xtuml');
INSERT INTO O_RTIDA_PROXY
	VALUES ("5b3f451e-a4bf-4d7c-97db-547eae3c84ae",
	"f8c82d33-e7c5-4fb7-8c3c-77b2a47feca7",
	0,
	"a3c54996-9382-4b66-9b77-b727ef528f7a",
	"7b670477-e3a4-401d-8dc5-9d93dce38cdc",
	'../Selection.xtuml');
INSERT INTO O_RATTR
	VALUES ("a4024885-a97c-4465-b1b2-9ab290889ec0",
	"0a369991-13ff-4b2c-8d7d-b2e88d927643",
	"5b3f451e-a4bf-4d7c-97db-547eae3c84ae",
	"f8c82d33-e7c5-4fb7-8c3c-77b2a47feca7",
	1,
	'Var_ID');
INSERT INTO O_BATTR_PROXY
	VALUES ("5b3f451e-a4bf-4d7c-97db-547eae3c84ae",
	"f8c82d33-e7c5-4fb7-8c3c-77b2a47feca7",
	'../../Value/Variable/Variable.xtuml');
INSERT INTO O_ATTR
	VALUES ("a4024885-a97c-4465-b1b2-9ab290889ec0",
	"0a369991-13ff-4b2c-8d7d-b2e88d927643",
	"40a63b5c-21aa-46bf-be16-db8598a401b4",
	'Var_ID',
	'

',
	'',
	'Var_ID',
	0,
	"ba5eda7a-def5-0000-0000-000000000007",
	'',
	'');
INSERT INTO O_NBATTR
	VALUES ("aa88483e-6dc6-4786-b061-3e89b4dd6e51",
	"0a369991-13ff-4b2c-8d7d-b2e88d927643");
INSERT INTO O_BATTR
	VALUES ("aa88483e-6dc6-4786-b061-3e89b4dd6e51",
	"0a369991-13ff-4b2c-8d7d-b2e88d927643");
INSERT INTO O_ATTR
	VALUES ("aa88483e-6dc6-4786-b061-3e89b4dd6e51",
	"0a369991-13ff-4b2c-8d7d-b2e88d927643",
	"a4024885-a97c-4465-b1b2-9ab290889ec0",
	'is_implicit',
	'Full Name: Is Implicit
Specifies whether the resulting instance handle found is being used for the first time in this scope or not.',
	'',
	'is_implicit',
	0,
	"ba5eda7a-def5-0000-0000-000000000001",
	'',
	'');
INSERT INTO O_NBATTR
	VALUES ("556cea02-fa6c-4101-a3d0-409dabcbfa7a",
	"0a369991-13ff-4b2c-8d7d-b2e88d927643");
INSERT INTO O_BATTR
	VALUES ("556cea02-fa6c-4101-a3d0-409dabcbfa7a",
	"0a369991-13ff-4b2c-8d7d-b2e88d927643");
INSERT INTO O_ATTR
	VALUES ("556cea02-fa6c-4101-a3d0-409dabcbfa7a",
	"0a369991-13ff-4b2c-8d7d-b2e88d927643",
	"aa88483e-6dc6-4786-b061-3e89b4dd6e51",
	'cardinality',
	'Full Name: Selection Cardinality
Specifies whether the selection produces a set or an instance as a result.    The cardinality value can be one of the following: one, any, or many.',
	'',
	'cardinality',
	0,
	"ba5eda7a-def5-0000-0000-000000000004",
	'',
	'');
INSERT INTO O_NBATTR
	VALUES ("1097f830-dbca-4427-8f95-c15549436802",
	"0a369991-13ff-4b2c-8d7d-b2e88d927643");
INSERT INTO O_BATTR
	VALUES ("1097f830-dbca-4427-8f95-c15549436802",
	"0a369991-13ff-4b2c-8d7d-b2e88d927643");
INSERT INTO O_ATTR
	VALUES ("1097f830-dbca-4427-8f95-c15549436802",
	"0a369991-13ff-4b2c-8d7d-b2e88d927643",
	"6e7d7565-6475-43a0-aecb-bb354cda32ab",
	'extentLineNumber',
	'',
	'',
	'extentLineNumber',
	0,
	"ba5eda7a-def5-0000-0000-000000000002",
	'',
	'');
INSERT INTO O_NBATTR
	VALUES ("78d0aea1-095d-4562-afa1-2d3bf3ede1a4",
	"0a369991-13ff-4b2c-8d7d-b2e88d927643");
INSERT INTO O_BATTR
	VALUES ("78d0aea1-095d-4562-afa1-2d3bf3ede1a4",
	"0a369991-13ff-4b2c-8d7d-b2e88d927643");
INSERT INTO O_ATTR
	VALUES ("78d0aea1-095d-4562-afa1-2d3bf3ede1a4",
	"0a369991-13ff-4b2c-8d7d-b2e88d927643",
	"1097f830-dbca-4427-8f95-c15549436802",
	'extentColumn',
	'',
	'',
	'extentColumn',
	0,
	"ba5eda7a-def5-0000-0000-000000000002",
	'',
	'');
INSERT INTO O_REF
	VALUES ("0a369991-13ff-4b2c-8d7d-b2e88d927643",
	"62b192ed-f270-47e4-8624-0b8083c5e152",
	0,
	"17d86b5f-0053-47ae-8312-48e5145617f0",
	"fb836178-7bf3-4c71-b964-2ee1aada281c",
	"b0d4daa7-5561-4575-9df6-32b944a4b730",
	"11ff1702-48b3-467b-9115-1d788e1e3dee",
	"6e7d7565-6475-43a0-aecb-bb354cda32ab",
	"6dca9047-e067-4ca7-a9a0-faa10fe9e814",
	"00000000-0000-0000-0000-000000000000",
	0,
	'',
	'Model Class',
	'Obj_ID',
	'R677.''from extent of''');
INSERT INTO R_RGO_PROXY
	VALUES ("0a369991-13ff-4b2c-8d7d-b2e88d927643",
	"fb836178-7bf3-4c71-b964-2ee1aada281c",
	"b0d4daa7-5561-4575-9df6-32b944a4b730",
	'../Selection.xtuml');
INSERT INTO O_RTIDA_PROXY
	VALUES ("17d86b5f-0053-47ae-8312-48e5145617f0",
	"62b192ed-f270-47e4-8624-0b8083c5e152",
	0,
	"fb836178-7bf3-4c71-b964-2ee1aada281c",
	"11ff1702-48b3-467b-9115-1d788e1e3dee",
	'../Selection.xtuml');
INSERT INTO O_RATTR
	VALUES ("6e7d7565-6475-43a0-aecb-bb354cda32ab",
	"0a369991-13ff-4b2c-8d7d-b2e88d927643",
	"6c0ac341-1d88-4650-b3fe-2c344b920ed1",
	"6af35b2a-8145-4e12-9330-bfc209409bb6",
	1,
	'Element_ID');
INSERT INTO O_BATTR_PROXY
	VALUES ("6c0ac341-1d88-4650-b3fe-2c344b920ed1",
	"6af35b2a-8145-4e12-9330-bfc209409bb6",
	'../../Packageable Element/Packageable Element/Packageable Element.xtuml');
INSERT INTO O_ATTR
	VALUES ("6e7d7565-6475-43a0-aecb-bb354cda32ab",
	"0a369991-13ff-4b2c-8d7d-b2e88d927643",
	"556cea02-fa6c-4101-a3d0-409dabcbfa7a",
	'Obj_ID',
	'',
	'',
	'Obj_ID',
	0,
	"ba5eda7a-def5-0000-0000-000000000007",
	'',
	'');
INSERT INTO O_ID
	VALUES (0,
	"0a369991-13ff-4b2c-8d7d-b2e88d927643");
INSERT INTO O_OIDA
	VALUES ("40a63b5c-21aa-46bf-be16-db8598a401b4",
	"0a369991-13ff-4b2c-8d7d-b2e88d927643",
	0,
	'Statement_ID');
INSERT INTO O_ID
	VALUES (1,
	"0a369991-13ff-4b2c-8d7d-b2e88d927643");
INSERT INTO O_ID
	VALUES (2,
	"0a369991-13ff-4b2c-8d7d-b2e88d927643");
INSERT INTO PE_PE
	VALUES ("0a369991-13ff-4b2c-8d7d-b2e88d927643",
	1,
	"506c7424-c813-4e1c-8551-b157c3aa6f07",
	"00000000-0000-0000-0000-000000000000",
	4);
INSERT INTO EP_PKG_PROXY
	VALUES ("506c7424-c813-4e1c-8551-b157c3aa6f07",
	"00000000-0000-0000-0000-000000000000",
	"2f3ea6a7-20e9-405c-b68c-7fba041e7daf",
	'Selection',
	'This subsystem captures concepts related to selections of instances across associations. Association chain, where and instance extent selections are also covered.
Notify_Changes:false
Persistent:false
// This is used by schema_gen to ignore this subsystem (for publication)
TRANSLATE_FOR_EXTERNAL_USE:FALSE
',
	600,
	'../Selection.xtuml');
